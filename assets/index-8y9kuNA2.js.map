{"version":3,"file":"index-8y9kuNA2.js","sources":["../../node_modules/three-stdlib/controls/EventDispatcher.js","../../node_modules/three-stdlib/controls/OrbitControls.js","../../node_modules/@react-three/drei/core/OrbitControls.js","../../src/Components/LabsScene/index.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass EventDispatcher {\n  constructor() {\n    // not defined in @types/three\n    __publicField(this, \"_listeners\");\n  }\n  /**\n   * Adds a listener to an event type.\n   * @param type The type of event to listen to.\n   * @param listener The function that gets called when the event is fired.\n   */\n  addEventListener(type, listener) {\n    if (this._listeners === void 0)\n      this._listeners = {};\n    const listeners = this._listeners;\n    if (listeners[type] === void 0) {\n      listeners[type] = [];\n    }\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  }\n  /**\n      * Checks if listener is added to an event type.\n      * @param type The type of event to listen to.\n      * @param listener The function that gets called when the event is fired.\n      */\n  hasEventListener(type, listener) {\n    if (this._listeners === void 0)\n      return false;\n    const listeners = this._listeners;\n    return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;\n  }\n  /**\n      * Removes a listener from an event type.\n      * @param type The type of the listener that gets removed.\n      * @param listener The listener function that gets removed.\n      */\n  removeEventListener(type, listener) {\n    if (this._listeners === void 0)\n      return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n    if (listenerArray !== void 0) {\n      const index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n  /**\n      * Fire an event type.\n      * @param event The event that gets fired.\n      */\n  dispatchEvent(event) {\n    if (this._listeners === void 0)\n      return;\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n    if (listenerArray !== void 0) {\n      event.target = this;\n      const array = listenerArray.slice(0);\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n      event.target = null;\n    }\n  }\n}\nexport {\n  EventDispatcher\n};\n//# sourceMappingURL=EventDispatcher.js.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, MOUSE, TOUCH, Quaternion, PerspectiveCamera, OrthographicCamera, Spherical, Vector2, Ray, Plane } from \"three\";\nimport { EventDispatcher } from \"./EventDispatcher.js\";\nconst _ray = /* @__PURE__ */ new Ray();\nconst _plane = /* @__PURE__ */ new Plane();\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180));\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    __publicField(this, \"zoomToCursor\", false);\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    // Not used in most scenarios, however they can be useful for specific use cases\n    __publicField(this, \"getZoomScale\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    // Dolly in programmatically\n    __publicField(this, \"dollyIn\");\n    // Dolly out programmatically\n    __publicField(this, \"dollyOut\");\n    // Get the current scale\n    __publicField(this, \"getScale\");\n    // Set the current scale (these are not used in most scenarios, however they can be useful for specific use cases)\n    __publicField(this, \"setScale\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        if (!scope.object.matrixAutoUpdate)\n          scope.object.updateMatrix();\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\");\n            scope.zoomToCursor = false;\n          }\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1;\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n          }\n        }\n        scale = 1;\n        performCursorZoom = false;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerUp);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = \"auto\";\n      }\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerUp);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function setScale(newScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera || scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scale = newScale;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyOut(dollyScale) {\n      setScale(scale / dollyScale);\n    }\n    function dollyIn(dollyScale) {\n      setScale(scale * dollyScale);\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    this.dollyIn = (dollyScale = getZoomScale()) => {\n      dollyIn(dollyScale);\n      scope.update();\n    };\n    this.dollyOut = (dollyScale = getZoomScale()) => {\n      dollyOut(dollyScale);\n      scope.update();\n    };\n    this.getScale = () => {\n      return scale;\n    };\n    this.setScale = (newScale) => {\n      setScale(newScale);\n      scope.update();\n    };\n    this.getZoomScale = () => {\n      return getZoomScale();\n    };\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n//# sourceMappingURL=OrbitControls.js.map\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  keyEvents = false,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    if (keyEvents) {\n      controls.connect(keyEvents === true ? explDomElement : keyEvents);\n    }\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [keyEvents, explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('change', callback);\n    controls.addEventListener('start', onStartCb);\n    controls.addEventListener('end', onEndCb);\n    return () => {\n      controls.removeEventListener('start', onStartCb);\n      controls.removeEventListener('end', onEndCb);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","import { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { LoadDetector } from \"3D/LoadDetector\";\nimport { OptionalChildren } from \"Tools/Types\";\n\nexport const LabsScene = ({ children }: OptionalChildren) => {\n  return (\n    <Canvas gl={{ antialias: true, alpha: true }}>\n      <LoadDetector />\n      <Suspense>{children}</Suspense>\n    </Canvas>\n  );\n};\n"],"names":["__defProp","Object","defineProperty","__publicField","obj","key","value","enumerable","configurable","writable","__defNormalProp","EventDispatcher","constructor","this","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_ray","Ray","_plane","Plane","TILT_LIMIT","Math","cos","PI","moduloWrapAround","offset","capacity","object","domElement","Vector3","Infinity","LEFT","UP","RIGHT","BOTTOM","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","onKeyDown","_domElementKeyEvents","stopListenToKeyEvents","saveState","copy","reset","updateProjectionMatrix","changeEvent","state","STATE","NONE","up","quat","Quaternion","setFromUnitVectors","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","autoRotateSpeed","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","addScaledVector","panOffset","add","zoomToCursor","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","matrixAutoUpdate","updateMatrix","lookAt","multiplyScalar","set","zoomChanged","newRadius","PerspectiveCamera","isPerspectiveCamera","prevRadius","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","minZoom","maxZoom","mouseAfter","console","warn","screenSpacePanning","transformDirection","matrix","origin","direction","dot","setFromNormalAndCoplanarPoint","intersectPlane","OrthographicCamera","distanceToSquared","EPS","quaternion","connect","style","touchAction","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","dispose","_a","_b","_c","_d","_e","_f","ownerDocument","onPointerMove","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","reverseHorizontalOrbit","rotateUp","reverseVerticalOrbit","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","enablePan","setScale","newScale","enableZoom","dollyOut","dollyScale","dollyIn","updateMouseParameters","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","minDistance","maxDistance","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","rotateSpeed","handleTouchMovePan","panSpeed","handleTouchMoveDolly","enabled","addPointer","pointerType","trackPointer","touches","enableRotate","DOLLY_ROTATE","onTouchStart","mouseAction","button","mouseButtons","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","pointerId","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","keys","keyPanSpeed","handleKeyDown","pointer","getScale","OrbitControls","React.forwardRef","forwardRef","ref","makeDefault","camera","regress","keyEvents","onChange","onStart","onEnd","restProps","__objRest","invalidate","useThree","defaultCamera","gl","events","setEvents","get","performance","explCamera","explDomElement","connected","controls","React.useMemo","useMemo","OrbitControls$1","React.createElement","useFrame","React.useEffect","callback","e","onStartCb","onEndCb","old","createElement","_extends","LabsScene","children","jsxs","Canvas","antialias","alpha","jsxRuntimeExports","jsx","LoadDetector","Suspense"],"mappings":"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","x_google_ignoreList":[0,1,2]}
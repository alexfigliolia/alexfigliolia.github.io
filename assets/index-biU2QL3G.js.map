{"version":3,"file":"index-biU2QL3G.js","sources":["../../src/Components/Button3D/Controller.ts","../../src/Components/Button3D/index.tsx","../../node_modules/@figliolia/ripples/dist/mjs/Animation.js","../../node_modules/@figliolia/ripples/dist/mjs/ImageLoader.js","../../node_modules/@figliolia/ripples/dist/mjs/Options.js","../../node_modules/@figliolia/ripples/dist/mjs/Shaders.js","../../node_modules/@figliolia/ripples/dist/mjs/StyleCache.js","../../node_modules/@figliolia/ripples/dist/mjs/Textures.js","../../node_modules/@figliolia/ripples/dist/mjs/BrowserSupport.js","../../node_modules/@figliolia/ripples/dist/mjs/WebGL.js","../../node_modules/@figliolia/ripples/dist/mjs/Ripples.js","../../src/Components/Page/index.tsx"],"sourcesContent":["import type { MouseEvent, TouchEvent } from \"react\";\nimport type { Coordinate, ISetAnimationFrame } from \"./types\";\n\nexport class Controller {\n  private top = 0;\n  private left = 0;\n  private width = 0;\n  private height = 0;\n  private setAnimationFrame: ISetAnimationFrame;\n  constructor(setAnimationFrame: ISetAnimationFrame) {\n    this.setAnimationFrame = setAnimationFrame;\n  }\n\n  private cacheTargetData(eventTarget: EventTarget) {\n    const target = eventTarget as HTMLButtonElement;\n    const { top, left, height, width } = target.getBoundingClientRect();\n    this.top = top;\n    this.height = height;\n    const offset = width * 0.2;\n    this.left = left - offset / 2;\n    this.width = width + width * 0.2;\n  }\n\n  private getRotations(x: number, y: number): [x: number, y: number] {\n    const mouseY = y - this.top;\n    const mouseX = x - this.left;\n    const offsetX = 0.5 - mouseX / this.width;\n    const offsetY = 0.5 - mouseY / this.height;\n    return [offsetY * 50, offsetX * 20];\n  }\n\n  private setFrame([x, y]: Coordinate, duration: number) {\n    this.setAnimationFrame({\n      rotX: x,\n      rotY: y,\n      transition: `${duration}s`,\n      scale: 1.1,\n      boxShadow: `0 ${x}px ${\n        this.height / 5\n      }px rgba(0,0,0,0.5), ${x}px ${y}px ${this.width / 5}px rgba(0,0,0,0.45)`,\n    });\n  }\n\n  private mouseEnter = <\n    T extends MouseEvent<HTMLButtonElement> | TouchEvent<HTMLButtonElement>,\n  >(\n    e: T,\n  ) => {\n    this.cacheTargetData(e.currentTarget);\n    this.setFrame(this.getRotations(...this.getCoordinates(e)), 0.5);\n  };\n\n  private mouseMove = <\n    T extends MouseEvent<HTMLButtonElement> | TouchEvent<HTMLButtonElement>,\n  >(\n    e: T,\n  ) => {\n    this.setFrame(this.getRotations(...this.getCoordinates(e)), 0);\n  };\n\n  private mouseLeave = () => {\n    this.setAnimationFrame({\n      rotX: 0,\n      rotY: 0,\n      scale: 1,\n      transition: \"0.5s\",\n      boxShadow: \"none\",\n    });\n  };\n\n  private getCoordinates<\n    T extends MouseEvent<HTMLButtonElement> | TouchEvent<HTMLButtonElement>,\n  >(e: T): [clientX: number, clientY: number] {\n    if (\"touches\" in e) {\n      return [e.touches[0].clientX, e.touches[0].clientY];\n    }\n    return [e.clientX, e.clientY];\n  }\n\n  public readonly events = {\n    onMouseMove: this.mouseMove,\n    onTouchEnd: this.mouseLeave,\n    onTouchMove: this.mouseMove,\n    onTouchStart: this.mouseEnter,\n    onMouseEnter: this.mouseEnter,\n    onMouseLeave: this.mouseLeave,\n  };\n}\n","import React, { memo, useState } from \"react\";\nimport { useController } from \"Hooks/useController\";\nimport { Controller } from \"./Controller\";\nimport type { IAnimationFrame, Props } from \"./types\";\nimport \"./styles.scss\";\n\nexport const Button3D = memo(function Button3D({ text, onClick }: Props) {\n  const [frame, setFrame] = useState<IAnimationFrame>({\n    rotX: 0,\n    rotY: 0,\n    scale: 1,\n    transition: 0.5,\n    boxShadow: \"none\",\n  });\n  const controller = useController(new Controller(setFrame));\n  return (\n    <button\n      onClick={onClick}\n      {...controller.events}\n      className=\"outline-button\"\n      style={{\n        transform: `rotateX(${frame.rotX}deg) rotateY(${frame.rotY}deg) skew(-10deg) scale(${frame.scale})`,\n        transitionDuration: `${frame.transition}`,\n        boxShadow: frame.boxShadow,\n      }}>\n      <div>{text}</div>\n    </button>\n  );\n});\n\nexport * from \"./types\";\n","import { Subscriptable } from \"@figliolia/event-emitter\";\nexport class Animations {\n    static frame = null;\n    static callstack = new Subscriptable();\n    static register(callback) {\n        const ID = this.callstack.register(callback);\n        void Promise.resolve().then(() => {\n            this.nextFrame();\n        });\n        return ID;\n    }\n    static delete(ID) {\n        return this.callstack.remove(ID);\n    }\n    static nextFrame() {\n        if (this.frame) {\n            return;\n        }\n        this.animate();\n    }\n    static animate() {\n        this.frame = requestAnimationFrame(() => {\n            if (!this.callstack.length) {\n                return this.closeLoop();\n            }\n            this.callstack.execute();\n            this.animate();\n        });\n    }\n    static closeLoop() {\n        if (this.frame) {\n            cancelAnimationFrame(this.frame);\n            this.frame = null;\n        }\n    }\n}\n","export class ImageLoader {\n    Textures;\n    GL;\n    constructor(Textures) {\n        this.Textures = Textures;\n        this.GL = this.Textures.GL;\n    }\n    load(src, crossOrigin) {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => {\n                this.textureIze(image);\n                resolve(image);\n            };\n            image.onerror = () => {\n                this.Textures.setTransparent();\n                reject();\n            };\n            image.crossOrigin = this.isDataUri(src) ? null : crossOrigin;\n            image.src = src;\n        });\n    }\n    textureIze(image) {\n        const wrapping = this.isPowerOfTwo(image.width) && this.isPowerOfTwo(image.height)\n            ? this.GL.REPEAT\n            : this.GL.CLAMP_TO_EDGE;\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.Textures.backgroundTexture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, wrapping);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, wrapping);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, image);\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n    isPowerOfTwo(x) {\n        return (x & (x - 1)) == 0;\n    }\n}\n","export class Options {\n    resolution;\n    dropRadius;\n    perturbance;\n    crossOrigin;\n    interactive;\n    imageUrl;\n    onInitialized;\n    constructor(options) {\n        const configuration = this.configure(options);\n        this.imageUrl = configuration.imageUrl;\n        this.dropRadius = configuration.dropRadius;\n        this.resolution = configuration.resolution;\n        this.interactive = configuration.interactive;\n        this.perturbance = configuration.perturbance;\n        this.crossOrigin = configuration.crossOrigin;\n        this.onInitialized = configuration.onInitialized;\n    }\n    static defaults = {\n        imageUrl: null,\n        resolution: 256,\n        dropRadius: 20,\n        perturbance: 0.03,\n        interactive: true,\n        crossOrigin: \"\",\n    };\n    configure(options) {\n        return Object.assign({}, Options.defaults, options);\n    }\n    extractUrl(value) {\n        const urlMatch = /url\\([\"']?([^\"']*)[\"']?\\)/.exec(value);\n        if (urlMatch == null) {\n            return null;\n        }\n        return urlMatch[1];\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n}\n","export class Shaders {\n    dropProgram;\n    updateProgram;\n    renderProgram;\n    GL;\n    textureDelta;\n    constructor(GL, resolution) {\n        this.GL = GL;\n        this.textureDelta = new Float32Array([1 / resolution, 1 / resolution]);\n        this.dropProgram = this.compileDrop();\n        this.updateProgram = this.compileUpdate();\n        this.GL.uniform2fv(this.updateProgram.locations.delta, this.textureDelta);\n        this.renderProgram = this.compileRender();\n        this.GL.uniform2fv(this.renderProgram.locations.delta, this.textureDelta);\n    }\n    drop(position, radius, strength) {\n        if (this.dropProgram) {\n            this.GL.useProgram(this.dropProgram.id);\n            this.GL.uniform2fv(this.dropProgram.locations.center, position);\n            this.GL.uniform1f(this.dropProgram.locations.radius, radius);\n            this.GL.uniform1f(this.dropProgram.locations.strength, strength);\n        }\n    }\n    render(perturbance) {\n        this.GL.uniform1f(this.renderProgram.locations.perturbance, perturbance);\n        this.GL.uniform2fv(this.renderProgram.locations.topLeft, \n        // @ts-ignore\n        this.renderProgram.uniforms.topLeft);\n        this.GL.uniform2fv(this.renderProgram.locations.bottomRight, \n        // @ts-ignore\n        this.renderProgram.uniforms.bottomRight);\n        this.GL.uniform2fv(this.renderProgram.locations.containerRatio, \n        // @ts-ignore\n        this.renderProgram.uniforms.containerRatio);\n        this.GL.uniform1i(this.renderProgram.locations.samplerBackground, 0);\n        this.GL.uniform1i(this.renderProgram.locations.samplerRipples, 1);\n    }\n    compileDrop() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.DROP_PROGRAM);\n    }\n    compileUpdate() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.UPDATE_PROGRAM);\n    }\n    compileRender() {\n        return this.createProgram(Shaders.RENDER_BACKGROUND_PROGRAM, Shaders.RENDER_RIPPLE_PROGRAM);\n    }\n    createProgram(vertexSource, fragmentSource) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const program = { id: this.GL.createProgram() };\n        this.GL.attachShader(program.id, this.compileSource(this.GL.VERTEX_SHADER, vertexSource));\n        this.GL.attachShader(program.id, this.compileSource(this.GL.FRAGMENT_SHADER, fragmentSource));\n        this.GL.linkProgram(program.id);\n        if (!this.GL.getProgramParameter(program.id, this.GL.LINK_STATUS)) {\n            throw new Error(\"link error: \" + this.GL.getProgramInfoLog(program.id));\n        }\n        program.uniforms = {};\n        program.locations = {};\n        this.GL.useProgram(program.id);\n        this.GL.enableVertexAttribArray(0);\n        let match, name;\n        const regex = /uniform (\\w+) (\\w+)/g;\n        const shaderCode = vertexSource + fragmentSource;\n        while ((match = regex.exec(shaderCode)) != null) {\n            name = match[2];\n            program.locations[name] = this.GL.getUniformLocation(program.id, name);\n        }\n        return program;\n    }\n    compileSource(type, source) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const shader = this.GL.createShader(type);\n        this.GL.shaderSource(shader, source);\n        this.GL.compileShader(shader);\n        if (!this.GL.getShaderParameter(shader, this.GL.COMPILE_STATUS)) {\n            throw new Error(\"compile error: \" + this.GL.getShaderInfoLog(shader));\n        }\n        return shader;\n    }\n    static VERTEX_SHADER = [\n        \"attribute vec2 vertex;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"coord = vertex * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static DROP_PROGRAM = [\n        \"precision highp float;\",\n        \"const float PI = 3.141592653589793;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 center;\",\n        \"uniform float radius;\",\n        \"uniform float strength;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"float drop = max(0.0, 1.0 - length(center * 0.5 + 0.5 - coord) / radius);\",\n        \"drop = 0.5 - cos(drop * PI) * 0.5;\",\n        \"info.r += drop * strength;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static UPDATE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 delta;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"vec2 dx = vec2(delta.x, 0.0);\",\n        \"vec2 dy = vec2(0.0, delta.y);\",\n        \"float average = (\",\n        \"texture2D(texture, coord - dx).r +\",\n        \"texture2D(texture, coord - dy).r +\",\n        \"texture2D(texture, coord + dx).r +\",\n        \"texture2D(texture, coord + dy).r\",\n        \") * 0.25;\",\n        \"info.g += (average - info.r) * 2.0;\",\n        \"info.g *= 0.995;\",\n        \"info.r += info.g;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_BACKGROUND_PROGRAM = [\n        \"precision highp float;\",\n        \"attribute vec2 vertex;\",\n        \"uniform vec2 topLeft;\",\n        \"uniform vec2 bottomRight;\",\n        \"uniform vec2 containerRatio;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"backgroundCoord = mix(topLeft, bottomRight, vertex * 0.5 + 0.5);\",\n        \"backgroundCoord.y = 1.0 - backgroundCoord.y;\",\n        \"ripplesCoord = vec2(vertex.x, -vertex.y) * containerRatio * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex.x, -vertex.y, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_RIPPLE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D samplerBackground;\",\n        \"uniform sampler2D samplerRipples;\",\n        \"uniform vec2 delta;\",\n        \"uniform float perturbance;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"float height = texture2D(samplerRipples, ripplesCoord).r;\",\n        \"float heightX = texture2D(samplerRipples, vec2(ripplesCoord.x + delta.x, ripplesCoord.y)).r;\",\n        \"float heightY = texture2D(samplerRipples, vec2(ripplesCoord.x, ripplesCoord.y + delta.y)).r;\",\n        \"vec3 dx = vec3(delta.x, heightX - height, 0.0);\",\n        \"vec3 dy = vec3(0.0, heightY - height, delta.y);\",\n        \"vec2 offset = -normalize(cross(dy, dx)).xz;\",\n        \"float specular = pow(max(0.0, dot(offset, normalize(vec2(-0.6, 1.0)))), 4.0);\",\n        \"gl_FragColor = texture2D(samplerBackground, backgroundCoord + offset * perturbance) + specular;\",\n        \"}\",\n    ].join(\"\\n\");\n}\n","export class StyleCache extends Map {\n    constructor() {\n        super([\n            [\"zIndex\", \"\"],\n            [\"position\", \"\"],\n            [\"backgroundWidth\", 0],\n            [\"backgroundHeight\", 0],\n            [\"originalInlineCSS\", \"\"],\n            [\"originalCSSBackgroundImage\", \"\"],\n        ]);\n    }\n    initialize(target) {\n        const { position, zIndex, backgroundImage } = window.getComputedStyle(target);\n        this.set(\"zIndex\", zIndex);\n        this.set(\"position\", position);\n        this.set(\"originalCSSBackgroundImage\", backgroundImage);\n        this.set(\"originalInlineCSS\", target.style.backgroundImage);\n    }\n    get(key) {\n        return super.get(key);\n    }\n    evict(key) {\n        return super.set(key, \"\");\n    }\n}\n","import { BrowserSupport } from \"./BrowserSupport.js\";\nexport class Textures {\n    quad;\n    bufferReadIndex = 1;\n    bufferWriteIndex = 0;\n    GL;\n    textures = [];\n    backgroundTexture;\n    frameBuffers = [];\n    static browserSupport = new BrowserSupport();\n    transparentPixels = this.createImageData(32, 32);\n    constructor(context) {\n        this.GL = context;\n        this.quad = this.GL.createBuffer();\n        this.backgroundTexture = this.createBackground();\n    }\n    drawQuad() {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        this.GL.vertexAttribPointer(0, 2, this.GL.FLOAT, false, 0, 0);\n        this.GL.drawArrays(this.GL.TRIANGLE_FAN, 0, 4);\n    }\n    get firstTexture() {\n        return this.textures[0];\n    }\n    get readTexture() {\n        return this.textures[this.bufferReadIndex];\n    }\n    get writeTexture() {\n        return this.textures[this.bufferWriteIndex];\n    }\n    get readFrame() {\n        return this.frameBuffers[this.bufferReadIndex];\n    }\n    get writeFrame() {\n        return this.frameBuffers[this.bufferWriteIndex];\n    }\n    getBrowserExtensions() {\n        Textures.browserSupport.extensions.forEach(name => {\n            this.GL.getExtension(name);\n        });\n    }\n    initialize(resolution) {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        const { linearSupport, type, arrayType } = Textures.browserSupport;\n        const textureData = arrayType\n            ? new arrayType(resolution * resolution * 4)\n            : null;\n        for (let i = 0; i < 2; i++) {\n            const texture = this.GL.createTexture();\n            const frameBuffer = this.GL.createFramebuffer();\n            this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n            this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, resolution, resolution, 0, this.GL.RGBA, type, textureData);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            this.textures.push(texture);\n            this.frameBuffers.push(frameBuffer);\n        }\n    }\n    setTransparent() {\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.backgroundTexture);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, this.transparentPixels);\n    }\n    swapBufferIndices() {\n        this.bufferWriteIndex = 1 - this.bufferWriteIndex;\n        this.bufferReadIndex = 1 - this.bufferReadIndex;\n    }\n    createBackground() {\n        const texture = this.GL.createTexture();\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.pixelStorei(this.GL.UNPACK_FLIP_Y_WEBGL, 1);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.LINEAR);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.LINEAR);\n        return texture;\n    }\n    createImageData(width, height) {\n        try {\n            return new ImageData(width, height);\n        }\n        catch (e) {\n            // Fallback for IE\n            const canvas = document.createElement(\"canvas\");\n            return canvas.getContext(\"2d\")?.createImageData(width, height);\n        }\n    }\n}\n","export class BrowserSupport {\n    type;\n    extensions;\n    linearSupport;\n    GL;\n    arrayType;\n    constructor() {\n        this.detect();\n    }\n    detect() {\n        const extensions = this.getExtensions();\n        const texture = this.frameAndBuffer();\n        const configurations = this.getAll(extensions);\n        const { length } = configurations;\n        for (let i = 0; i < length; i++) {\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, 32, 32, 0, this.GL.RGBA, configurations[i].type, null);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            if (this.GL.checkFramebufferStatus(this.GL.FRAMEBUFFER) ===\n                this.GL.FRAMEBUFFER_COMPLETE) {\n                const config = configurations[i];\n                this.type = config.type;\n                this.arrayType = config.arrayType;\n                this.extensions = config.extensions;\n                this.linearSupport = config.linearSupport;\n                return;\n            }\n        }\n        throw new Error(\"No compatible browser configurations\");\n    }\n    getAll(extensions) {\n        const configs = [];\n        configs.push(this.createConfig(\"float\", this.GL.FLOAT, Float32Array, extensions));\n        if (extensions.OES_texture_half_float) {\n            configs.push(this.createConfig(\"half_float\", extensions.OES_texture_half_float.HALF_FLOAT_OES, null, extensions));\n        }\n        return configs;\n    }\n    createConfig(type, glType, arrayType, extensions) {\n        const name = \"OES_texture_\" + type, nameLinear = name + \"_linear\", linearSupport = nameLinear in extensions, configExtensions = [name];\n        if (linearSupport) {\n            configExtensions.push(nameLinear);\n        }\n        return {\n            type: glType,\n            arrayType: arrayType,\n            linearSupport: linearSupport,\n            extensions: configExtensions,\n        };\n    }\n    frameAndBuffer() {\n        const texture = this.GL.createTexture();\n        const frameBuffer = this.GL.createFramebuffer();\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n        return texture;\n    }\n    getExtensions() {\n        const canvas = document.createElement(\"canvas\");\n        this.GL = (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n        if (!this.GL) {\n            throw new Error(\"No WebGL support\");\n        }\n        const extensions = {};\n        const keys = [\n            \"OES_texture_float\",\n            \"OES_texture_half_float\",\n            \"OES_texture_float_linear\",\n            \"OES_texture_half_float_linear\",\n        ];\n        keys.forEach(name => {\n            const extension = this.GL.getExtension(name);\n            if (extension) {\n                extensions[name] = extension;\n            }\n        });\n        if (!extensions.OES_texture_float) {\n            throw new Error(\"No texture float support\");\n        }\n        return extensions;\n    }\n}\n","import { ImageLoader } from \"./ImageLoader.js\";\nimport { Options } from \"./Options.js\";\nimport { Shaders } from \"./Shaders.js\";\nimport { StyleCache } from \"./StyleCache.js\";\nimport { Textures } from \"./Textures.js\";\nexport class WebGL extends Options {\n    Shaders;\n    Textures;\n    quad;\n    target;\n    canvas;\n    GL;\n    StyleCache = new StyleCache();\n    imageSource = null;\n    constructor(target, options) {\n        super(options);\n        this.target = target;\n        this.canvas = document.createElement(\"canvas\");\n        this.positionCanvas();\n        this.GL = this.createGL(this.canvas);\n        this.Shaders = new Shaders(this.GL, this.resolution);\n        this.Textures = new Textures(this.GL);\n    }\n    initializeWebGL() {\n        this.Textures.initialize(this.resolution);\n        this.GL.bufferData(this.GL.ARRAY_BUFFER, new Float32Array([-1, -1, +1, -1, +1, +1, -1, +1]), this.GL.STATIC_DRAW);\n        this.Textures.setTransparent();\n        void this.loadImage().then(() => {\n            this.onInitialized?.();\n        });\n        this.GL.clearColor(0, 0, 0, 0);\n        this.GL.blendFunc(this.GL.SRC_ALPHA, this.GL.ONE_MINUS_SRC_ALPHA);\n    }\n    hideCSSBackground() {\n        const inlineCSS = this.target.style.backgroundImage;\n        if (inlineCSS === \"none\") {\n            return;\n        }\n        this.StyleCache.set(\"originalInlineCSS\", inlineCSS);\n        this.StyleCache.set(\"originalCSSBackgroundImage\", window.getComputedStyle(this.target).backgroundImage);\n        this.target.style.backgroundImage = \"none\";\n    }\n    render() {\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, null);\n        this.GL.viewport(0, 0, this.canvas.width, this.canvas.height);\n        this.GL.enable(this.GL.BLEND);\n        this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);\n        this.GL.useProgram(this.Shaders.renderProgram.id);\n        this.bindTexture(this.Textures.backgroundTexture, 0);\n        this.bindTexture(this.Textures.firstTexture, 1);\n        this.Shaders.render(this.perturbance);\n        this.Textures.drawQuad();\n        this.GL.disable(this.GL.BLEND);\n    }\n    update() {\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.GL.useProgram(this.Shaders.updateProgram.id);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    isPercentage(str) {\n        return str[str.length - 1] == \"%\";\n    }\n    bindTexture(texture, unit = 0) {\n        this.GL.activeTexture(this.GL.TEXTURE0 + (unit || 0));\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n    }\n    positionCanvas() {\n        this.canvas.width = this.target.offsetWidth;\n        this.canvas.height = this.target.offsetHeight;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0\";\n        this.canvas.style.right = \"0\";\n        this.canvas.style.bottom = \"0\";\n        this.canvas.style.left = \"0\";\n        this.canvas.style.zIndex = \"-1\";\n        this.target.appendChild(this.canvas);\n    }\n    createGL(canvas) {\n        return (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n    }\n    async loadImage() {\n        const { backgroundImage } = window.getComputedStyle(this.target);\n        const newImageSource = this.imageUrl ||\n            this.extractUrl(this.StyleCache.get(\"originalCSSBackgroundImage\")) ||\n            this.extractUrl(backgroundImage);\n        if (newImageSource == this.imageSource) {\n            return;\n        }\n        this.imageSource = newImageSource;\n        if (!this.imageSource) {\n            this.Textures.setTransparent();\n            return;\n        }\n        try {\n            const loader = new ImageLoader(this.Textures);\n            const image = await loader.load(this.imageSource, this.crossOrigin);\n            this.StyleCache.set(\"backgroundWidth\", image.width);\n            this.StyleCache.set(\"backgroundHeight\", image.height);\n            this.hideCSSBackground();\n        }\n        catch (error) {\n            // silence\n        }\n    }\n}\n","import { Animations } from \"./Animation.js\";\nimport { WebGL } from \"./WebGL.js\";\nexport class Ripples extends WebGL {\n    ID;\n    visible = false;\n    running = false;\n    destroyed = false;\n    initialized = false;\n    constructor(target, options) {\n        super(target, options);\n        this.onClick = this.onClick.bind(this);\n        this.onTouch = this.onTouch.bind(this);\n        this.updateSize = this.updateSize.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.cacheTargetPositions();\n        this.setupWebGL();\n    }\n    drop(x, y, radius, strength) {\n        const { offsetHeight, offsetWidth } = this.target;\n        const longestSide = Math.max(offsetHeight, offsetWidth);\n        radius = radius / longestSide;\n        const dropPosition = new Float32Array([\n            (2 * x - offsetWidth) / longestSide,\n            (offsetHeight - 2 * y) / longestSide,\n        ]);\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.Shaders.drop(dropPosition, radius, strength);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    updateSize() {\n        const { offsetHeight, offsetWidth } = this.target;\n        if (offsetWidth !== this.canvas.width ||\n            offsetHeight !== this.canvas.height) {\n            this.canvas.width = offsetWidth;\n            this.canvas.height = offsetHeight;\n            void this.reloadImage();\n        }\n    }\n    show() {\n        this.visible = true;\n        this.canvas.style.display = \"block\";\n        this.hideCSSBackground();\n    }\n    hide() {\n        this.visible = false;\n        this.canvas.style.display = \"none\";\n        this.restoreCSSBackground();\n    }\n    pause() {\n        this.running = false;\n    }\n    play() {\n        this.running = true;\n    }\n    destroy() {\n        this.target.style.zIndex = this.StyleCache.get(\"zIndex\");\n        this.target.style.position = this.StyleCache.get(\"position\");\n        // @ts-ignore\n        this.GL = null;\n        window.removeEventListener(\"resize\", this.updateSize);\n        this.target.removeEventListener(\"mousedown\", this.onClick);\n        this.target.removeEventListener(\"touchmove\", this.onTouch);\n        this.target.removeEventListener(\"touchstart\", this.onTouch);\n        this.target.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.target.removeChild(this.canvas);\n        this.restoreCSSBackground();\n        if (this.ID) {\n            Animations.delete(this.ID);\n        }\n        this.destroyed = true;\n    }\n    reloadImage() {\n        this.restoreCSSBackground();\n        this.StyleCache.evict(\"originalCSSBackgroundImage\");\n        return this.loadImage();\n    }\n    cacheTargetPositions() {\n        this.StyleCache.initialize(this.target);\n        this.target.style.zIndex = \"0\";\n        this.target.style.position = \"relative\";\n    }\n    setupWebGL() {\n        this.Textures.getBrowserExtensions();\n        window.addEventListener(\"resize\", this.updateSize);\n        this.initializeWebGL();\n        this.visible = true;\n        this.running = true;\n        this.initialized = true;\n        this.setupPointerEvents();\n        this.ID = Animations.register(() => {\n            if (!this.destroyed) {\n                this.step();\n            }\n        });\n    }\n    setupPointerEvents() {\n        this.target.addEventListener(\"mousedown\", this.onClick);\n        this.target.addEventListener(\"mousemove\", this.onMouseMove);\n        this.target.addEventListener(\"touchmove\", this.onTouch, { passive: true });\n        this.target.addEventListener(\"touchstart\", this.onTouch, { passive: true });\n    }\n    onClick(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius * 1.5, 0.14);\n    }\n    onTouch(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        const touches = e.changedTouches;\n        for (let i = 0; i < touches.length; i++) {\n            this.dropAtPointer(touches[i], this.dropRadius, 0.01);\n        }\n    }\n    onMouseMove(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius, 0.01);\n    }\n    get pointerEventsEnabled() {\n        return this.visible && this.running && this.interactive;\n    }\n    step() {\n        if (!this.visible) {\n            return;\n        }\n        this.computeTextureBoundaries();\n        if (this.running) {\n            this.update();\n        }\n        this.render();\n    }\n    computeBackgroundSize(backgroundSize, container) {\n        const BW = this.StyleCache.get(\"backgroundWidth\");\n        const BH = this.StyleCache.get(\"backgroundHeight\");\n        if (backgroundSize == \"cover\") {\n            const scale = Math.max(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        if (backgroundSize == \"contain\") {\n            const scale = Math.min(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        const BP = backgroundSize.split(\" \");\n        let backgroundWidth = BP[0] || \"\";\n        let backgroundHeight = BP[1] || backgroundWidth;\n        if (this.isPercentage(backgroundWidth)) {\n            backgroundWidth = (container.width * parseFloat(backgroundWidth)) / 100;\n        }\n        else if (backgroundWidth != \"auto\") {\n            backgroundWidth = parseFloat(backgroundWidth);\n        }\n        if (this.isPercentage(backgroundHeight)) {\n            backgroundHeight =\n                (container.height * parseFloat(backgroundHeight)) / 100;\n        }\n        else if (backgroundHeight != \"auto\") {\n            backgroundHeight = parseFloat(backgroundHeight);\n        }\n        if (backgroundWidth == \"auto\" && backgroundHeight == \"auto\") {\n            backgroundWidth = BW;\n            backgroundHeight = BH;\n        }\n        else {\n            if (backgroundWidth == \"auto\") {\n                backgroundWidth = BW * (backgroundHeight / BH);\n            }\n            if (backgroundHeight == \"auto\") {\n                backgroundHeight = BH * (backgroundWidth / BW);\n            }\n        }\n        return [backgroundWidth, backgroundHeight];\n    }\n    computeTextureBoundaries() {\n        const { backgroundSize, backgroundAttachment, backgroundPosition: BP, } = window.getComputedStyle(this.target);\n        const backgroundPosition = this.translateBackgroundPosition(BP);\n        let container;\n        if (backgroundAttachment == \"fixed\") {\n            container = {\n                left: window.scrollX,\n                top: window.scrollY,\n                width: window.innerWidth,\n                height: window.innerHeight,\n            };\n        }\n        else {\n            const { offsetTop, offsetLeft, offsetHeight, offsetWidth } = this.target;\n            container = {\n                top: offsetTop,\n                left: offsetLeft,\n                width: offsetWidth,\n                height: offsetHeight,\n            };\n        }\n        const [width, height] = this.computeBackgroundSize(backgroundSize, container);\n        let [x, y] = backgroundPosition;\n        if (this.isPercentage(x)) {\n            x = container.left + ((container.width - width) * parseFloat(x)) / 100;\n        }\n        else {\n            x = container.left + parseFloat(x);\n        }\n        if (this.isPercentage(y)) {\n            y = container.top + ((container.height - height) * parseFloat(y)) / 100;\n        }\n        else {\n            y = container.top + parseFloat(y);\n        }\n        const { offsetLeft, offsetTop, offsetHeight, offsetWidth } = this.target;\n        const floats = new Float32Array([\n            (offsetLeft - x) / width,\n            (offsetTop - y) / height,\n        ]);\n        this.Shaders.renderProgram.uniforms.topLeft = floats;\n        this.Shaders.renderProgram.uniforms.bottomRight = new Float32Array([\n            floats[0] + offsetWidth / width,\n            floats[1] + offsetHeight / height,\n        ]);\n        const maxSide = Math.max(this.canvas.width, this.canvas.height);\n        this.Shaders.renderProgram.uniforms.containerRatio = new Float32Array([\n            this.canvas.width / maxSide,\n            this.canvas.height / maxSide,\n        ]);\n    }\n    translateBackgroundPosition(value) {\n        const parts = value.split(\" \");\n        if (parts.length === 1) {\n            switch (value) {\n                case \"center\":\n                    return [\"50%\", \"50%\"];\n                case \"top\":\n                    return [\"50%\", \"0\"];\n                case \"bottom\":\n                    return [\"50%\", \"100%\"];\n                case \"left\":\n                    return [\"0\", \"50%\"];\n                case \"right\":\n                    return [\"100%\", \"50%\"];\n                default:\n                    return [value, \"50%\"];\n            }\n        }\n        return parts.map(part => {\n            switch (value) {\n                case \"center\":\n                    return \"50%\";\n                case \"top\":\n                case \"left\":\n                    return \"0\";\n                case \"right\":\n                case \"bottom\":\n                    return \"100%\";\n                default:\n                    return part;\n            }\n        });\n    }\n    restoreCSSBackground() {\n        this.target.style.backgroundImage =\n            this.StyleCache.get(\"originalInlineCSS\") || \"\";\n    }\n    dropAtPointer(pointer, radius, strength) {\n        const { borderTopWidth, borderLeftWidth } = window.getComputedStyle(this.target);\n        const borderTop = parseInt(borderTopWidth || \"0\");\n        const borderLeft = parseInt(borderLeftWidth || \"0\");\n        const { offsetTop, offsetLeft } = this.target;\n        this.drop(pointer.pageX - offsetLeft - borderLeft, pointer.pageY - offsetTop - borderTop, radius, strength);\n    }\n}\n","import type { ReactNode } from \"react\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport { useClassNames } from \"@figliolia/classnames\";\nimport { Ripples } from \"@figliolia/ripples\";\nimport { isPageActive, useRouter } from \"State/Routing\";\nimport { selectDimensions, useScreen } from \"State/Screen\";\nimport \"./styles.scss\";\n\nexport const Page = memo(function Page({ name, children }: Props) {\n  const container = useRef<HTMLDivElement>(null);\n  const [width, height] = useScreen(selectDimensions);\n  const active = useRouter(isPageActive);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n    const ripples = new Ripples(container.current, {\n      resolution: 512,\n      dropRadius: 10,\n      perturbance: 0.02,\n    });\n    return () => {\n      if (ripples) {\n        ripples.destroy();\n      }\n    };\n  }, []);\n\n  const classes = useClassNames(\"page\", name, { active });\n\n  return (\n    <main\n      id=\"page\"\n      ref={container}\n      style={{ height, width }}\n      className={classes}>\n      <div className=\"content\" style={{ height, width }}>\n        {children}\n      </div>\n    </main>\n  );\n});\n\ninterface Props {\n  name: string;\n  children: ReactNode;\n}\n"],"names":["Controller","constructor","setAnimationFrame","__publicField","this","e","cacheTargetData","currentTarget","setFrame","getRotations","getCoordinates","rotX","rotY","scale","transition","boxShadow","onMouseMove","mouseMove","onTouchEnd","mouseLeave","onTouchMove","onTouchStart","mouseEnter","onMouseEnter","onMouseLeave","eventTarget","target","top","left","height","width","getBoundingClientRect","offset","x","y","mouseY","offsetX","duration","touches","clientX","clientY","Button3D","memo","text","onClick","frame","useState","controller","useController","jsxRuntimeExports","jsx","__spreadValues","events","className","style","transform","transitionDuration","children","Animations","register","callback","ID","callstack","Promise","resolve","then","nextFrame","remove","animate","requestAnimationFrame","length","closeLoop","execute","cancelAnimationFrame","Subscriptable","ImageLoader","Textures","GL","load","src","crossOrigin","image","Image","reject","onload","textureIze","onerror","setTransparent","isDataUri","wrapping","isPowerOfTwo","REPEAT","CLAMP_TO_EDGE","bindTexture","TEXTURE_2D","backgroundTexture","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","url","match","_Options","options","configuration","configure","imageUrl","dropRadius","resolution","interactive","perturbance","onInitialized","Object","assign","defaults","extractUrl","value","urlMatch","exec","Options","_Shaders","textureDelta","Float32Array","dropProgram","compileDrop","updateProgram","compileUpdate","uniform2fv","locations","delta","renderProgram","compileRender","drop","position","radius","strength","useProgram","id","center","uniform1f","render","topLeft","uniforms","bottomRight","containerRatio","uniform1i","samplerBackground","samplerRipples","createProgram","VERTEX_SHADER","DROP_PROGRAM","UPDATE_PROGRAM","RENDER_BACKGROUND_PROGRAM","RENDER_RIPPLE_PROGRAM","vertexSource","fragmentSource","Error","program","attachShader","compileSource","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","name","enableVertexAttribArray","regex","shaderCode","getUniformLocation","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","join","Shaders","StyleCache","Map","super","initialize","zIndex","backgroundImage","window","getComputedStyle","set","get","key","evict","_Textures","context","createImageData","quad","createBuffer","createBackground","drawQuad","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","TRIANGLE_FAN","firstTexture","textures","readTexture","bufferReadIndex","writeTexture","bufferWriteIndex","readFrame","frameBuffers","writeFrame","getBrowserExtensions","browserSupport","extensions","forEach","getExtension","linearSupport","arrayType","textureData","i","texture","createTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","push","transparentPixels","swapBufferIndices","pixelStorei","UNPACK_FLIP_Y_WEBGL","ImageData","_a","document","createElement","getContext","detect","getExtensions","frameAndBuffer","configurations","getAll","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","config","configs","createConfig","OES_texture_half_float","HALF_FLOAT_OES","glType","nameLinear","configExtensions","canvas","extension","OES_texture_float","WebGL","positionCanvas","createGL","initializeWebGL","bufferData","STATIC_DRAW","loadImage","call","clearColor","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","hideCSSBackground","inlineCSS","viewport","enable","BLEND","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","update","isPercentage","str","unit","activeTexture","TEXTURE0","offsetWidth","offsetHeight","right","bottom","appendChild","newImageSource","imageSource","loader","error","Ripples","bind","onTouch","updateSize","cacheTargetPositions","setupWebGL","longestSide","Math","max","dropPosition","reloadImage","show","visible","display","hide","restoreCSSBackground","pause","running","play","destroy","removeEventListener","removeChild","delete","destroyed","addEventListener","initialized","setupPointerEvents","step","passive","pointerEventsEnabled","dropAtPointer","changedTouches","computeTextureBoundaries","computeBackgroundSize","backgroundSize","container","BW","BH","min","BP","split","backgroundWidth","backgroundHeight","parseFloat","backgroundAttachment","backgroundPosition","translateBackgroundPosition","scrollX","scrollY","innerWidth","innerHeight","offsetTop","offsetLeft","floats","maxSide","parts","map","part","pointer","borderTopWidth","borderLeftWidth","borderTop","parseInt","borderLeft","pageX","pageY","Page","useRef","useScreen","selectDimensions","active","useRouter","isPageActive","useEffect","current","ripples","classes","useClassNames","ref"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6,7,8,9,10]}
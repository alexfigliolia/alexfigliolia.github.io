{"version":3,"file":"index-d5SBX61N.js","sources":["../../src/3D/SkateboardScene/Resources/skateboard/against-the-tide.webp","../../src/3D/SkateboardScene/SkateboardOptions.ts","../../src/3D/SkateboardScene/Resources/skateboard/OniMask.webp","../../src/3D/SkateboardScene/Resources/skateboard/PinkSwirl.webp","../../src/3D/SkateboardScene/Resources/skateboard/red-and-black.webp","../../src/3D/SkateboardScene/Resources/skateboard/thank-you-deck.webp","../../src/3D/SkateboardScene/Resources/skateboard/yellow-and-black.webp","../../src/3D/SkateboardScene/Resources/skateboard/red-and-white.webp","../../src/3D/SkateboardScene/Resources/skateboard/black-and-yellow.webp","../../src/3D/SkateboardScene/Resources/skateboard/green-and-navy.webp","../../src/3D/SkateboardScene/Resources/skateboard/gray-and-black.webp","../../src/3D/SkateboardScene/Resources/skateboard/grid-streaks.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-black.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-blue.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-cream.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-green.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-navy.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-pink.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-purple.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-red.webp","../../src/3D/SkateboardScene/Resources/skateboard/wheel-yellow.webp","../../src/3D/SkateboardScene/useCameraControls.ts","../../src/3D/SkateboardScene/CustomizerContext.tsx","../../src/3D/SkateboardScene/Controls/Options/Option/index.tsx","../../src/3D/SkateboardScene/Controls/Options/index.tsx","../../src/3D/SkateboardScene/Controls/index.tsx","../../src/3D/SkateboardScene/Resources/hdr/warehouse-512.hdr","../../src/3D/SkateboardScene/Resources/concrete-normal.avif","../../src/3D/SkateboardScene/Preview/Floor.tsx","../../src/3D/SkateboardScene/Resources/Skateboard.glb","../../src/3D/SkateboardScene/Resources/skateboard/griptape-diffuse.webp","../../src/3D/SkateboardScene/Resources/skateboard/griptape-roughness.webp","../../src/3D/SkateboardScene/Preview/SkateboardModel/useGripTape.ts","../../src/3D/SkateboardScene/Resources/skateboard/metal-normal.avif","../../src/3D/SkateboardScene/Preview/SkateboardModel/useTrucks.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useWheels.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useViewProperties.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useBolts.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useDeck.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useWheelCache.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/SkateboardModel.tsx","../../src/3D/SkateboardScene/Resources/Skateboard-optimized.glb","../../src/3D/SkateboardScene/Preview/SkateboardModel/SkateboardModelOptimized.tsx","../../src/3D/SkateboardScene/Preview/SkateboardModel/index.tsx","../../src/3D/SkateboardScene/Preview/useSelectedTexture.ts","../../src/3D/SkateboardScene/Preview/SkateboardModel/useSRGBTexture.ts","../../src/3D/SkateboardScene/Preview/index.tsx","../../src/3D/SkateboardScene/index.tsx"],"sourcesContent":["export default \"__VITE_ASSET__aLzltEmO__\"","import AgainstTheTide from \"./Resources/skateboard/against-the-tide.webp\";\nimport BlackAndYellow from \"./Resources/skateboard/black-and-yellow.webp\";\nimport GrayAndBlack from \"./Resources/skateboard/gray-and-black.webp\";\nimport GreenAndNavy from \"./Resources/skateboard/green-and-navy.webp\";\nimport GridStreaks from \"./Resources/skateboard/grid-streaks.webp\";\nimport OniMask from \"./Resources/skateboard/OniMask.webp\";\nimport PinkSwirl from \"./Resources/skateboard/PinkSwirl.webp\";\nimport RedAndBlack from \"./Resources/skateboard/red-and-black.webp\";\nimport RedAndWhite from \"./Resources/skateboard/red-and-white.webp\";\nimport ThankYou from \"./Resources/skateboard/thank-you-deck.webp\";\nimport WheelBlack from \"./Resources/skateboard/wheel-black.webp\";\nimport WheelBlue from \"./Resources/skateboard/wheel-blue.webp\";\nimport WheelCream from \"./Resources/skateboard/wheel-cream.webp\";\nimport WheelGreen from \"./Resources/skateboard/wheel-green.webp\";\nimport WheelNavy from \"./Resources/skateboard/wheel-navy.webp\";\nimport WheelPink from \"./Resources/skateboard/wheel-pink.webp\";\nimport WheelPurple from \"./Resources/skateboard/wheel-purple.webp\";\nimport WheelRed from \"./Resources/skateboard/wheel-red.webp\";\nimport WheelYellow from \"./Resources/skateboard/wheel-yellow.webp\";\nimport YellowAndBlack from \"./Resources/skateboard/yellow-and-black.webp\";\n\nexport class SkateboardOptions {\n  public static readonly METALS: Record<string, string> = {\n    Black: \"#333\",\n    Gray: \"#6F6E6A\",\n    Navy: \"#34495E\",\n    Cream: \"#DEB887\",\n    White: \"#eee\",\n    Red: \"#E84118\",\n    Blue: \"#068BD3\",\n    Green: \"#A6E22E\",\n    Yellow: \"#F1C40F\",\n    Purple: \"#8E44AD\",\n    Magenta: \"#BA3763\",\n    Pink: \"#F1396E\",\n  };\n\n  public static readonly METAL_OPTIONS = Object.keys(this.METALS);\n\n  public static readonly DECKS: Record<string, string> = {\n    \"Oni Mask\": OniMask,\n    \"Pink Swirl\": PinkSwirl,\n    \"Red And Black\": RedAndBlack,\n    \"Against The Tide\": AgainstTheTide,\n    \"Thank You\": ThankYou,\n    \"Yellow And Black\": YellowAndBlack,\n    \"Red And White\": RedAndWhite,\n    \"Black And Yellow\": BlackAndYellow,\n    \"Green And Navy\": GreenAndNavy,\n    \"Gray And Black\": GrayAndBlack,\n    \"Grid Streaks\": GridStreaks,\n  };\n\n  public static readonly DECK_OPTIONS = Object.keys(this.DECKS);\n\n  public static readonly WHEELS: Record<string, string> = {\n    Black: WheelBlack,\n    Blue: WheelBlue,\n    Cream: WheelCream,\n    Green: WheelGreen,\n    Navy: WheelNavy,\n    Pink: WheelPink,\n    Purple: WheelPurple,\n    Red: WheelRed,\n    Yellow: WheelYellow,\n  };\n\n  public static readonly WHEEL_OPTIONS = Object.keys(this.WHEELS);\n\n  public static get bitmapTextures() {\n    return [...Object.values(this.DECKS), ...Object.values(this.WHEELS)];\n  }\n}\n","export default \"__VITE_ASSET__TbRls5BE__\"","export default \"__VITE_ASSET__cHKM2Z63__\"","export default \"__VITE_ASSET__k9_KIigw__\"","export default \"__VITE_ASSET__YID1T3Pb__\"","export default \"__VITE_ASSET__fOB_EbOt__\"","export default \"__VITE_ASSET__N2ElJhnX__\"","export default \"__VITE_ASSET__auF9LW4v__\"","export default \"__VITE_ASSET__Bl5w6Wtz__\"","export default \"__VITE_ASSET__jJUCCupM__\"","export default \"__VITE_ASSET__SqG2cxzG__\"","export default \"__VITE_ASSET__JiWFOmfa__\"","export default \"__VITE_ASSET__UvkssBPj__\"","export default \"__VITE_ASSET__W5f5_A1M__\"","export default \"__VITE_ASSET__0b0Uvbly__\"","export default \"__VITE_ASSET__Dq5HsRtV__\"","export default \"__VITE_ASSET__0nXfaQlr__\"","export default \"__VITE_ASSET__mcSaL8pw__\"","export default \"__VITE_ASSET__8QJSQhdi__\"","export default \"__VITE_ASSET___6tc93dv__\"","import { useCallback, useMemo, useRef } from \"react\";\nimport { Vector3 } from \"three\";\nimport { CameraControls } from \"@react-three/drei\";\n\nexport const DEFAULT_CAMERA_LOOK_AT = [0, 0.3, 0] as const;\nexport const DEFAULT_CAMERA_POSITION = [2.5, 0.75, 0] as const;\n\nexport const useCameraControls = () => {\n  const camera = useRef<CameraControls>(null);\n\n  const setCameraControls = useCallback(\n    (target: Vector3, position: Vector3) => {\n      if (!camera.current) {\n        return;\n      }\n      void camera.current.setTarget(target.x, target.y, target.z, true);\n      void camera.current.setPosition(position.x, position.y, position.z, true);\n    },\n    [camera],\n  );\n\n  const lookAtTruck = useCallback(() => {\n    setCameraControls(new Vector3(0, 0.29, 0.5), new Vector3(0.4, 0.3, 1));\n  }, [setCameraControls]);\n\n  const lookAtWheel = useCallback(() => {\n    setCameraControls(new Vector3(0.2, 0.54, 0.65), new Vector3(0.4, 1, 0.6));\n  }, [setCameraControls]);\n\n  const lookAtBolts = useCallback(() => {\n    setCameraControls(\n      new Vector3(0.15, 0.3, 0.62),\n      new Vector3(-0.75, 0.35, 0.8),\n    );\n  }, [setCameraControls]);\n\n  const lookAtDeck = useCallback(() => {\n    setCameraControls(\n      new Vector3(...DEFAULT_CAMERA_LOOK_AT),\n      new Vector3(...DEFAULT_CAMERA_POSITION),\n    );\n  }, [setCameraControls]);\n\n  return useMemo(\n    () => ({ camera, lookAtBolts, lookAtDeck, lookAtTruck, lookAtWheel }),\n    [lookAtBolts, lookAtDeck, lookAtTruck, lookAtWheel],\n  );\n};\n","import {\n  createContext,\n  createRef,\n  Dispatch,\n  RefObject,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\nimport { OptionalChildren } from \"@figliolia/react-lazy\";\nimport { CameraControls } from \"@react-three/drei\";\nimport { Callback } from \"Tools/Types\";\nimport { SkateboardOptions } from \"./SkateboardOptions\";\nimport { useCameraControls } from \"./useCameraControls\";\n\nconst CustomizerContext = createContext<ICustomizerContext>({\n  wheel: SkateboardOptions.WHEEL_OPTIONS[0],\n  updateWheels: () => {},\n  deck: SkateboardOptions.DECK_OPTIONS[0],\n  updateDeck: () => {},\n  truck: SkateboardOptions.METAL_OPTIONS[0],\n  updateTrucks: () => {},\n  bolt: SkateboardOptions.METAL_OPTIONS[0],\n  updateBolts: () => {},\n  lookAtDeck: () => {},\n  camera: createRef(),\n});\n\ninterface ICustomizerContext {\n  wheel: string;\n  updateWheels: Callback<[string]>;\n  deck: string;\n  updateDeck: Callback<[string]>;\n  truck: string;\n  updateTrucks: Callback<[string]>;\n  bolt: string;\n  lookAtDeck: Callback;\n  updateBolts: Callback<[string]>;\n  camera: RefObject<CameraControls | null>;\n}\n\nexport const CustomizerContextProvider = ({ children }: OptionalChildren) => {\n  const [wheel, setWheel] = useState(SkateboardOptions.WHEEL_OPTIONS[0]);\n  const [bolt, setBolt] = useState(SkateboardOptions.METAL_OPTIONS[0]);\n  const [deck, setDeck] = useState(SkateboardOptions.DECK_OPTIONS[0]);\n  const [truck, setTruck] = useState(SkateboardOptions.METAL_OPTIONS[0]);\n  const { camera, lookAtBolts, lookAtTruck, lookAtWheel, lookAtDeck } =\n    useCameraControls();\n\n  const createLookAt = useCallback(\n    (stateSetter: Dispatch<SetStateAction<string>>, lookAt: Callback) =>\n      (update: string) => {\n        stateSetter(update);\n        lookAt();\n      },\n    [],\n  );\n\n  const updateWheels = useMemo(\n    () => createLookAt(setWheel, lookAtWheel),\n    [createLookAt, lookAtWheel],\n  );\n  const updateTrucks = useMemo(\n    () => createLookAt(setTruck, lookAtTruck),\n    [createLookAt, lookAtTruck],\n  );\n  const updateDeck = useMemo(\n    () => createLookAt(setDeck, lookAtDeck),\n    [createLookAt, lookAtDeck],\n  );\n  const updateBolts = useMemo(\n    () => createLookAt(setBolt, lookAtBolts),\n    [createLookAt, lookAtBolts],\n  );\n\n  const value = useMemo(\n    () => ({\n      camera,\n      wheel,\n      bolt,\n      deck,\n      truck,\n      lookAtDeck,\n      updateWheels,\n      updateTrucks,\n      updateDeck,\n      updateBolts,\n    }),\n    [\n      wheel,\n      bolt,\n      deck,\n      truck,\n      camera,\n      lookAtDeck,\n      updateWheels,\n      updateTrucks,\n      updateDeck,\n      updateBolts,\n    ],\n  );\n  return (\n    <CustomizerContext.Provider value={value}>\n      {children}\n    </CustomizerContext.Provider>\n  );\n};\n\nexport const useCustomizer = () => {\n  return useContext(CustomizerContext);\n};\n","import { CSSProperties, ReactNode, useCallback } from \"react\";\nimport { useClassNames } from \"@figliolia/classnames\";\nimport { Callback } from \"Tools/Types\";\nimport \"./styles.scss\";\n\nexport const Option = ({\n  name,\n  selected,\n  children,\n  onClick,\n  colorField,\n  imageField,\n  imageStyles,\n}: Props) => {\n  const classes = useClassNames(\"option\", { selected });\n\n  const onSelect = useCallback(() => {\n    onClick(name);\n  }, [onClick, name]);\n\n  return (\n    <li>\n      <button className={classes} onClick={onSelect}>\n        {imageField ? (\n          <img src={imageField} alt=\"\" style={imageStyles} />\n        ) : (\n          <div style={{ backgroundColor: colorField ?? undefined }} />\n        )}\n        <span>{children}</span>\n      </button>\n    </li>\n  );\n};\n\ninterface CommonProps {\n  name: string;\n  selected: boolean;\n  children: ReactNode;\n  onClick: Callback<[string]>;\n}\n\ntype Props = CommonProps &\n  (\n    | {\n        colorField?: never;\n        imageField: string;\n        imageStyles?: CSSProperties;\n      }\n    | {\n        colorField: string;\n        imageField?: never;\n        imageStyles?: never;\n      }\n  );\n","import { ReactNode } from \"react\";\nimport { OptionalChildren } from \"Tools/Types\";\nimport \"./styles.scss\";\n\nexport const Options = ({ title, selectedName, children }: Props) => {\n  return (\n    <div className=\"options\">\n      <div>\n        <h2>{title}</h2>\n        <p>\n          <span>| </span>\n          {selectedName ?? \"\"}\n        </p>\n      </div>\n      <ul>{children}</ul>\n    </div>\n  );\n};\n\ninterface Props extends OptionalChildren {\n  title?: ReactNode;\n  selectedName?: string;\n}\n\nexport * from \"./Option\";\n","import { CSSProperties, useMemo } from \"react\";\nimport { PropLess } from \"Tools/Types\";\nimport { useCustomizer } from \"../CustomizerContext\";\nimport { SkateboardOptions } from \"../SkateboardOptions\";\nimport { Option, Options } from \"./Options\";\nimport \"./styles.scss\";\n\nexport const Controls = (_: PropLess) => {\n  const {\n    deck,\n    bolt,\n    wheel,\n    truck,\n    updateBolts,\n    updateDeck,\n    updateTrucks,\n    updateWheels,\n  } = useCustomizer();\n\n  const deckDimensions: CSSProperties = useMemo(\n    () => ({\n      width: \"500%\",\n      height: \"500%\",\n      translate: \"20% -0%\",\n      objectFit: \"cover\",\n    }),\n    [],\n  );\n\n  const wheelDimensions: CSSProperties = useMemo(\n    () => ({\n      width: \"125%\",\n      height: \"125%\",\n      translate: \"6% 8%\",\n      objectFit: \"cover\",\n    }),\n    [],\n  );\n\n  return (\n    <div className=\"controls\">\n      <Options title=\"Deck\" selectedName={deck}>\n        {SkateboardOptions.DECK_OPTIONS.map(option => (\n          <Option\n            key={option}\n            name={option}\n            imageField={SkateboardOptions.DECKS[option]}\n            onClick={updateDeck}\n            imageStyles={deckDimensions}\n            selected={option === deck}>\n            {option}\n          </Option>\n        ))}\n      </Options>\n      <Options title=\"Wheels\" selectedName={wheel}>\n        {SkateboardOptions.WHEEL_OPTIONS.map(option => (\n          <Option\n            key={option}\n            name={option}\n            imageField={SkateboardOptions.WHEELS[option]}\n            onClick={updateWheels}\n            imageStyles={wheelDimensions}\n            selected={option === wheel}>\n            {option}\n          </Option>\n        ))}\n      </Options>\n      <Options title=\"Trucks\" selectedName={truck}>\n        {SkateboardOptions.METAL_OPTIONS.map(option => (\n          <Option\n            key={option}\n            name={option}\n            colorField={SkateboardOptions.METALS[option]}\n            onClick={updateTrucks}\n            selected={option === truck}>\n            {option}\n          </Option>\n        ))}\n      </Options>\n      <Options title=\"Bolts\" selectedName={bolt}>\n        {SkateboardOptions.METAL_OPTIONS.map(option => (\n          <Option\n            key={option}\n            name={option}\n            colorField={SkateboardOptions.METALS[option]}\n            onClick={updateBolts}\n            selected={option === bolt}>\n            {option}\n          </Option>\n        ))}\n      </Options>\n    </div>\n  );\n};\n","export default \"__VITE_ASSET__rsl4AS10__\"","export default \"__VITE_ASSET__47Zf0UFr__\"","import { useMemo } from \"react\";\nimport { MeshStandardMaterial } from \"three\";\nimport { useTexture } from \"@react-three/drei\";\nimport { Textures } from \"Tools/Textures\";\nimport { PropLess } from \"Tools/Types\";\nimport ConcreteNormal from \"../Resources/concrete-normal.avif\";\n\nexport const ENVIRONMENT_COLOR = \"#3b3a3a\";\n\nexport const Floor = (_: PropLess) => {\n  const normalMap = useTexture(ConcreteNormal, t => {\n    Textures.wrap(t).repeat(t, 30).rerender(t);\n    t.anisotropy = 8;\n  });\n\n  const material = useMemo(\n    () =>\n      new MeshStandardMaterial({\n        roughness: 0.75,\n        color: ENVIRONMENT_COLOR,\n        normalMap: normalMap,\n      }),\n    [normalMap],\n  );\n  return (\n    <mesh\n      castShadow\n      receiveShadow\n      position={[0, -0.005, 0]}\n      rotation={[-Math.PI / 2, 0, 0]}\n      material={material}>\n      <circleGeometry args={[20, 32]} />\n    </mesh>\n  );\n};\n\nuseTexture.preload(ConcreteNormal);\n","export default \"__VITE_ASSET__Ee6WvK7Q__\"","export default \"__VITE_ASSET__fGgUdfM6__\"","export default \"__VITE_ASSET__T0b0KajT__\"","import { useMemo } from \"react\";\nimport { MeshStandardMaterial } from \"three\";\nimport { useTexture } from \"@react-three/drei\";\nimport { Textures } from \"Tools/Textures\";\nimport GripTapDiffuse from \"../../Resources/skateboard/griptape-diffuse.webp\";\nimport GripTapeRoughness from \"../../Resources/skateboard/griptape-roughness.webp\";\n\nexport const useGripTape = () => {\n  const gripTapeDiffuse = useTexture(GripTapDiffuse);\n  const gripTapeRoughness = useTexture(GripTapeRoughness);\n  return useMemo(() => {\n    const material = new MeshStandardMaterial({\n      map: gripTapeDiffuse,\n      bumpMap: gripTapeRoughness,\n      roughnessMap: gripTapeRoughness,\n      bumpScale: 3.5,\n      roughness: 0.8,\n      color: \"#555\",\n    });\n    if (gripTapeDiffuse) {\n      Textures.wrap(gripTapeDiffuse)\n        .repeat(gripTapeDiffuse, 9)\n        .rerender(gripTapeDiffuse);\n    }\n    if (gripTapeRoughness) {\n      Textures.wrap(gripTapeRoughness)\n        .repeat(gripTapeRoughness, 9)\n        .rerender(gripTapeRoughness);\n      gripTapeRoughness.anisotropy = 8;\n    }\n    return material;\n  }, [gripTapeDiffuse, gripTapeRoughness]);\n};\n\nuseTexture.preload([GripTapDiffuse, GripTapeRoughness]);\n","export default \"__VITE_ASSET__pFIk1vHY__\"","import { useMemo } from \"react\";\nimport { MeshStandardMaterial, Vector2 } from \"three\";\nimport { useTexture } from \"@react-three/drei\";\nimport { Textures } from \"Tools/Textures\";\nimport MetalNormal from \"../../Resources/skateboard/metal-normal.avif\";\n\nexport const useTrucks = (color = \"#555\") => {\n  const metalNormal = useTexture(MetalNormal, t => {\n    Textures.wrap(t).repeat(t, 8).rerender(t);\n    t.anisotropy = 8;\n  });\n  return useMemo(\n    () =>\n      new MeshStandardMaterial({\n        color,\n        metalness: 0.8,\n        roughness: 0.25,\n        normalMap: metalNormal,\n        normalScale: new Vector2(0.3, 0.3),\n      }),\n    [color, metalNormal],\n  );\n};\n\nuseTexture.preload(MetalNormal);\n","import { useMemo } from \"react\";\nimport { MeshStandardMaterial, Texture } from \"three\";\n\nexport const useWheels = (texture: Texture) => {\n  return useMemo(\n    () =>\n      new MeshStandardMaterial({\n        roughness: 0.35,\n        map: texture,\n      }),\n    [texture],\n  );\n};\n","import { useMemo } from \"react\";\nimport { Props } from \"./types\";\nimport { useBolts } from \"./useBolts\";\nimport { useDeck } from \"./useDeck\";\nimport { useGripTape } from \"./useGripTape\";\nimport { useTrucks } from \"./useTrucks\";\nimport { useWheels } from \"./useWheels\";\n\nconst POSITIONS = {\n  side: { rotation: [0, 0, Math.PI / 2], position: [0.25, 0.295, 0] },\n  upright: { rotation: [0, 0, 0], position: [0, 0, 0] },\n} as const;\n\nexport const useViewProperties = ({\n  boltColor,\n  truckColor,\n  deckTexture,\n  wheelTexture,\n  pos = \"upright\",\n}: Props) => {\n  const gripTapeMaterial = useGripTape();\n  const boltMaterial = useBolts(boltColor);\n  const truckMaterial = useTrucks(truckColor);\n  const deckMaterial = useDeck(deckTexture);\n  const wheelMaterial = useWheels(wheelTexture);\n  const position = useMemo(() => POSITIONS[pos], [pos]);\n\n  return {\n    position,\n    wheelMaterial,\n    deckMaterial,\n    truckMaterial,\n    boltMaterial,\n    gripTapeMaterial,\n  };\n};\n","import { useMemo } from \"react\";\nimport { MeshStandardMaterial } from \"three\";\n\nexport const useBolts = (color = \"#555\") => {\n  return useMemo(\n    () =>\n      new MeshStandardMaterial({\n        color,\n        metalness: 0.5,\n        roughness: 0.3,\n      }),\n    [color],\n  );\n};\n","import { useMemo } from \"react\";\nimport { MeshStandardMaterial, Texture } from \"three\";\n\nexport const useDeck = (texture: Texture) => {\n  return useMemo(\n    () =>\n      new MeshStandardMaterial({\n        roughness: 0.1,\n        map: texture,\n      }),\n    [texture],\n  );\n};\n","import { RefObject, useCallback, useMemo, useRef } from \"react\";\nimport { Object3D } from \"three\";\n\nexport const useWheelCache = () => {\n  const wheelRefs = useRef<Object3D[]>([]);\n\n  const cacheObjectReference = useCallback(\n    (index: number, target: RefObject<Object3D[]>) =>\n      (node: Object3D | null) => {\n        if (node) {\n          target.current[index] = node;\n        }\n      },\n    [],\n  );\n\n  const cacheFNs = useMemo(\n    () =>\n      Array.from({ length: 4 }, (_, i) => cacheObjectReference(i, wheelRefs)),\n    [cacheObjectReference],\n  );\n  return [wheelRefs, cacheFNs] as const;\n};\n","import { ForwardedRef, forwardRef, useImperativeHandle } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { KTX2 } from \"Tools/KTX2\";\nimport Skateboard from \"../../Resources/Skateboard.glb\";\nimport { Props, SkateboardGTLF, SMController } from \"./types\";\nimport { useViewProperties } from \"./useViewProperties\";\nimport { useWheelCache } from \"./useWheelCache\";\n\nexport const SkateboardModel = forwardRef(function SkateboardModel(\n  props: Props,\n  ref: ForwardedRef<SMController>,\n) {\n  const { nodes } = useGLTF(Skateboard) as unknown as SkateboardGTLF;\n  const [wheelRefs, wheelCaches] = useWheelCache();\n  const {\n    position,\n    boltMaterial,\n    deckMaterial,\n    truckMaterial,\n    wheelMaterial,\n    gripTapeMaterial,\n  } = useViewProperties(props);\n\n  useImperativeHandle(ref, () => ({ wheels: wheelRefs }), [wheelRefs]);\n\n  return (\n    <group\n      dispose={null}\n      rotation={position.rotation}\n      position={position.position}>\n      <group name=\"Scene\">\n        <mesh\n          name=\"GripTape\"\n          castShadow\n          receiveShadow\n          material={gripTapeMaterial}\n          geometry={nodes.GripTape.geometry}\n          position={[0, 0.286, -0.002]}\n        />\n        <mesh\n          name=\"Wheel1\"\n          castShadow\n          receiveShadow\n          ref={wheelCaches[0]}\n          geometry={nodes.Wheel1.geometry}\n          material={wheelMaterial}\n          position={[0.238, 0.086, 0.635]}\n        />\n        <mesh\n          name=\"Wheel2\"\n          castShadow\n          receiveShadow\n          ref={wheelCaches[1]}\n          geometry={nodes.Wheel2.geometry}\n          material={wheelMaterial}\n          position={[-0.237, 0.086, 0.635]}\n        />\n        <mesh\n          name=\"Deck\"\n          castShadow\n          receiveShadow\n          geometry={nodes.Deck.geometry}\n          material={deckMaterial}\n          position={[0, 0.271, -0.002]}\n        />\n        <mesh\n          name=\"Wheel4\"\n          castShadow\n          receiveShadow\n          ref={wheelCaches[3]}\n          geometry={nodes.Wheel4.geometry}\n          material={wheelMaterial}\n          position={[-0.238, 0.086, -0.635]}\n          rotation={[Math.PI, 0, Math.PI]}\n        />\n        <mesh\n          name=\"Bolts\"\n          castShadow\n          receiveShadow\n          geometry={nodes.Bolts.geometry}\n          material={boltMaterial}\n          position={[0, 0.198, 0]}\n          rotation={[Math.PI, 0, Math.PI]}\n        />\n        <mesh\n          name=\"Wheel3\"\n          castShadow\n          receiveShadow\n          ref={wheelCaches[2]}\n          geometry={nodes.Wheel3.geometry}\n          material={wheelMaterial}\n          position={[0.237, 0.086, -0.635]}\n          rotation={[Math.PI, 0, Math.PI]}\n        />\n        <mesh\n          name=\"Baseplates\"\n          castShadow\n          receiveShadow\n          geometry={nodes.Baseplates.geometry}\n          material={truckMaterial}\n          position={[0, 0.211, 0]}\n        />\n        <mesh\n          name=\"Truck1\"\n          castShadow\n          receiveShadow\n          geometry={nodes.Truck1.geometry}\n          material={truckMaterial}\n          position={[0, 0.101, -0.617]}\n        />\n        <mesh\n          name=\"Truck2\"\n          castShadow\n          receiveShadow\n          geometry={nodes.Truck2.geometry}\n          material={truckMaterial}\n          position={[0, 0.101, 0.617]}\n          rotation={[Math.PI, 0, Math.PI]}\n        />\n      </group>\n    </group>\n  );\n});\n\nif (KTX2.isIOS) {\n  useGLTF.preload(Skateboard);\n}\n","export default \"__VITE_ASSET__J709m2We__\"","import { ForwardedRef, forwardRef, useImperativeHandle } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { KTX2 } from \"Tools/KTX2\";\nimport Skateboard from \"../../Resources/Skateboard-optimized.glb\";\nimport { Props, SkateboardGTLF, SMController } from \"./types\";\nimport { useViewProperties } from \"./useViewProperties\";\nimport { useWheelCache } from \"./useWheelCache\";\n\nexport const SkateboardModelOptimized = forwardRef(\n  function SkateboardModelOptimized(\n    props: Props,\n    ref: ForwardedRef<SMController>,\n  ) {\n    const { nodes } = useGLTF(\n      Skateboard,\n      undefined,\n      undefined,\n      KTX2.extendGLTF,\n    ) as unknown as SkateboardGTLF;\n    const [wheelRefs, wheelCaches] = useWheelCache();\n    const {\n      position,\n      boltMaterial,\n      deckMaterial,\n      truckMaterial,\n      wheelMaterial,\n      gripTapeMaterial,\n    } = useViewProperties(props);\n\n    useImperativeHandle(ref, () => ({ wheels: wheelRefs }), [wheelRefs]);\n\n    return (\n      <group\n        dispose={null}\n        rotation={position.rotation}\n        position={position.position}>\n        <mesh\n          castShadow\n          receiveShadow\n          material={gripTapeMaterial}\n          geometry={nodes.GripTape.geometry}\n          position={[0, 0.306, -0.002]}\n          scale={1.149}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          ref={wheelCaches[0]}\n          material={wheelMaterial}\n          geometry={nodes.Wheel1.geometry}\n          position={[0.242, 0.086, 0.635]}\n          scale={0.077}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          ref={wheelCaches[1]}\n          material={wheelMaterial}\n          geometry={nodes.Wheel2.geometry}\n          position={[-0.241, 0.086, 0.635]}\n          scale={0.077}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          material={deckMaterial}\n          geometry={nodes.Deck.geometry}\n          position={[0, 0.293, -0.002]}\n          scale={1.163}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          ref={wheelCaches[2]}\n          material={wheelMaterial}\n          geometry={nodes.Wheel4.geometry}\n          position={[-0.242, 0.086, -0.635]}\n          rotation={[-Math.PI, 0, -Math.PI]}\n          scale={0.077}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          material={boltMaterial}\n          geometry={nodes.Bolts.geometry}\n          position={[0, 0.164, 0]}\n          rotation={[-Math.PI, 0, -Math.PI]}\n          scale={0.703}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          ref={wheelCaches[3]}\n          material={wheelMaterial}\n          geometry={nodes.Wheel3.geometry}\n          position={[0.241, 0.086, -0.635]}\n          rotation={[-Math.PI, 0, -Math.PI]}\n          scale={0.077}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          material={truckMaterial}\n          geometry={nodes.Baseplates.geometry}\n          position={[0, 0.194, 0]}\n          scale={0.718}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          material={truckMaterial}\n          geometry={nodes.Truck1.geometry}\n          position={[0, 0.125, -0.595]}\n          scale={0.285}\n        />\n        <mesh\n          castShadow\n          receiveShadow\n          material={truckMaterial}\n          geometry={nodes.Truck2.geometry}\n          position={[0, 0.125, 0.595]}\n          rotation={[-Math.PI, 0, -Math.PI]}\n          scale={0.285}\n        />\n      </group>\n    );\n  },\n);\n\nif (!KTX2.isIOS) {\n  useGLTF.preload(Skateboard, undefined, undefined, KTX2.extendGLTF);\n}\n","import { ForwardedRef, forwardRef } from \"react\";\nimport { KTX2 } from \"Tools/KTX2\";\nimport { SkateboardModel as SkateboardModelIOS } from \"./SkateboardModel\";\nimport { SkateboardModelOptimized } from \"./SkateboardModelOptimized\";\nimport { Props, SMController } from \"./types\";\n\nexport const SkateboardModel = forwardRef(function SkateboardModel(\n  props: Props,\n  ref: ForwardedRef<SMController>,\n) {\n  if (KTX2.isIOS) {\n    return <SkateboardModelIOS ref={ref} {...props} />;\n  }\n  return <SkateboardModelOptimized ref={ref} {...props} />;\n});\n\nexport * from \"./types\";\n","import { useMemo } from \"react\";\nimport { useSRGBTexture } from \"./SkateboardModel/useSRGBTexture\";\n\nexport const useSelectedTexture = (\n  options: Record<string, string>,\n  selection?: string,\n) => {\n  const textureURLs = useMemo(() => Object.values(options), [options]);\n  const textures = useSRGBTexture(textureURLs);\n\n  const indices = useMemo(() => {\n    const hash: Record<string, number> = {};\n    let pointer = -1;\n    for (const key in options) {\n      hash[key] = ++pointer;\n    }\n    return hash;\n  }, [options]);\n\n  const selectionIndex = useMemo(\n    () => indices[selection ?? \"-1\"] ?? 0,\n    [indices, selection],\n  );\n  return useMemo(() => textures[selectionIndex], [textures, selectionIndex]);\n};\n","import { SRGBColorSpace, Texture } from \"three\";\nimport { useTexture } from \"@react-three/drei\";\nimport { TextureResult } from \"./types\";\n\nexport const useSRGBTexture = <T extends string | string[]>(\n  urls: T,\n): TextureResult<T> => {\n  const deckTextures = useTexture(urls, t => {\n    const returnArray = Array.isArray(t);\n    const textures: Texture[] = returnArray\n      ? (deckTextures as Texture[])\n      : [deckTextures as Texture];\n    textures.forEach(t => {\n      t.flipY = false;\n      t.colorSpace = SRGBColorSpace;\n      t.needsUpdate = true;\n    });\n  });\n  return deckTextures as TextureResult<T>;\n};\n","import gsap from \"gsap\";\nimport { Fragment, Suspense, useCallback, useEffect, useRef } from \"react\";\nimport { Mesh } from \"three\";\nimport {\n  CameraControls,\n  Environment,\n  Preload,\n  useTexture,\n} from \"@react-three/drei\";\nimport { useLabsLoader } from \"Hooks/useLabsLoader\";\nimport { PropLess } from \"Tools/Types\";\nimport { useCustomizer } from \"../CustomizerContext\";\nimport Lighting from \"../Resources/hdr/warehouse-512.hdr\";\nimport { SkateboardOptions } from \"../SkateboardOptions\";\nimport { ENVIRONMENT_COLOR, Floor } from \"./Floor\";\nimport { SkateboardModel, SMController } from \"./SkateboardModel\";\nimport { useSelectedTexture } from \"./useSelectedTexture\";\n\nconst DEFAULT_METAL_COLOR = \"#6f6e6a\";\n\nexport function PreviewCanvas(_: PropLess) {\n  useLabsLoader();\n  const floor = useRef<Mesh>(null);\n  const controller = useRef<SMController>(null);\n  const { camera, wheel, deck, bolt, truck, lookAtDeck } = useCustomizer();\n\n  const deckTexture = useSelectedTexture(SkateboardOptions.DECKS, deck);\n  const wheelTexture = useSelectedTexture(SkateboardOptions.WHEELS, wheel);\n\n  const truckColor = truck ?? DEFAULT_METAL_COLOR;\n  const boltColor = bolt ?? DEFAULT_METAL_COLOR;\n\n  const onCameraControlStart = useCallback(() => {\n    if (\n      !camera.current ||\n      !floor.current ||\n      camera.current.colliderMeshes.length\n    ) {\n      return;\n    }\n    camera.current.colliderMeshes = [floor.current];\n  }, [camera]);\n\n  useEffect(() => {\n    if (!controller?.current?.wheels?.current?.length) {\n      return;\n    }\n    for (const wheelMesh of controller.current.wheels.current) {\n      if (wheelMesh) {\n        gsap.to(wheelMesh.rotation, {\n          x: \"+=30\",\n          duration: 2.5,\n          ease: \"circ.out\",\n        });\n      }\n    }\n  }, [wheel]);\n\n  useEffect(() => {\n    if (camera.current) {\n      lookAtDeck();\n    }\n  }, [lookAtDeck, camera]);\n\n  return (\n    <Fragment>\n      <Suspense fallback={null}>\n        <Environment files={Lighting} environmentIntensity={0.6} />\n        <directionalLight\n          castShadow\n          lookAt={[0, 0, 0]}\n          position={[1, 1, 1]}\n          intensity={1.6}\n        />\n        <fog attach=\"fog\" args={[ENVIRONMENT_COLOR, 3, 10]} />\n        <color attach=\"background\" args={[ENVIRONMENT_COLOR]} />\n        <Floor />\n        <mesh rotation={[-Math.PI / 2, 0, 0]} ref={floor}>\n          <planeGeometry args={[6, 6]} />\n          <meshBasicMaterial visible={false} />\n        </mesh>\n        <SkateboardModel\n          pos=\"side\"\n          ref={controller}\n          boltColor={boltColor}\n          truckColor={truckColor}\n          deckTexture={deckTexture}\n          wheelTexture={wheelTexture}\n        />\n        <CameraControls\n          makeDefault\n          ref={camera}\n          maxDistance={4}\n          minDistance={0.2}\n          onStart={onCameraControlStart}\n        />\n      </Suspense>\n      <Preload all />\n    </Fragment>\n  );\n}\n\nuseTexture.preload(SkateboardOptions.bitmapTextures);\n","import { Canvas } from \"@react-three/fiber\";\nimport { SplitHeading } from \"Components/SplitHeading\";\nimport { PropLess } from \"Tools/Types\";\nimport { Controls } from \"./Controls\";\nimport { CustomizerContextProvider } from \"./CustomizerContext\";\nimport { PreviewCanvas } from \"./Preview\";\nimport { DEFAULT_CAMERA_POSITION } from \"./useCameraControls\";\nimport \"./styles.scss\";\n\nexport default function SkateboardScene(_: PropLess) {\n  return (\n    <div className=\"skateboard-scene\">\n      <CustomizerContextProvider>\n        <div className=\"preview\">\n          <div className=\"canvas-container\">\n            <Canvas\n              shadows\n              camera={{\n                fov: 50,\n                position: DEFAULT_CAMERA_POSITION,\n              }}>\n              <PreviewCanvas />\n            </Canvas>\n          </div>\n        </div>\n        <div className=\"options-menu\">\n          <SplitHeading text=\"Build Your Board\" />\n          <Controls />\n        </div>\n      </CustomizerContextProvider>\n    </div>\n  );\n}\n"],"names":["_SkateboardOptions","bitmapTextures","Object","values","this","DECKS","WHEELS","__publicField","Black","Gray","Navy","Cream","White","Red","Blue","Green","Yellow","Purple","Magenta","Pink","keys","METALS","SkateboardOptions","DEFAULT_CAMERA_LOOK_AT","DEFAULT_CAMERA_POSITION","CustomizerContext","createContext","wheel","WHEEL_OPTIONS","updateWheels","deck","DECK_OPTIONS","updateDeck","truck","METAL_OPTIONS","updateTrucks","bolt","updateBolts","lookAtDeck","camera","createRef","CustomizerContextProvider","children","setWheel","useState","setBolt","setDeck","setTruck","lookAtBolts","lookAtTruck","lookAtWheel","useRef","setCameraControls","useCallback","target","position","current","setTarget","x","y","z","setPosition","Vector3","useMemo","useCameraControls","createLookAt","stateSetter","lookAt","update","value","jsx","Provider","useCustomizer","useContext","Option","name","selected","onClick","colorField","imageField","imageStyles","classes","useClassNames","onSelect","jsxs","className","src","alt","style","backgroundColor","Options","title","selectedName","Controls","_","deckDimensions","width","height","translate","objectFit","wheelDimensions","map","option","jsxRuntimeExports","Lighting","ConcreteNormal","ENVIRONMENT_COLOR","Floor","normalMap","useTexture","t","Textures","wrap","repeat","rerender","anisotropy","material","MeshStandardMaterial","roughness","color","castShadow","receiveShadow","rotation","Math","PI","args","preload","Skateboard$1","GripTapDiffuse","GripTapeRoughness","MetalNormal","POSITIONS","side","upright","useViewProperties","boltColor","truckColor","deckTexture","wheelTexture","pos","gripTapeMaterial","gripTapeDiffuse","gripTapeRoughness","bumpMap","roughnessMap","bumpScale","useGripTape","boltMaterial","metalness","useBolts","truckMaterial","metalNormal","normalScale","Vector2","useTrucks","deckMaterial","texture","wheelMaterial","useWheels","useWheelCache","wheelRefs","cacheObjectReference","index","node","cacheFNs","Array","from","length","i","SkateboardModel","forwardRef","props","ref","nodes","useGLTF","Skateboard","wheelCaches","wheels","dispose","geometry","GripTape","Wheel1","Wheel2","Deck","Wheel4","Bolts","Wheel3","Baseplates","Truck1","Truck2","KTX2","isIOS","SkateboardModelOptimized","extendGLTF","scale","SkateboardModelIOS","__spreadValues","useSelectedTexture","options","selection","textures","urls","deckTextures","isArray","forEach","flipY","colorSpace","SRGBColorSpace","needsUpdate","useSRGBTexture","indices","hash","pointer","key","selectionIndex","_a","DEFAULT_METAL_COLOR","PreviewCanvas","floor","controller","onCameraControlStart","colliderMeshes","useEffect","_c","_b","wheelMesh","gsapWithCSS","to","duration","ease","Fragment","Suspense","fallback","Environment","files","environmentIntensity","intensity","attach","visible","CameraControls","makeDefault","maxDistance","minDistance","onStart","Preload","all","SkateboardScene","Canvas","shadows","fov","SplitHeading","text"],"mappings":"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"}
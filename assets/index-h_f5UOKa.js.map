{"version":3,"file":"index-h_f5UOKa.js","sources":["../../src/3D/MagazineScene/Context.tsx","../../src/3D/MagazineScene/Controls/index.tsx","../../src/3D/MagazineScene/Page/Geometry.ts","../../src/3D/MagazineScene/Page/index.tsx","../../src/3D/MagazineScene/Magazine.tsx","../../src/3D/MagazineScene/index.tsx"],"sourcesContent":["import {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useMemo,\n  useState,\n} from \"react\";\nimport { OptionalChildren } from \"./types\";\n\nexport const MagazineContext = createContext<IMagazineContext>({\n  current: 1,\n  setCurrent: () => {},\n});\n\nexport const MagazineContextProvider = ({ children }: OptionalChildren) => {\n  const [current, setCurrent] = useState(1);\n\n  const value = useMemo(() => ({ current, setCurrent }), [current]);\n\n  return <MagazineContext value={value}>{children}</MagazineContext>;\n};\n\ninterface IMagazineContext {\n  current: number;\n  setCurrent: Dispatch<SetStateAction<number>>;\n}\n","import { use, useCallback, useMemo } from \"react\";\nimport { useClassNames } from \"@figliolia/classnames\";\nimport { MagazineContext } from \"../Context\";\nimport \"./styles.scss\";\n\nexport const Controls = ({ pages }: ControlsProps) => {\n  const list = useMemo(\n    () => Array.from({ length: pages }, (_, i) => i).slice(1),\n    [pages],\n  );\n  let current = 0;\n  return (\n    <div className=\"magazine-controls\">\n      {list.map(i => (\n        <Button key={i} page={i} number={++current} />\n      ))}\n    </div>\n  );\n};\n\ninterface ControlsProps {\n  pages: number;\n}\n\nfunction Button({ page, number }: ButtonProps) {\n  const { current, setCurrent } = use(MagazineContext);\n\n  const onClick = useCallback(() => {\n    setCurrent(page);\n  }, [page, setCurrent]);\n\n  const classes = useClassNames({ active: page === current });\n\n  const text = useMemo(() => `Page ${number}`, [number]);\n\n  return (\n    <button className={classes} onClick={onClick} data-text={text}>\n      {text}\n    </button>\n  );\n}\n\ninterface ButtonProps {\n  page: number;\n  number: number;\n}\n","import {\n  Bone,\n  BoxGeometry,\n  Color,\n  Float32BufferAttribute,\n  MeshStandardMaterial,\n  Skeleton,\n  SkinnedMesh,\n  Texture,\n  Uint16BufferAttribute,\n  Vector3,\n} from \"three\";\n\nexport class Geometry {\n  public static readonly PAGE_WIDTH = 1.28;\n  public static readonly PAGE_HEIGHT = 1.71;\n  public static readonly PAGE_DEPTH = 0.003;\n  public static readonly PAGE_SEGMENTS = 30;\n  public static readonly TURN_EASE_FACTOR = 0.5;\n  public static readonly FOLD_EASE_FACTOR = 0.3;\n\n  public static readonly WHITE = new Color(\"#fff\");\n  public static readonly EMISSIVE = new Color(\"orange\");\n  public static readonly INSIDE_CURVE_STRENGTH = 0.18;\n  public static readonly OUTSITE_CURVE_STRENGTH = 0.05;\n  public static readonly TURNING_CURVE_STRENGTH = 0.09;\n  public static readonly WHITE_MATERIAL = new MeshStandardMaterial({\n    color: this.WHITE,\n  });\n  public static readonly SEGMENT_WIDTH = this.PAGE_WIDTH / this.PAGE_SEGMENTS;\n\n  public static readonly pageGeometry = new BoxGeometry(\n    this.PAGE_WIDTH,\n    this.PAGE_HEIGHT,\n    this.PAGE_DEPTH,\n    this.PAGE_SEGMENTS,\n    2,\n  );\n\n  public static readonly pageMaterials = [\n    this.WHITE_MATERIAL.clone(),\n    new MeshStandardMaterial({ color: \"#111\" }),\n    this.WHITE_MATERIAL.clone(),\n    this.WHITE_MATERIAL.clone(),\n  ];\n\n  static {\n    this.pageGeometry.translate(this.PAGE_WIDTH / 2, 0, 0);\n    const { position } = this.pageGeometry.attributes;\n    const vertex = new Vector3();\n    const skinIndices: number[] = [];\n    const skinWeights: number[] = [];\n    const { count } = position;\n\n    for (let i = 0; i < count; i++) {\n      vertex.fromBufferAttribute(position, i);\n      const { x } = vertex;\n      const skinIndex = Math.max(0, Math.floor(x / this.SEGMENT_WIDTH));\n      const skinWeight = (x % this.SEGMENT_WIDTH) / this.SEGMENT_WIDTH;\n      skinIndices.push(skinIndex, skinIndex + 1, 0, 0);\n      skinWeights.push(1 - skinWeight, skinWeight, 0, 0);\n    }\n\n    this.pageGeometry.setAttribute(\n      \"skinIndex\",\n      new Uint16BufferAttribute(skinIndices, 4),\n    );\n\n    this.pageGeometry.setAttribute(\n      \"skinWeight\",\n      new Float32BufferAttribute(skinWeights, 4),\n    );\n  }\n\n  public static createSkinnedMesh(frontImage: Texture, backImage: Texture) {\n    const bones = this.createBones();\n    const skeleton = new Skeleton(bones);\n    const materials = this.createPageMaterials(frontImage, backImage);\n    const mesh = new SkinnedMesh(this.pageGeometry, materials);\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n    mesh.frustumCulled = false;\n    mesh.add(bones[0]);\n    mesh.bind(skeleton);\n    return mesh;\n  }\n\n  private static createBones() {\n    const bones: Bone[] = [];\n    for (let i = 0; i < this.PAGE_SEGMENTS; i++) {\n      const bone = new Bone();\n      if (i === 0) {\n        bone.position.x = 0;\n      } else {\n        bone.position.x = this.SEGMENT_WIDTH * i;\n      }\n      bones?.[i - 1]?.attach?.(bone);\n      bones.push(bone);\n    }\n    return bones;\n  }\n\n  private static createPageMaterials(frontImage: Texture, backImage: Texture) {\n    return [\n      ...this.pageMaterials,\n      new MeshStandardMaterial({\n        color: this.WHITE,\n        map: frontImage,\n        roughness: 0.1,\n        emissive: this.EMISSIVE,\n        emissiveIntensity: 0,\n      }),\n      new MeshStandardMaterial({\n        color: this.WHITE,\n        map: backImage,\n        roughness: 0.1,\n        emissive: this.EMISSIVE,\n        emissiveIntensity: 0,\n      }),\n    ];\n  }\n}\n","\"use client\";\nimport { easing } from \"maath\";\nimport { use, useCallback, useMemo, useRef, useState } from \"react\";\nimport { Bone, Group, Mesh, MeshStandardMaterial, SRGBColorSpace } from \"three\";\nimport { degToRad, MathUtils } from \"three/src/math/MathUtils.js\";\nimport { useCursor, useTexture } from \"@react-three/drei\";\nimport { ThreeElements, ThreeEvent, useFrame } from \"@react-three/fiber\";\nimport { MagazineContext } from \"../Context\";\nimport { IMagazinePage } from \"../types\";\nimport { Geometry } from \"./Geometry\";\n\nexport const Page = ({\n  front,\n  back,\n  index,\n  opened,\n  current,\n  bookClosed,\n  ...rest\n}: Props) => {\n  const turnedAt = useRef(0);\n  const lastOpened = useRef(opened);\n  const group = useRef<Group>(null);\n  const skinnedMesh = useRef<Mesh>(null);\n  const { setCurrent } = use(MagazineContext);\n  const [highlighted, setHighlighted] = useState(false);\n\n  useCursor(highlighted);\n\n  const [frontImage, backImage] = useTexture([front, back], ts => {\n    ts.forEach(t => {\n      t.colorSpace = SRGBColorSpace;\n    });\n  });\n\n  const manualSkinnedMesh = useMemo(\n    () => Geometry.createSkinnedMesh(frontImage, backImage),\n    [frontImage, backImage],\n  );\n\n  useFrame((_, delta) => {\n    if (!skinnedMesh.current || !group.current) {\n      return;\n    }\n    const { material } = skinnedMesh.current;\n    if (Array.isArray(material) && material[4]) {\n      const intensity = highlighted ? 0.22 : 0;\n      (material[4] as MeshStandardMaterial).emissiveIntensity = intensity;\n      (material[5] as MeshStandardMaterial).emissiveIntensity = MathUtils.lerp(\n        (material[4] as MeshStandardMaterial).emissiveIntensity,\n        intensity,\n        0.1,\n      );\n    }\n    if (lastOpened.current !== opened) {\n      turnedAt.current = Date.now();\n      lastOpened.current = opened;\n    }\n    const turnDuration = Math.sin(\n      (Math.min(400, Date.now() - turnedAt.current) / 400) * Math.PI,\n    );\n    const rotation = Math.PI / 2;\n    let targetRotation = opened ? -rotation : rotation;\n    if (!bookClosed) {\n      targetRotation += degToRad(index * 0.8);\n    }\n    // @ts-ignore\n    const bones = skinnedMesh.current.skeleton.bones as Bone[];\n    const { length } = bones;\n    for (let i = 0; i < length; i++) {\n      const target = i === 0 ? group.current : bones[i];\n      const insideCurveIntensity = i < 8 ? Math.sin(i * 0.2 + 0.25) : 0;\n      const outsideCurveIntensity = i >= 8 ? Math.cos(i * 0.3 + 0.09) : 0;\n      const turningIntesity =\n        Math.sin(i * Math.PI * (1 / length)) * turnDuration;\n      let foldAngle = degToRad(Math.sign(targetRotation) * 2);\n      let turnAngle = 0;\n      if (bookClosed) {\n        if (i === 0) {\n          foldAngle = 0;\n          turnAngle = targetRotation;\n        }\n      } else {\n        turnAngle =\n          Geometry.INSIDE_CURVE_STRENGTH *\n            insideCurveIntensity *\n            targetRotation -\n          Geometry.OUTSITE_CURVE_STRENGTH *\n            outsideCurveIntensity *\n            targetRotation +\n          Geometry.TURNING_CURVE_STRENGTH * turningIntesity * targetRotation;\n      }\n      const foldIntensity =\n        i > 8 ? Math.sin(i * Math.PI * (1 / length) - 0.5) * turnDuration : 0;\n      easing.dampAngle(\n        target.rotation,\n        \"y\",\n        turnAngle,\n        Geometry.TURN_EASE_FACTOR,\n        delta,\n      );\n      easing.dampAngle(\n        target.rotation,\n        \"x\",\n        foldAngle * foldIntensity,\n        Geometry.FOLD_EASE_FACTOR,\n        delta,\n      );\n    }\n  });\n\n  const zPosition = useMemo(\n    () => -index * Geometry.PAGE_DEPTH + current * Geometry.PAGE_DEPTH,\n    [index, current],\n  );\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    setHighlighted(true);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    setHighlighted(false);\n  }, []);\n\n  const onClick = useCallback(\n    (e: ThreeEvent<PointerEvent>) => {\n      e.stopPropagation();\n      setCurrent(opened ? index : index + 1);\n      setHighlighted(false);\n    },\n    [opened, setCurrent, index],\n  );\n\n  return (\n    <group\n      ref={group}\n      {...rest}\n      onClick={onClick}\n      onPointerEnter={onPointerEnter}\n      onPointerLeave={onPointerLeave}>\n      <primitive\n        ref={skinnedMesh}\n        object={manualSkinnedMesh}\n        position-z={zPosition}\n      />\n    </group>\n  );\n};\n\ntype Props = IMagazinePage &\n  ThreeElements[\"group\"] & {\n    index: number;\n    opened: boolean;\n    current: number;\n    bookClosed: boolean;\n  };\n","import { use, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { MagazineContext } from \"./Context\";\nimport { Page } from \"./Page\";\nimport { IMagazineProps } from \"./types\";\n\nexport const Magazine = ({ images }: IMagazineProps) => {\n  const { current } = use(MagazineContext);\n  const [deferredPage, setDeferredPage] = useState(current);\n  const length = useMemo(() => images.length, [images.length]);\n  const timeout = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const goToPage = useCallback(() => {\n    setDeferredPage(deferredPage => {\n      if (current === deferredPage) {\n        return deferredPage;\n      }\n      timeout.current = setTimeout(\n        () => {\n          goToPage();\n        },\n        Math.abs(current - deferredPage) > 2 ? 50 : 150,\n      );\n      if (current > deferredPage) {\n        return deferredPage + 1;\n      }\n      return deferredPage - 1;\n    });\n  }, [current]);\n\n  useEffect(() => {\n    goToPage();\n    return () => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, [current, goToPage]);\n\n  return (\n    <group rotation-y={-Math.PI / 2} receiveShadow>\n      {images.map((image, index) => (\n        <Page\n          key={index}\n          {...image}\n          index={index}\n          current={deferredPage}\n          opened={deferredPage > index}\n          bookClosed={deferredPage === 0 || deferredPage === length}\n        />\n      ))}\n    </group>\n  );\n};\n","import { Float, OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { FullScreen } from \"Components/FullScreen\";\nimport { LabsScene } from \"Components/LabsScene\";\nimport ATLSmall from \"Images/atl-small.jpg\";\nimport CartaSmall from \"Images/carta-small.jpg\";\nimport GnocciSmall from \"Images/gnocchi-small.jpg\";\nimport OpenSourceSmall from \"Images/openSource-small.webp\";\nimport RepublicSmall from \"Images/republic-small.jpg\";\nimport SkedgeSmall from \"Images/skedge-small.jpg\";\nimport WordCloudsSmall from \"Images/wordClouds-small.png\";\nimport { PropLess } from \"Tools/Types\";\nimport { MagazineContextProvider } from \"./Context\";\nimport { Controls } from \"./Controls\";\nimport { Magazine } from \"./Magazine\";\nimport { IMagazinePage } from \"./types\";\nimport \"./styles.scss\";\n\nconst IMAGES = compileImages([\n  ATLSmall,\n  ATLSmall,\n  CartaSmall,\n  OpenSourceSmall,\n  SkedgeSmall,\n  RepublicSmall,\n  GnocciSmall,\n  WordCloudsSmall,\n  WordCloudsSmall,\n]);\n\nexport const MagazineScene = (_: PropLess) => {\n  return (\n    <MagazineContextProvider>\n      <FullScreen className=\"magazine-scene\">\n        <LabsScene>\n          <Float>\n            <Magazine images={IMAGES} />\n          </Float>\n          <OrbitControls\n            enableZoom={false}\n            minAzimuthAngle={-Math.PI / 4}\n            maxAzimuthAngle={Math.PI / 4}\n            minPolarAngle={Math.PI / 6}\n            maxPolarAngle={Math.PI - Math.PI / 6}\n          />\n          <ambientLight castShadow intensity={2.5} />\n          <PerspectiveCamera\n            makeDefault\n            fov={30}\n            zoom={2}\n            position={[0, -8, 8]}\n          />\n          <spotLight\n            castShadow\n            color={[1, 1, 1]}\n            intensity={1.5}\n            angle={0.6}\n            decay={0}\n            penumbra={0.1}\n            position={[5, 5, 0]}\n            shadow-bias={-0.0001}\n          />\n        </LabsScene>\n        <Controls pages={IMAGES.length} />\n      </FullScreen>\n    </MagazineContextProvider>\n  );\n};\n\nfunction compileImages(images: string[]) {\n  const photos: IMagazinePage[] = [];\n  const { length } = images;\n  for (let i = 0; i < length; i += 2) {\n    photos.push({\n      front: images[i % length],\n      back: images[(i + 1) % length],\n    });\n  }\n  return photos;\n}\n"],"names":["MagazineContext","createContext","current","setCurrent","MagazineContextProvider","children","useState","value","useMemo","jsx","Controls","pages","list","Array","from","length","_","i","slice","className","map","Button","page","number","use","onClick","useCallback","classes","useClassNames","active","text","_Geometry","createSkinnedMesh","frontImage","backImage","bones","this","createBones","skeleton","Skeleton","materials","createPageMaterials","mesh","SkinnedMesh","pageGeometry","castShadow","receiveShadow","frustumCulled","add","bind","PAGE_SEGMENTS","bone","Bone","position","x","SEGMENT_WIDTH","_b","_a","attach","call","push","pageMaterials","MeshStandardMaterial","color","WHITE","roughness","emissive","EMISSIVE","emissiveIntensity","__publicField","Color","PAGE_WIDTH","BoxGeometry","PAGE_HEIGHT","PAGE_DEPTH","WHITE_MATERIAL","clone","translate","attributes","vertex","Vector3","skinIndices","skinWeights","count","fromBufferAttribute","skinIndex","Math","max","floor","skinWeight","setAttribute","Uint16BufferAttribute","Float32BufferAttribute","Geometry","Page","front","back","index","opened","bookClosed","rest","__objRest","turnedAt","useRef","lastOpened","group","skinnedMesh","highlighted","setHighlighted","useCursor","useTexture","ts","forEach","t","colorSpace","SRGBColorSpace","manualSkinnedMesh","useFrame","delta","material","isArray","intensity","MathUtils","lerp","Date","now","turnDuration","sin","min","PI","rotation","targetRotation","degToRad","target","insideCurveIntensity","outsideCurveIntensity","cos","turningIntesity","foldAngle","sign","turnAngle","INSIDE_CURVE_STRENGTH","OUTSITE_CURVE_STRENGTH","TURNING_CURVE_STRENGTH","foldIntensity","easing","dampAngle","TURN_EASE_FACTOR","FOLD_EASE_FACTOR","zPosition","onPointerEnter","e","stopPropagation","onPointerLeave","jsxRuntimeExports","__spreadProps","__spreadValues","ref","object","Magazine","images","deferredPage","setDeferredPage","timeout","goToPage","setTimeout","abs","useEffect","clearTimeout","image","IMAGES","photos","compileImages","ATLSmall","CartaSmall","OpenSourceSmall","SkedgeSmall","RepublicSmall","GnocciSmall","WordCloudsSmall","MagazineScene","jsxs","FullScreen","LabsScene","Float","OrbitControls","enableZoom","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","PerspectiveCamera","makeDefault","fov","zoom","angle","decay","penumbra"],"mappings":"q8BASO,MAAMA,EAAkBC,EAAAA,cAAgC,CAC7DC,QAAS,EACTC,WAAY,SAGDC,EAA0B,EAAGC,eACxC,MAAOH,EAASC,GAAcG,WAAS,GAEjCC,EAAQC,WAAQ,KAAO,CAAEN,UAASC,gBAAe,CAACD,IAEjD,SAAAO,IAACT,EAAgB,CAAAO,QAAeF,YAAS,ECdrCK,EAAW,EAAGC,YACzB,MAAMC,EAAOJ,EAAAA,SACX,IAAMK,MAAMC,KAAK,CAAEC,OAAQJ,IAAS,CAACK,EAAGC,IAAMA,IAAGC,MAAM,IACvD,CAACP,IAEH,IAAIT,EAAU,eAEX,MAAI,CAAAiB,UAAU,oBACZd,SAAAO,EAAKQ,KACJH,GAAAR,EAAAA,IAACY,EAAe,CAAAC,KAAML,EAAGM,SAAUrB,GAAtBe,MAEjB,EAQJ,SAASI,GAAOC,KAAEA,EAAMC,OAAAA,IACtB,MAAMrB,QAAEA,EAASC,WAAAA,GAAeqB,MAAIxB,GAE9ByB,EAAUC,EAAAA,aAAY,KAC1BvB,EAAWmB,EAAI,GACd,CAACA,EAAMnB,IAEJwB,EAAUC,EAAc,CAAEC,OAAQP,IAASpB,IAE3C4B,EAAOtB,WAAQ,IAAM,QAAQe,KAAU,CAACA,iBAG3C,SAAO,CAAAJ,UAAWQ,EAASF,UAAkB,YAAWK,EACtDzB,SACHyB,GAEJ,CC3BO,MAAMC,EAAN,MA6DL,wBAAcC,CAAkBC,EAAqBC,GAC7C,MAAAC,EAAQC,KAAKC,cACbC,EAAW,IAAIC,EAASJ,GACxBK,EAAYJ,KAAKK,oBAAoBR,EAAYC,GACjDQ,EAAO,IAAIC,EAAYP,KAAKQ,aAAcJ,GAMzC,OALPE,EAAKG,YAAa,EAClBH,EAAKI,eAAgB,EACrBJ,EAAKK,eAAgB,EAChBL,EAAAM,IAAIb,EAAM,IACfO,EAAKO,KAAKX,GACHI,CACT,CAEA,kBAAeL,WACb,MAAMF,EAAgB,GACtB,IAAA,IAASlB,EAAI,EAAGA,EAAImB,KAAKc,cAAejC,IAAK,CACrC,MAAAkC,EAAO,IAAIC,EAEfD,EAAKE,SAASC,EADN,IAANrC,EACgB,EAEAmB,KAAKmB,cAAgBtC,EAEzC,OAAAuC,EAAA,OAAAC,EAAA,MAAAtB,OAAA,EAAAA,EAAQlB,EAAI,SAAI,EAAAwC,EAAAC,SAASF,EAAAG,KAAAF,EAAAN,GACzBhB,EAAMyB,KAAKT,EACb,CACO,OAAAhB,CACT,CAEA,0BAAeM,CAAoBR,EAAqBC,GAC/C,MAAA,IACFE,KAAKyB,cACR,IAAIC,EAAqB,CACvBC,MAAO3B,KAAK4B,MACZ5C,IAAKa,EACLgC,UAAW,GACXC,SAAU9B,KAAK+B,SACfC,kBAAmB,IAErB,IAAIN,EAAqB,CACvBC,MAAO3B,KAAK4B,MACZ5C,IAAKc,EACL+B,UAAW,GACXC,SAAU9B,KAAK+B,SACfC,kBAAmB,IAGzB,GA1GAC,EADWtC,EACY,aAAa,MACpCsC,EAFWtC,EAEY,cAAc,MACrCsC,EAHWtC,EAGY,aAAa,MACpCsC,EAJWtC,EAIY,gBAAgB,IACvCsC,EALWtC,EAKY,mBAAmB,IAC1CsC,EANWtC,EAMY,mBAAmB,IAE1CsC,EARWtC,EAQY,QAAQ,IAAIuC,EAAM,SACzCD,EATWtC,EASY,WAAW,IAAIuC,EAAM,WAC5CD,EAVWtC,EAUY,wBAAwB,KAC/CsC,EAXWtC,EAWY,yBAAyB,KAChDsC,EAZWtC,EAYY,yBAAyB,KAChDsC,EAbWtC,EAaY,iBAAiB,IAAI+B,EAAqB,CAC/DC,MAAOhC,EAAKiC,SAEdK,EAhBWtC,EAgBY,gBAAgBA,EAAKwC,WAAaxC,EAAKmB,eAE9DmB,EAlBWtC,EAkBY,eAAe,IAAIyC,EACxCzC,EAAKwC,WACLxC,EAAK0C,YACL1C,EAAK2C,WACL3C,EAAKmB,cACL,IAGFmB,EA1BWtC,EA0BY,gBAAgB,CACrCA,EAAK4C,eAAeC,QACpB,IAAId,EAAqB,CAAEC,MAAO,SAClChC,EAAK4C,eAAeC,QACpB7C,EAAK4C,eAAeC,UAAM,MAI1B7C,EAAKa,aAAaiC,UAAU9C,EAAKwC,WAAa,EAAG,EAAG,GACpD,MAAMlB,SAAEA,GAAatB,EAAKa,aAAakC,WACjCC,EAAS,IAAIC,EACbC,EAAwB,GACxBC,EAAwB,IACxBC,MAAEA,GAAU9B,EAElB,IAAA,IAASpC,EAAI,EAAGA,EAAIkE,EAAOlE,IAAK,CACvB8D,EAAAK,oBAAoB/B,EAAUpC,GAC/B,MAAAqC,EAAEA,GAAMyB,EACRM,EAAYC,KAAKC,IAAI,EAAGD,KAAKE,MAAMlC,EAAIvB,EAAKwB,gBAC5CkC,EAAcnC,EAAIvB,EAAKwB,cAAiBxB,EAAKwB,cACnD0B,EAAYrB,KAAKyB,EAAWA,EAAY,EAAG,EAAG,GAC9CH,EAAYtB,KAAK,EAAI6B,EAAYA,EAAY,EAAG,EAClD,CAEA1D,EAAKa,aAAa8C,aAChB,YACA,IAAIC,EAAsBV,EAAa,IAGzClD,EAAKa,aAAa8C,aAChB,aACA,IAAIE,EAAuBV,EAAa,GAE5C,EA7B4B,GA9BvB,IAAMW,EAAN9D,ECFA,MAAM+D,EAAQrC,IACnB,IAAAD,EAAAC,GAAAsC,MAAAA,EAAAC,KACAA,EAAAC,MACAA,EAAAC,OACAA,EAAAhG,QACAA,EAAAiG,WACAA,GANmB3C,EAOhB4C,+JAAAC,CAPgB7C,EAOhB,CANH,QACA,OACA,QACA,SACA,UACA,eAGM,MAAA8C,EAAWC,SAAO,GAClBC,EAAaD,SAAOL,GACpBO,EAAQF,SAAc,MACtBG,EAAcH,SAAa,OAC3BpG,WAAEA,GAAeqB,EAAAA,IAAIxB,IACpB2G,EAAaC,GAAkBtG,YAAS,GAE/CuG,EAAUF,GAEJ,MAAC1E,EAAYC,GAAa4E,EAAW,CAACf,EAAOC,IAAae,IAC3DA,EAAAC,SAAaC,IACdA,EAAEC,WAAaC,CAAA,GAChB,IAGGC,EAAoB5G,EAAAA,SACxB,IAAMqF,EAAS7D,kBAAkBC,EAAYC,IAC7C,CAACD,EAAYC,IAGNmF,GAAA,CAACrG,EAAGsG,KACX,IAAKZ,EAAYxG,UAAYuG,EAAMvG,QACjC,OAEI,MAAAqH,SAAEA,GAAab,EAAYxG,QACjC,GAAIW,MAAM2G,QAAQD,IAAaA,EAAS,GAAI,CACpC,MAAAE,EAAYd,EAAc,IAAO,EAC7BY,EAAA,GAA4BnD,kBAAoBqD,EAChDF,EAAA,GAA4BnD,kBAAoBsD,EAAUC,KACjEJ,EAAS,GAA4BnD,kBACtCqD,EACA,GAEJ,CACIjB,EAAWtG,UAAYgG,IAChBI,EAAApG,QAAU0H,KAAKC,MACxBrB,EAAWtG,QAAUgG,GAEvB,MAAM4B,EAAexC,KAAKyC,IACvBzC,KAAK0C,IAAI,IAAKJ,KAAKC,MAAQvB,EAASpG,SAAW,IAAOoF,KAAK2C,IAExDC,EAAW5C,KAAK2C,GAAK,EACvB,IAAAE,EAAiBjC,GAAUgC,EAAWA,EACrC/B,IACegC,GAAAC,EAAiB,GAARnC,IAGvB,MAAA9D,EAAQuE,EAAYxG,QAAQoC,SAASH,OACrCpB,OAAEA,GAAWoB,EACnB,IAAA,IAASlB,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MAAMoH,EAAe,IAANpH,EAAUwF,EAAMvG,QAAUiC,EAAMlB,GACzCqH,EAAuBrH,EAAI,EAAIqE,KAAKyC,IAAQ,GAAJ9G,EAAU,KAAQ,EAC1DsH,EAAwBtH,GAAK,EAAIqE,KAAKkD,IAAQ,GAAJvH,EAAU,KAAQ,EAC5DwH,EACJnD,KAAKyC,IAAI9G,EAAIqE,KAAK2C,IAAM,EAAIlH,IAAW+G,EACzC,IAAIY,EAAYN,EAAqC,EAA5B9C,KAAKqD,KAAKR,IAC/BS,EAAY,EACZzC,EACQ,IAANlF,IACUyH,EAAA,EACAE,EAAAT,GAIZS,EAAA/C,EAASgD,sBACPP,EACAH,EACFtC,EAASiD,uBACPP,EACAJ,EACFtC,EAASkD,uBAAyBN,EAAkBN,EAExD,MAAMa,EACJ/H,EAAI,EAAIqE,KAAKyC,IAAI9G,EAAIqE,KAAK2C,IAAM,EAAIlH,GAAU,IAAO+G,EAAe,EAC/DmB,EAAAC,UACLb,EAAOH,SACP,IACAU,EACA/C,EAASsD,iBACT7B,GAEK2B,EAAAC,UACLb,EAAOH,SACP,IACAQ,EAAYM,EACZnD,EAASuD,iBACT9B,EAEJ,KAGF,MAAM+B,EAAY7I,EAAAA,SAChB,KAAOyF,EAAQJ,EAASnB,WAAaxE,EAAU2F,EAASnB,YACxD,CAACuB,EAAO/F,IAGJoJ,EAAiB5H,eAAa6H,IAClCA,EAAEC,kBACF5C,GAAe,EAAI,GAClB,IAEG6C,EAAiB/H,eAAa6H,IAClCA,EAAEC,kBACF5C,GAAe,EAAK,GACnB,IAEGnF,EAAUC,EAAAA,aACb6H,IACCA,EAAEC,kBACSrJ,EAAA+F,EAASD,EAAQA,EAAQ,GACpCW,GAAe,EAAK,GAEtB,CAACV,EAAQ/F,EAAY8F,IAIrB,OAAAyD,EAAAjJ,IAAC,QAAAkJ,EAAAC,EAAA,CACCC,IAAKpD,GACDL,GAFL,CAGC3E,UACA6H,iBACAG,iBACApJ,SAAAqJ,EAAAjJ,IAAC,YAAA,CACCoJ,IAAKnD,EACLoD,OAAQ1C,EACR,aAAYiC,MACd,EC7IOU,EAAW,EAAGC,aACzB,MAAM9J,QAAEA,GAAYsB,EAAAA,IAAIxB,IACjBiK,EAAcC,GAAmB5J,WAASJ,GAC3Ca,EAASP,WAAQ,IAAMwJ,EAAOjJ,QAAQ,CAACiJ,EAAOjJ,SAC9CoJ,EAAU5D,SAA6C,MAEvD6D,EAAW1I,EAAAA,aAAY,KAC3BwI,GAAgBD,GACV/J,IAAY+J,EACPA,GAETE,EAAQjK,QAAUmK,YAChB,WAGA/E,KAAKgF,IAAIpK,EAAU+J,GAAgB,EAAI,GAAK,KAE1C/J,EAAU+J,EACLA,EAAe,EAEjBA,EAAe,IACvB,GACA,CAAC/J,IAWJ,OATAqK,EAAAA,WAAU,SAED,KACDJ,EAAQjK,SACVsK,aAAaL,EAAQjK,QACvB,IAED,CAACA,EAASkK,MAGV3J,IAAA,QAAA,CAAM,cAAa6E,KAAK2C,GAAK,EAAGnF,eAAa,EAC3CzC,SAAA2J,EAAO5I,KAAI,CAACqJ,EAAOxE,IAClByD,EAAAjJ,IAACqF,EAAA6D,OAEKc,GAFL,CAGCxE,QACA/F,QAAS+J,EACT/D,OAAQ+D,EAAehE,EACvBE,WAA6B,IAAjB8D,GAAsBA,IAAiBlJ,IAL9CkF,MAQX,ECjCEyE,EAmDN,SAAuBV,GACrB,MAAMW,EAA0B,IAC1B5J,OAAEA,GAAWiJ,EACnB,IAAA,IAAS/I,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/B0J,EAAO/G,KAAK,CACVmC,MAAOiE,EAAO/I,EAAIF,GAClBiF,KAAMgE,GAAQ/I,EAAI,GAAKF,KAGpB,OAAA4J,CACT,CA7DeC,CAAc,CAC3BC,EACAA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAA,IAGWC,EAAiBpK,GAEzBP,EAAAA,IAAAL,EAAA,CACCC,SAACgL,EAAAA,KAAAC,EAAA,CAAWnK,UAAU,iBACpBd,SAAA,QAACkL,EACC,CAAAlL,SAAA,OAACmL,EACC,CAAAnL,SAAAI,EAAAA,IAACsJ,EAAS,CAAAC,OAAQU,MAEpBhB,EAAAjJ,IAACgL,EAAA,CACCC,YAAY,EACZC,iBAAkBrG,KAAK2C,GAAK,EAC5B2D,gBAAiBtG,KAAK2C,GAAK,EAC3B4D,cAAevG,KAAK2C,GAAK,EACzB6D,cAAexG,KAAK2C,GAAK3C,KAAK2C,GAAK,IAEpCxH,EAAAA,IAAA,eAAA,CAAaoC,YAAU,EAAC4E,UAAW,MACpCiC,EAAAjJ,IAACsL,EAAA,CACCC,aAAW,EACXC,IAAK,GACLC,KAAM,EACN7I,SAAU,CAAC,GAAG,EAAI,KAEpBqG,EAAAjJ,IAAC,YAAA,CACCoC,YAAU,EACVkB,MAAO,CAAC,EAAG,EAAG,GACd0D,UAAW,IACX0E,MAAO,GACPC,MAAO,EACPC,SAAU,GACVhJ,SAAU,CAAC,EAAG,EAAG,GACjB,eAAa,YAGhB5C,IAAAC,EAAA,CAASC,MAAO+J,EAAO3J"}
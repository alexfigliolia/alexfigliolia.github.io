{"version":3,"file":"index-VfaAmoAH.js","sources":["../../node_modules/@figliolia/ripples/dist/mjs/ImageLoader.js","../../node_modules/@figliolia/ripples/dist/mjs/Options.js","../../node_modules/@figliolia/ripples/dist/mjs/Shaders.js","../../node_modules/@figliolia/ripples/dist/mjs/StyleCache.js","../../node_modules/@figliolia/ripples/dist/mjs/Textures.js","../../node_modules/@figliolia/ripples/dist/mjs/BrowserSupport.js","../../node_modules/@figliolia/ripples/dist/mjs/WebGL.js","../../node_modules/@figliolia/ripples/dist/mjs/Ripples.js","../../src/Components/Page/index.tsx","../../src/Components/Button3D/index.tsx"],"sourcesContent":["export class ImageLoader {\n    Textures;\n    GL;\n    constructor(Textures) {\n        this.Textures = Textures;\n        this.GL = this.Textures.GL;\n    }\n    load(src, crossOrigin) {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => {\n                this.textureIze(image);\n                resolve(image);\n            };\n            image.onerror = () => {\n                this.Textures.setTransparent();\n                reject();\n            };\n            image.crossOrigin = this.isDataUri(src) ? null : crossOrigin;\n            image.src = src;\n        });\n    }\n    textureIze(image) {\n        const wrapping = this.isPowerOfTwo(image.width) && this.isPowerOfTwo(image.height)\n            ? this.GL.REPEAT\n            : this.GL.CLAMP_TO_EDGE;\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.Textures.backgroundTexture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, wrapping);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, wrapping);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, image);\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n    isPowerOfTwo(x) {\n        return (x & (x - 1)) == 0;\n    }\n}\n","export class Options {\n    resolution;\n    dropRadius;\n    perturbance;\n    crossOrigin;\n    interactive;\n    imageUrl;\n    constructor(options) {\n        const configuration = this.configure(options);\n        this.imageUrl = configuration.imageUrl;\n        this.dropRadius = configuration.dropRadius;\n        this.resolution = configuration.resolution;\n        this.interactive = configuration.interactive;\n        this.perturbance = configuration.perturbance;\n        this.crossOrigin = configuration.crossOrigin;\n    }\n    static defaults = {\n        imageUrl: null,\n        resolution: 256,\n        dropRadius: 20,\n        perturbance: 0.03,\n        interactive: true,\n        crossOrigin: \"\",\n    };\n    configure(options) {\n        return Object.assign({}, Options.defaults, options);\n    }\n    extractUrl(value) {\n        const urlMatch = /url\\([\"']?([^\"']*)[\"']?\\)/.exec(value);\n        if (urlMatch == null) {\n            return null;\n        }\n        return urlMatch[1];\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n}\n","export class Shaders {\n    dropProgram;\n    updateProgram;\n    renderProgram;\n    GL;\n    textureDelta;\n    constructor(GL, resolution) {\n        this.GL = GL;\n        this.textureDelta = new Float32Array([1 / resolution, 1 / resolution]);\n        this.dropProgram = this.compileDrop();\n        this.updateProgram = this.compileUpdate();\n        this.GL.uniform2fv(this.updateProgram.locations.delta, this.textureDelta);\n        this.renderProgram = this.compileRender();\n        this.GL.uniform2fv(this.renderProgram.locations.delta, this.textureDelta);\n    }\n    drop(position, radius, strength) {\n        if (this.dropProgram) {\n            this.GL.useProgram(this.dropProgram.id);\n            this.GL.uniform2fv(this.dropProgram.locations.center, position);\n            this.GL.uniform1f(this.dropProgram.locations.radius, radius);\n            this.GL.uniform1f(this.dropProgram.locations.strength, strength);\n        }\n    }\n    render(perturbance) {\n        this.GL.uniform1f(this.renderProgram.locations.perturbance, perturbance);\n        this.GL.uniform2fv(this.renderProgram.locations.topLeft, \n        // @ts-ignore\n        this.renderProgram.uniforms.topLeft);\n        this.GL.uniform2fv(this.renderProgram.locations.bottomRight, \n        // @ts-ignore\n        this.renderProgram.uniforms.bottomRight);\n        this.GL.uniform2fv(this.renderProgram.locations.containerRatio, \n        // @ts-ignore\n        this.renderProgram.uniforms.containerRatio);\n        this.GL.uniform1i(this.renderProgram.locations.samplerBackground, 0);\n        this.GL.uniform1i(this.renderProgram.locations.samplerRipples, 1);\n    }\n    compileDrop() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.DROP_PROGRAM);\n    }\n    compileUpdate() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.UPDATE_PROGRAM);\n    }\n    compileRender() {\n        return this.createProgram(Shaders.RENDER_BACKGROUND_PROGRAM, Shaders.RENDER_RIPPLE_PROGRAM);\n    }\n    createProgram(vertexSource, fragmentSource) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const program = { id: this.GL.createProgram() };\n        this.GL.attachShader(program.id, this.compileSource(this.GL.VERTEX_SHADER, vertexSource));\n        this.GL.attachShader(program.id, this.compileSource(this.GL.FRAGMENT_SHADER, fragmentSource));\n        this.GL.linkProgram(program.id);\n        if (!this.GL.getProgramParameter(program.id, this.GL.LINK_STATUS)) {\n            throw new Error(\"link error: \" + this.GL.getProgramInfoLog(program.id));\n        }\n        program.uniforms = {};\n        program.locations = {};\n        this.GL.useProgram(program.id);\n        this.GL.enableVertexAttribArray(0);\n        let match, name;\n        const regex = /uniform (\\w+) (\\w+)/g;\n        const shaderCode = vertexSource + fragmentSource;\n        while ((match = regex.exec(shaderCode)) != null) {\n            name = match[2];\n            program.locations[name] = this.GL.getUniformLocation(program.id, name);\n        }\n        return program;\n    }\n    compileSource(type, source) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const shader = this.GL.createShader(type);\n        this.GL.shaderSource(shader, source);\n        this.GL.compileShader(shader);\n        if (!this.GL.getShaderParameter(shader, this.GL.COMPILE_STATUS)) {\n            throw new Error(\"compile error: \" + this.GL.getShaderInfoLog(shader));\n        }\n        return shader;\n    }\n    static VERTEX_SHADER = [\n        \"attribute vec2 vertex;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"coord = vertex * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static DROP_PROGRAM = [\n        \"precision highp float;\",\n        \"const float PI = 3.141592653589793;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 center;\",\n        \"uniform float radius;\",\n        \"uniform float strength;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"float drop = max(0.0, 1.0 - length(center * 0.5 + 0.5 - coord) / radius);\",\n        \"drop = 0.5 - cos(drop * PI) * 0.5;\",\n        \"info.r += drop * strength;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static UPDATE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 delta;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"vec2 dx = vec2(delta.x, 0.0);\",\n        \"vec2 dy = vec2(0.0, delta.y);\",\n        \"float average = (\",\n        \"texture2D(texture, coord - dx).r +\",\n        \"texture2D(texture, coord - dy).r +\",\n        \"texture2D(texture, coord + dx).r +\",\n        \"texture2D(texture, coord + dy).r\",\n        \") * 0.25;\",\n        \"info.g += (average - info.r) * 2.0;\",\n        \"info.g *= 0.995;\",\n        \"info.r += info.g;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_BACKGROUND_PROGRAM = [\n        \"precision highp float;\",\n        \"attribute vec2 vertex;\",\n        \"uniform vec2 topLeft;\",\n        \"uniform vec2 bottomRight;\",\n        \"uniform vec2 containerRatio;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"backgroundCoord = mix(topLeft, bottomRight, vertex * 0.5 + 0.5);\",\n        \"backgroundCoord.y = 1.0 - backgroundCoord.y;\",\n        \"ripplesCoord = vec2(vertex.x, -vertex.y) * containerRatio * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex.x, -vertex.y, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_RIPPLE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D samplerBackground;\",\n        \"uniform sampler2D samplerRipples;\",\n        \"uniform vec2 delta;\",\n        \"uniform float perturbance;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"float height = texture2D(samplerRipples, ripplesCoord).r;\",\n        \"float heightX = texture2D(samplerRipples, vec2(ripplesCoord.x + delta.x, ripplesCoord.y)).r;\",\n        \"float heightY = texture2D(samplerRipples, vec2(ripplesCoord.x, ripplesCoord.y + delta.y)).r;\",\n        \"vec3 dx = vec3(delta.x, heightX - height, 0.0);\",\n        \"vec3 dy = vec3(0.0, heightY - height, delta.y);\",\n        \"vec2 offset = -normalize(cross(dy, dx)).xz;\",\n        \"float specular = pow(max(0.0, dot(offset, normalize(vec2(-0.6, 1.0)))), 4.0);\",\n        \"gl_FragColor = texture2D(samplerBackground, backgroundCoord + offset * perturbance) + specular;\",\n        \"}\",\n    ].join(\"\\n\");\n}\n","export class StyleCache extends Map {\n    constructor() {\n        super([\n            [\"zIndex\", \"\"],\n            [\"position\", \"\"],\n            [\"backgroundWidth\", 0],\n            [\"backgroundHeight\", 0],\n            [\"originalInlineCSS\", \"\"],\n            [\"originalCSSBackgroundImage\", \"\"],\n        ]);\n    }\n    initialize(target) {\n        const { position, zIndex, backgroundImage } = window.getComputedStyle(target);\n        this.set(\"zIndex\", zIndex);\n        this.set(\"position\", position);\n        this.set(\"originalCSSBackgroundImage\", backgroundImage);\n        this.set(\"originalInlineCSS\", target.style.backgroundImage);\n    }\n    get(key) {\n        return super.get(key);\n    }\n    evict(key) {\n        return super.set(key, \"\");\n    }\n}\n","import { BrowserSupport } from \"./BrowserSupport.js\";\nexport class Textures {\n    quad;\n    bufferReadIndex = 1;\n    bufferWriteIndex = 0;\n    GL;\n    textures = [];\n    backgroundTexture;\n    frameBuffers = [];\n    static browserSupport = new BrowserSupport();\n    transparentPixels = this.createImageData(32, 32);\n    constructor(context) {\n        this.GL = context;\n        this.quad = this.GL.createBuffer();\n        this.backgroundTexture = this.createBackground();\n    }\n    drawQuad() {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        this.GL.vertexAttribPointer(0, 2, this.GL.FLOAT, false, 0, 0);\n        this.GL.drawArrays(this.GL.TRIANGLE_FAN, 0, 4);\n    }\n    get firstTexture() {\n        return this.textures[0];\n    }\n    get readTexture() {\n        return this.textures[this.bufferReadIndex];\n    }\n    get writeTexture() {\n        return this.textures[this.bufferWriteIndex];\n    }\n    get readFrame() {\n        return this.frameBuffers[this.bufferReadIndex];\n    }\n    get writeFrame() {\n        return this.frameBuffers[this.bufferWriteIndex];\n    }\n    getBrowserExtensions() {\n        Textures.browserSupport.extensions.forEach(name => {\n            this.GL.getExtension(name);\n        });\n    }\n    initialize(resolution) {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        const { linearSupport, type, arrayType } = Textures.browserSupport;\n        const textureData = arrayType\n            ? new arrayType(resolution * resolution * 4)\n            : null;\n        for (let i = 0; i < 2; i++) {\n            const texture = this.GL.createTexture();\n            const frameBuffer = this.GL.createFramebuffer();\n            this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n            this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, resolution, resolution, 0, this.GL.RGBA, type, textureData);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            this.textures.push(texture);\n            this.frameBuffers.push(frameBuffer);\n        }\n    }\n    setTransparent() {\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.backgroundTexture);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, this.transparentPixels);\n    }\n    swapBufferIndices() {\n        this.bufferWriteIndex = 1 - this.bufferWriteIndex;\n        this.bufferReadIndex = 1 - this.bufferReadIndex;\n    }\n    createBackground() {\n        const texture = this.GL.createTexture();\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.pixelStorei(this.GL.UNPACK_FLIP_Y_WEBGL, 1);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.LINEAR);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.LINEAR);\n        return texture;\n    }\n    createImageData(width, height) {\n        try {\n            return new ImageData(width, height);\n        }\n        catch (e) {\n            // Fallback for IE\n            const canvas = document.createElement(\"canvas\");\n            return canvas.getContext(\"2d\")?.createImageData(width, height);\n        }\n    }\n}\n","export class BrowserSupport {\n    type;\n    extensions;\n    linearSupport;\n    GL;\n    arrayType;\n    constructor() {\n        this.detect();\n    }\n    detect() {\n        const extensions = this.getExtensions();\n        const texture = this.frameAndBuffer();\n        const configurations = this.getAll(extensions);\n        const { length } = configurations;\n        for (let i = 0; i < length; i++) {\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, 32, 32, 0, this.GL.RGBA, configurations[i].type, null);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            if (this.GL.checkFramebufferStatus(this.GL.FRAMEBUFFER) ===\n                this.GL.FRAMEBUFFER_COMPLETE) {\n                const config = configurations[i];\n                this.type = config.type;\n                this.arrayType = config.arrayType;\n                this.extensions = config.extensions;\n                this.linearSupport = config.linearSupport;\n                return;\n            }\n        }\n        throw new Error(\"No compatible browser configurations\");\n    }\n    getAll(extensions) {\n        const configs = [];\n        configs.push(this.createConfig(\"float\", this.GL.FLOAT, Float32Array, extensions));\n        if (extensions.OES_texture_half_float) {\n            configs.push(this.createConfig(\"half_float\", extensions.OES_texture_half_float.HALF_FLOAT_OES, null, extensions));\n        }\n        return configs;\n    }\n    createConfig(type, glType, arrayType, extensions) {\n        const name = \"OES_texture_\" + type, nameLinear = name + \"_linear\", linearSupport = nameLinear in extensions, configExtensions = [name];\n        if (linearSupport) {\n            configExtensions.push(nameLinear);\n        }\n        return {\n            type: glType,\n            arrayType: arrayType,\n            linearSupport: linearSupport,\n            extensions: configExtensions,\n        };\n    }\n    frameAndBuffer() {\n        const texture = this.GL.createTexture();\n        const frameBuffer = this.GL.createFramebuffer();\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n        return texture;\n    }\n    getExtensions() {\n        const canvas = document.createElement(\"canvas\");\n        this.GL = (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n        if (!this.GL) {\n            throw new Error(\"No WebGL support\");\n        }\n        const extensions = {};\n        const keys = [\n            \"OES_texture_float\",\n            \"OES_texture_half_float\",\n            \"OES_texture_float_linear\",\n            \"OES_texture_half_float_linear\",\n        ];\n        keys.forEach(name => {\n            const extension = this.GL.getExtension(name);\n            if (extension) {\n                extensions[name] = extension;\n            }\n        });\n        if (!extensions.OES_texture_float) {\n            throw new Error(\"No texture float support\");\n        }\n        return extensions;\n    }\n}\n","import { ImageLoader } from \"./ImageLoader.js\";\nimport { Options } from \"./Options.js\";\nimport { Shaders } from \"./Shaders.js\";\nimport { StyleCache } from \"./StyleCache.js\";\nimport { Textures } from \"./Textures.js\";\nexport class WebGL extends Options {\n    Shaders;\n    Textures;\n    quad;\n    target;\n    canvas;\n    GL;\n    StyleCache = new StyleCache();\n    imageSource = null;\n    constructor(target, options) {\n        super(options);\n        this.target = target;\n        this.canvas = document.createElement(\"canvas\");\n        this.positionCanvas();\n        this.GL = this.createGL(this.canvas);\n        this.Shaders = new Shaders(this.GL, this.resolution);\n        this.Textures = new Textures(this.GL);\n    }\n    initializeWebGL() {\n        this.Textures.initialize(this.resolution);\n        this.GL.bufferData(this.GL.ARRAY_BUFFER, new Float32Array([-1, -1, +1, -1, +1, +1, -1, +1]), this.GL.STATIC_DRAW);\n        this.Textures.setTransparent();\n        void this.loadImage();\n        this.GL.clearColor(0, 0, 0, 0);\n        this.GL.blendFunc(this.GL.SRC_ALPHA, this.GL.ONE_MINUS_SRC_ALPHA);\n    }\n    hideCSSBackground() {\n        const inlineCSS = this.target.style.backgroundImage;\n        if (inlineCSS === \"none\") {\n            return;\n        }\n        this.StyleCache.set(\"originalInlineCSS\", inlineCSS);\n        this.StyleCache.set(\"originalCSSBackgroundImage\", window.getComputedStyle(this.target).backgroundImage);\n        this.target.style.backgroundImage = \"none\";\n    }\n    render() {\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, null);\n        this.GL.viewport(0, 0, this.canvas.width, this.canvas.height);\n        this.GL.enable(this.GL.BLEND);\n        this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);\n        this.GL.useProgram(this.Shaders.renderProgram.id);\n        this.bindTexture(this.Textures.backgroundTexture, 0);\n        this.bindTexture(this.Textures.firstTexture, 1);\n        this.Shaders.render(this.perturbance);\n        this.Textures.drawQuad();\n        this.GL.disable(this.GL.BLEND);\n    }\n    update() {\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.GL.useProgram(this.Shaders.updateProgram.id);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    isPercentage(str) {\n        return str[str.length - 1] == \"%\";\n    }\n    bindTexture(texture, unit = 0) {\n        this.GL.activeTexture(this.GL.TEXTURE0 + (unit || 0));\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n    }\n    positionCanvas() {\n        this.canvas.width = this.target.offsetWidth;\n        this.canvas.height = this.target.offsetHeight;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0\";\n        this.canvas.style.right = \"0\";\n        this.canvas.style.bottom = \"0\";\n        this.canvas.style.left = \"0\";\n        this.canvas.style.zIndex = \"-1\";\n        this.target.appendChild(this.canvas);\n    }\n    createGL(canvas) {\n        return (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n    }\n    async loadImage() {\n        const { backgroundImage } = window.getComputedStyle(this.target);\n        const newImageSource = this.imageUrl ||\n            this.extractUrl(this.StyleCache.get(\"originalCSSBackgroundImage\")) ||\n            this.extractUrl(backgroundImage);\n        if (newImageSource == this.imageSource) {\n            return;\n        }\n        this.imageSource = newImageSource;\n        if (!this.imageSource) {\n            this.Textures.setTransparent();\n            return;\n        }\n        try {\n            const loader = new ImageLoader(this.Textures);\n            const image = await loader.load(this.imageSource, this.crossOrigin);\n            this.StyleCache.set(\"backgroundWidth\", image.width);\n            this.StyleCache.set(\"backgroundHeight\", image.height);\n            this.hideCSSBackground();\n        }\n        catch (error) {\n            // silence\n        }\n    }\n}\n","import { WebGL } from \"./WebGL.js\";\nexport class Ripples extends WebGL {\n    time = 0;\n    visible = false;\n    running = false;\n    destroyed = false;\n    initialized = false;\n    constructor(target, options) {\n        super(target, options);\n        this.onClick = this.onClick.bind(this);\n        this.onTouch = this.onTouch.bind(this);\n        this.updateSize = this.updateSize.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.cacheTargetPositions();\n        this.setupWebGL();\n    }\n    drop(x, y, radius, strength) {\n        const { offsetHeight, offsetWidth } = this.target;\n        const longestSide = Math.max(offsetHeight, offsetWidth);\n        radius = radius / longestSide;\n        const dropPosition = new Float32Array([\n            (2 * x - offsetWidth) / longestSide,\n            (offsetHeight - 2 * y) / longestSide,\n        ]);\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.Shaders.drop(dropPosition, radius, strength);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    updateSize() {\n        const { offsetHeight, offsetWidth } = this.target;\n        if (offsetWidth !== this.canvas.width ||\n            offsetHeight !== this.canvas.height) {\n            this.canvas.width = offsetWidth;\n            this.canvas.height = offsetHeight;\n            void this.reloadImage();\n        }\n    }\n    show() {\n        this.visible = true;\n        this.canvas.style.display = \"block\";\n        this.hideCSSBackground();\n    }\n    hide() {\n        this.visible = false;\n        this.canvas.style.display = \"none\";\n        this.restoreCSSBackground();\n    }\n    pause() {\n        this.running = false;\n    }\n    play() {\n        this.running = true;\n    }\n    destroy() {\n        this.target.style.zIndex = this.StyleCache.get(\"zIndex\");\n        this.target.style.position = this.StyleCache.get(\"position\");\n        // @ts-ignore\n        this.GL = null;\n        window.removeEventListener(\"resize\", this.updateSize);\n        this.target.removeEventListener(\"mousedown\", this.onClick);\n        this.target.removeEventListener(\"touchmove\", this.onTouch);\n        this.target.removeEventListener(\"touchstart\", this.onTouch);\n        this.target.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.target.removeChild(this.canvas);\n        this.restoreCSSBackground();\n        cancelAnimationFrame(this.time);\n        this.destroyed = true;\n    }\n    reloadImage() {\n        this.restoreCSSBackground();\n        this.StyleCache.evict(\"originalCSSBackgroundImage\");\n        return this.loadImage();\n    }\n    cacheTargetPositions() {\n        this.StyleCache.initialize(this.target);\n        this.target.style.zIndex = \"0\";\n        this.target.style.position = \"relative\";\n    }\n    setupWebGL() {\n        this.Textures.getBrowserExtensions();\n        window.addEventListener(\"resize\", this.updateSize);\n        this.initializeWebGL();\n        this.visible = true;\n        this.running = true;\n        this.initialized = true;\n        this.setupPointerEvents();\n        const step = () => {\n            if (!this.destroyed) {\n                this.step();\n                this.time = requestAnimationFrame(step);\n            }\n        };\n        this.time = requestAnimationFrame(step);\n    }\n    setupPointerEvents() {\n        this.target.addEventListener(\"mousedown\", this.onClick);\n        this.target.addEventListener(\"mousemove\", this.onMouseMove);\n        this.target.addEventListener(\"touchmove\", this.onTouch, { passive: true });\n        this.target.addEventListener(\"touchstart\", this.onTouch, { passive: true });\n    }\n    onClick(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius * 1.5, 0.14);\n    }\n    onTouch(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        const touches = e.changedTouches;\n        for (let i = 0; i < touches.length; i++) {\n            this.dropAtPointer(touches[i], this.dropRadius, 0.01);\n        }\n    }\n    onMouseMove(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius, 0.01);\n    }\n    get pointerEventsEnabled() {\n        return this.visible && this.running && this.interactive;\n    }\n    step() {\n        if (!this.visible) {\n            return;\n        }\n        this.computeTextureBoundaries();\n        if (this.running) {\n            this.update();\n        }\n        this.render();\n    }\n    computeBackgroundSize(backgroundSize, container) {\n        const BW = this.StyleCache.get(\"backgroundWidth\");\n        const BH = this.StyleCache.get(\"backgroundHeight\");\n        if (backgroundSize == \"cover\") {\n            const scale = Math.max(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        if (backgroundSize == \"contain\") {\n            const scale = Math.min(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        const BP = backgroundSize.split(\" \");\n        let backgroundWidth = BP[0] || \"\";\n        let backgroundHeight = BP[1] || backgroundWidth;\n        if (this.isPercentage(backgroundWidth)) {\n            backgroundWidth = (container.width * parseFloat(backgroundWidth)) / 100;\n        }\n        else if (backgroundWidth != \"auto\") {\n            backgroundWidth = parseFloat(backgroundWidth);\n        }\n        if (this.isPercentage(backgroundHeight)) {\n            backgroundHeight =\n                (container.height * parseFloat(backgroundHeight)) / 100;\n        }\n        else if (backgroundHeight != \"auto\") {\n            backgroundHeight = parseFloat(backgroundHeight);\n        }\n        if (backgroundWidth == \"auto\" && backgroundHeight == \"auto\") {\n            backgroundWidth = BW;\n            backgroundHeight = BH;\n        }\n        else {\n            if (backgroundWidth == \"auto\") {\n                backgroundWidth = BW * (backgroundHeight / BH);\n            }\n            if (backgroundHeight == \"auto\") {\n                backgroundHeight = BH * (backgroundWidth / BW);\n            }\n        }\n        return [backgroundWidth, backgroundHeight];\n    }\n    computeTextureBoundaries() {\n        const { backgroundSize, backgroundAttachment, backgroundPosition: BP, } = window.getComputedStyle(this.target);\n        const backgroundPosition = this.translateBackgroundPosition(BP);\n        let container;\n        if (backgroundAttachment == \"fixed\") {\n            container = {\n                left: window.scrollX,\n                top: window.scrollY,\n                width: window.innerWidth,\n                height: window.innerHeight,\n            };\n        }\n        else {\n            const { offsetTop, offsetLeft, offsetHeight, offsetWidth } = this.target;\n            container = {\n                top: offsetTop,\n                left: offsetLeft,\n                width: offsetWidth,\n                height: offsetHeight,\n            };\n        }\n        const [width, height] = this.computeBackgroundSize(backgroundSize, container);\n        let [x, y] = backgroundPosition;\n        if (this.isPercentage(x)) {\n            x = container.left + ((container.width - width) * parseFloat(x)) / 100;\n        }\n        else {\n            x = container.left + parseFloat(x);\n        }\n        if (this.isPercentage(y)) {\n            y = container.top + ((container.height - height) * parseFloat(y)) / 100;\n        }\n        else {\n            y = container.top + parseFloat(y);\n        }\n        const { offsetLeft, offsetTop, offsetHeight, offsetWidth } = this.target;\n        const floats = new Float32Array([\n            (offsetLeft - x) / width,\n            (offsetTop - y) / height,\n        ]);\n        this.Shaders.renderProgram.uniforms.topLeft = floats;\n        this.Shaders.renderProgram.uniforms.bottomRight = new Float32Array([\n            floats[0] + offsetWidth / width,\n            floats[1] + offsetHeight / height,\n        ]);\n        const maxSide = Math.max(this.canvas.width, this.canvas.height);\n        this.Shaders.renderProgram.uniforms.containerRatio = new Float32Array([\n            this.canvas.width / maxSide,\n            this.canvas.height / maxSide,\n        ]);\n    }\n    translateBackgroundPosition(value) {\n        const parts = value.split(\" \");\n        if (parts.length === 1) {\n            switch (value) {\n                case \"center\":\n                    return [\"50%\", \"50%\"];\n                case \"top\":\n                    return [\"50%\", \"0\"];\n                case \"bottom\":\n                    return [\"50%\", \"100%\"];\n                case \"left\":\n                    return [\"0\", \"50%\"];\n                case \"right\":\n                    return [\"100%\", \"50%\"];\n                default:\n                    return [value, \"50%\"];\n            }\n        }\n        return parts.map(part => {\n            switch (value) {\n                case \"center\":\n                    return \"50%\";\n                case \"top\":\n                case \"left\":\n                    return \"0\";\n                case \"right\":\n                case \"bottom\":\n                    return \"100%\";\n                default:\n                    return part;\n            }\n        });\n    }\n    restoreCSSBackground() {\n        this.target.style.backgroundImage =\n            this.StyleCache.get(\"originalInlineCSS\") || \"\";\n    }\n    dropAtPointer(pointer, radius, strength) {\n        const { borderTopWidth, borderLeftWidth } = window.getComputedStyle(this.target);\n        const borderTop = parseInt(borderTopWidth || \"0\");\n        const borderLeft = parseInt(borderLeftWidth || \"0\");\n        const { offsetTop, offsetLeft } = this.target;\n        this.drop(pointer.pageX - offsetLeft - borderLeft, pointer.pageY - offsetTop - borderTop, radius, strength);\n    }\n}\n","import type { ReactNode } from \"react\";\nimport React, { Component } from \"react\";\nimport { Ripples } from \"@figliolia/ripples\";\nimport type { ReactiveStates } from \"@figliolia/react-galena\";\nimport { connectNavigation } from \"State/Connections\";\nimport \"./styles.scss\";\n\nclass PageRenderer extends Component<Props> {\n  private Ripples?: Ripples;\n  private Node?: HTMLDivElement;\n  constructor(props: Props) {\n    super(props);\n    this.cacheInstance = this.cacheInstance.bind(this);\n  }\n\n  override componentDidMount() {\n    if (!this.Node) {\n      return;\n    }\n    this.Ripples = new Ripples(this.Node, {\n      resolution: 512,\n      dropRadius: 10,\n      perturbance: 0.02,\n    });\n  }\n\n  override componentWillUnmount() {\n    if (this.Ripples) {\n      this.Ripples.destroy();\n    }\n  }\n\n  private cacheInstance(node: HTMLDivElement) {\n    this.Node = node;\n  }\n\n  override render() {\n    const { name, height, width, active, children } = this.props;\n    return (\n      <main\n        id=\"page\"\n        ref={this.cacheInstance}\n        style={{ height, width }}\n        className={`page ${name} ${active ? \"active\" : \"\"}`}>\n        <div className=\"content\" style={{ height, width }}>\n          {children}\n        </div>\n      </main>\n    );\n  }\n}\n\ninterface Props {\n  name: string;\n  width: number;\n  height: number;\n  active: boolean;\n  children: ReactNode;\n}\n\nconst mSTP = ([{ width, height }, { screenActive }]: ReactiveStates<\n  typeof connectNavigation\n>) => {\n  return { width, height, active: screenActive };\n};\n\nexport const Page = connectNavigation(mSTP)(PageRenderer);\n","import type { MouseEvent, TouchEvent } from \"react\";\nimport React, { Component } from \"react\";\nimport type { Coordinate, Props } from \"./types\";\nimport \"./styles.scss\";\n\nexport class Button3D extends Component<Props, State> {\n  private top = 0;\n  private left = 0;\n  private width = 0;\n  private height = 0;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      rotX: 0,\n      rotY: 0,\n      scale: 1,\n      bTransDur: 0.5,\n      boxShadow: \"none\",\n    };\n    this.touchMoveButton = this.touchMoveButton.bind(this);\n    this.mouseMoveButton = this.mouseMoveButton.bind(this);\n    this.touchEnterButton = this.touchEnterButton.bind(this);\n    this.mouseEnterButton = this.mouseEnterButton.bind(this);\n    this.mouseLeaveButton = this.mouseLeaveButton.bind(this);\n  }\n\n  override shouldComponentUpdate(\n    _: Props,\n    { rotX, rotY, bTransDur, scale, boxShadow }: State,\n  ) {\n    const curState = this.state;\n    if (rotX !== curState.rotX) return true;\n    else if (rotY !== curState.rotY) return true;\n    else if (scale !== curState.scale) return true;\n    else if (bTransDur !== curState.bTransDur) return true;\n    else if (boxShadow !== curState.boxShadow) return true;\n    return false;\n  }\n\n  private cacheTargetData(eventTarget: EventTarget) {\n    const target = eventTarget as HTMLButtonElement;\n    const { top, left, height, width } = target.getBoundingClientRect();\n    this.top = top;\n    this.height = height;\n    const offset = width * 0.2;\n    this.left = left - offset / 2;\n    this.width = width + width * 0.2;\n  }\n\n  private getRotations(x: number, y: number): [x: number, y: number] {\n    const mouseY = y - this.top;\n    const mouseX = x - this.left;\n    const offsetX = 0.5 - mouseX / this.width;\n    const offsetY = 0.5 - mouseY / this.height;\n    return [offsetY * 50, offsetX * 20];\n  }\n\n  private setFrame([x, y]: Coordinate, duration: number) {\n    this.setState({\n      rotX: x,\n      rotY: y,\n      bTransDur: `${duration}s`,\n      scale: 1.1,\n      boxShadow: `0 ${x}px ${\n        this.height / 5\n      }px rgba(0,0,0,0.5), ${x}px ${y}px ${this.width / 5}px rgba(0,0,0,0.45)`,\n    });\n  }\n\n  private mouseEnterButton({\n    clientX,\n    clientY,\n    currentTarget,\n  }: MouseEvent<HTMLButtonElement>) {\n    this.cacheTargetData(currentTarget);\n    this.setFrame(this.getRotations(clientX, clientY), 0.5);\n  }\n\n  private touchEnterButton({\n    currentTarget,\n    touches,\n  }: TouchEvent<HTMLButtonElement>) {\n    this.cacheTargetData(currentTarget);\n    this.setFrame(\n      this.getRotations(touches[0].clientX, touches[0].clientY),\n      0.5,\n    );\n  }\n\n  private mouseMoveButton({ clientX, clientY }: MouseEvent<HTMLButtonElement>) {\n    this.setFrame(this.getRotations(clientX, clientY), 0);\n  }\n\n  private touchMoveButton({ touches }: TouchEvent<HTMLButtonElement>) {\n    this.setFrame(this.getRotations(touches[0].clientX, touches[0].clientY), 0);\n  }\n\n  private mouseLeaveButton() {\n    this.setState({\n      rotX: 0,\n      rotY: 0,\n      scale: 1,\n      bTransDur: \"0.5s\",\n      boxShadow: \"none\",\n    });\n  }\n\n  override render() {\n    const { text, onClick } = this.props;\n    const { rotX, rotY, bTransDur, scale, boxShadow } = this.state;\n    return (\n      <button\n        onClick={onClick}\n        className=\"outline-button\"\n        onMouseEnter={this.mouseEnterButton}\n        onMouseMove={this.mouseMoveButton}\n        onMouseLeave={this.mouseLeaveButton}\n        onTouchStart={this.touchEnterButton}\n        onTouchEnd={this.mouseLeaveButton}\n        onTouchMove={this.touchMoveButton}\n        style={{\n          transform: `rotateX(${rotX}deg) rotateY(${rotY}deg) skew(-10deg) scale(${scale})`,\n          transitionDuration: `${bTransDur}`,\n          boxShadow,\n        }}>\n        <div>{text}</div>\n      </button>\n    );\n  }\n}\n\ninterface State {\n  rotX: number;\n  rotY: number;\n  bTransDur: number | string;\n  scale: number;\n  boxShadow: string;\n}\n\nexport * from \"./types\";\n"],"names":["ImageLoader","constructor","Textures","__publicField","this","GL","load","src","crossOrigin","image","Image","Promise","resolve","reject","onload","textureIze","onerror","setTransparent","isDataUri","wrapping","isPowerOfTwo","width","height","REPEAT","CLAMP_TO_EDGE","bindTexture","TEXTURE_2D","backgroundTexture","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","url","match","x","_Options","options","configuration","configure","imageUrl","dropRadius","resolution","interactive","perturbance","Object","assign","defaults","extractUrl","value","urlMatch","exec","Options","_Shaders","textureDelta","Float32Array","dropProgram","compileDrop","updateProgram","compileUpdate","uniform2fv","locations","delta","renderProgram","compileRender","drop","position","radius","strength","useProgram","id","center","uniform1f","render","topLeft","uniforms","bottomRight","containerRatio","uniform1i","samplerBackground","samplerRipples","createProgram","VERTEX_SHADER","DROP_PROGRAM","UPDATE_PROGRAM","RENDER_BACKGROUND_PROGRAM","RENDER_RIPPLE_PROGRAM","vertexSource","fragmentSource","Error","program","attachShader","compileSource","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","name","enableVertexAttribArray","regex","shaderCode","getUniformLocation","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","join","Shaders","StyleCache","Map","super","initialize","target","zIndex","backgroundImage","window","getComputedStyle","set","style","get","key","evict","_Textures","context","createImageData","quad","createBuffer","createBackground","drawQuad","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","TRIANGLE_FAN","firstTexture","textures","readTexture","bufferReadIndex","writeTexture","bufferWriteIndex","readFrame","frameBuffers","writeFrame","getBrowserExtensions","browserSupport","extensions","forEach","getExtension","linearSupport","arrayType","textureData","i","texture","createTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","push","transparentPixels","swapBufferIndices","pixelStorei","UNPACK_FLIP_Y_WEBGL","ImageData","e","_a","document","createElement","getContext","detect","getExtensions","frameAndBuffer","configurations","getAll","length","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","config","configs","createConfig","OES_texture_half_float","HALF_FLOAT_OES","glType","nameLinear","configExtensions","canvas","extension","OES_texture_float","WebGL","positionCanvas","createGL","initializeWebGL","bufferData","STATIC_DRAW","loadImage","clearColor","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","hideCSSBackground","inlineCSS","viewport","enable","BLEND","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","update","isPercentage","str","unit","activeTexture","TEXTURE0","offsetWidth","offsetHeight","top","right","bottom","left","appendChild","newImageSource","imageSource","loader","error","Ripples","onClick","bind","onTouch","updateSize","onMouseMove","cacheTargetPositions","setupWebGL","y","longestSide","Math","max","dropPosition","reloadImage","show","visible","display","hide","restoreCSSBackground","pause","running","play","destroy","removeEventListener","removeChild","cancelAnimationFrame","time","destroyed","addEventListener","initialized","setupPointerEvents","step","requestAnimationFrame","passive","pointerEventsEnabled","dropAtPointer","touches","changedTouches","computeTextureBoundaries","computeBackgroundSize","backgroundSize","container","BW","BH","scale","min","BP","split","backgroundWidth","backgroundHeight","parseFloat","backgroundAttachment","backgroundPosition","translateBackgroundPosition","scrollX","scrollY","innerWidth","innerHeight","offsetTop","offsetLeft","floats","maxSide","parts","map","part","pointer","borderTopWidth","borderLeftWidth","borderTop","parseInt","borderLeft","pageX","pageY","PageRenderer","Component","props","cacheInstance","componentDidMount","Node","componentWillUnmount","node","active","children","jsxRuntimeExports","jsx","ref","className","Page","connectNavigation","screenActive","Button3D","state","rotX","rotY","bTransDur","boxShadow","touchMoveButton","mouseMoveButton","touchEnterButton","mouseEnterButton","mouseLeaveButton","shouldComponentUpdate","_","curState","cacheTargetData","eventTarget","getBoundingClientRect","offset","getRotations","mouseY","offsetX","setFrame","duration","setState","clientX","clientY","currentTarget","text","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onTouchMove","transform","transitionDuration"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}
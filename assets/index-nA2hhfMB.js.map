{"version":3,"file":"index-nA2hhfMB.js","sources":["../../src/Components/ContactText/index.tsx","../../src/Pages/Contact/ContactButton/index.tsx","../../src/Pages/Contact/index.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.scss\";\n\nexport class ContactText extends Component {\n  static contact = \"CONTACT\".split(\"\");\n\n  override shouldComponentUpdate() {\n    return false;\n  }\n\n  override render() {\n    return (\n      <div className=\"contact-text\">\n        <h1 id=\"contactText\">\n          {ContactText.contact.map((letter, i) => {\n            return (\n              <div className=\"text-letter\" key={`${letter}-${i}`}>\n                {letter}\n              </div>\n            );\n          })}\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { memo, useEffect, useState } from \"react\";\nimport { useClassNames } from \"@figliolia/classnames\";\nimport { Button3D } from \"Components/Button3D\";\nimport { useRouter } from \"State/Routing\";\nimport { TaskQueue } from \"Tools/TaskQueue\";\nimport \"./styles.scss\";\n\nexport const ContactButton = memo(function ContactButton({\n  text,\n  onClick,\n}: Props) {\n  const [reset, setReset] = useState(false);\n  const active = useRouter(state => state.screenActive);\n\n  useEffect(() => {\n    if (active) {\n      TaskQueue.deferTask(() => {\n        setReset(true);\n      }, 3100);\n    }\n  }, [active]);\n\n  const classes = useClassNames(\"contact-button\", { active, reset });\n\n  return (\n    <div className={classes}>\n      <Button3D text={text} onClick={onClick} />\n    </div>\n  );\n});\n\ninterface Props {\n  text: string;\n  onClick: () => void;\n}\n","import React, { Component } from \"react\";\nimport { ContactText } from \"Components/ContactText\";\nimport { Page } from \"Components/Page\";\nimport { Menu } from \"State/Menu\";\nimport type { PropLess } from \"Tools/Types\";\nimport { ContactButton } from \"./ContactButton\";\nimport \"./styles.scss\";\n\nexport default class Contact extends Component<PropLess> {\n  toNPM: () => void;\n  toGithub: () => void;\n  constructor(props: PropLess) {\n    super(props);\n    Menu.setButtonDelay(3300);\n    this.emailMe = this.emailMe.bind(this);\n    this.toGithub = this.openLink(\"https://github.com/alexfigliolia\");\n    this.toNPM = this.openLink(\"https://www.npmjs.com/~alexfigliolia\");\n  }\n\n  override shouldComponentUpdate() {\n    return false;\n  }\n\n  private openLink(link: string) {\n    return () => {\n      window.open(link, \"_blank\");\n    };\n  }\n\n  private emailMe() {\n    window.location.href =\n      \"mailto:alexfigliolia@gmail.com?subject=Hey%20Alex,%20let's%20chat!\";\n  }\n\n  override render() {\n    return (\n      <Page name=\"contact\">\n        <div>\n          <ContactText />\n          <div className=\"buttons\">\n            <ContactButton text=\"Email\" onClick={this.emailMe} />\n            <ContactButton text=\"Github\" onClick={this.toGithub} />\n            <ContactButton text=\"NPM\" onClick={this.toNPM} />\n          </div>\n        </div>\n      </Page>\n    );\n  }\n}\n"],"names":["_ContactText","Component","shouldComponentUpdate","render","jsx","className","children","id","contact","map","letter","i","jsxRuntimeExports","__publicField","split","ContactText","ContactButton","memo","text","onClick","reset","setReset","useState","active","useRouter","state","screenActive","useEffect","TaskQueue","deferTask","classes","useClassNames","Button3D","Contact","constructor","props","super","this","Menu","setButtonDelay","emailMe","bind","toGithub","openLink","toNPM","link","window","open","location","href","Page","name","jsxs"],"mappings":"qRAGO,MAAMA,EAAN,MAAMA,UAAoBC,EAAAA,UAGtB,qBAAAC,GACA,OAAA,CACT,CAES,MAAAC,GACP,SACGC,IAAA,MAAA,CAAIC,UAAU,eACbC,SAACF,EAAAA,IAAA,KAAA,CAAGG,GAAG,cACJD,SAAYN,EAAAQ,QAAQC,KAAI,CAACC,EAAQC,IAE9BC,EAAAR,IAAC,OAAIC,UAAU,cACZC,YAD+B,GAAGI,KAAUC,UAQ3D,GApBAE,EADWb,EACJ,UAAU,UAAUc,MAAM,KAD5B,IAAMC,EAANf,ECIM,MAAAgB,EAAgBC,EAAAA,MAAK,UAAuBC,KACvDA,EAAAC,QACAA,IAEA,MAAOC,EAAOC,GAAYC,YAAS,GAC7BC,EAASC,GAAmBC,GAAAA,EAAMC,eAExCC,EAAAA,WAAU,KACJJ,GACFK,EAAUC,WAAU,KAClBR,GAAS,EAAI,GACZ,KACL,GACC,CAACE,IAEJ,MAAMO,EAAUC,EAAc,iBAAkB,CAAER,SAAQH,UAGxD,OAAAR,EAAAR,IAAC,OAAIC,UAAWyB,EACdxB,eAAC0B,EAAS,CAAAd,OAAYC,aAG5B,ICrBA,MAAqBc,UAAgBhC,EAAAA,UAGnC,WAAAiC,CAAYC,GACVC,MAAMD,GAHRtB,EAAAwB,KAAA,SACAxB,EAAAwB,KAAA,YAGEC,EAAKC,eAAe,MACpBF,KAAKG,QAAUH,KAAKG,QAAQC,KAAKJ,MAC5BA,KAAAK,SAAWL,KAAKM,SAAS,oCACzBN,KAAAO,MAAQP,KAAKM,SAAS,uCAC7B,CAES,qBAAAzC,GACA,OAAA,CACT,CAEQ,QAAAyC,CAASE,GACf,MAAO,KACEC,OAAAC,KAAKF,EAAM,SAAQ,CAE9B,CAEQ,OAAAL,GACNM,OAAOE,SAASC,KACd,oEACJ,CAES,MAAA9C,GAEJC,OAAAA,EAAAA,IAAA8C,EAAA,CAAKC,KAAK,UACT7C,gBAAC,MACC,CAAAA,SAAA,CAAAM,EAAAR,IAACW,EAAY,MACbqC,KAAC,MAAI,CAAA/C,UAAU,UACbC,SAAA,CAAAF,EAAAA,IAACY,EAAc,CAAAE,KAAK,QAAQC,QAASkB,KAAKG,gBACzCxB,EAAc,CAAAE,KAAK,SAASC,QAASkB,KAAKK,iBAC1C1B,EAAc,CAAAE,KAAK,MAAMC,QAASkB,KAAKO,eAKlD"}
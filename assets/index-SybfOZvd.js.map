{"version":3,"file":"index-SybfOZvd.js","sources":["../../node_modules/@figliolia/ripples/dist/mjs/Animation.js","../../node_modules/@figliolia/ripples/dist/mjs/ImageLoader.js","../../node_modules/@figliolia/ripples/dist/mjs/Options.js","../../node_modules/@figliolia/ripples/dist/mjs/Shaders.js","../../node_modules/@figliolia/ripples/dist/mjs/StyleCache.js","../../node_modules/@figliolia/ripples/dist/mjs/Textures.js","../../node_modules/@figliolia/ripples/dist/mjs/BrowserSupport.js","../../node_modules/@figliolia/ripples/dist/mjs/WebGL.js","../../node_modules/@figliolia/ripples/dist/mjs/Ripples.js","../../src/Components/Page/index.tsx","../../src/Components/Button3D/index.tsx"],"sourcesContent":["import { Subscriptable } from \"@figliolia/event-emitter\";\nexport class Animations {\n    static frame = null;\n    static callstack = new Subscriptable();\n    static register(callback) {\n        const ID = this.callstack.register(callback);\n        void Promise.resolve().then(() => {\n            this.nextFrame();\n        });\n        return ID;\n    }\n    static delete(ID) {\n        return this.callstack.remove(ID);\n    }\n    static nextFrame() {\n        if (this.frame) {\n            return;\n        }\n        this.animate();\n    }\n    static animate() {\n        this.frame = requestAnimationFrame(() => {\n            if (!this.callstack.length) {\n                return this.closeLoop();\n            }\n            this.callstack.execute();\n            this.animate();\n        });\n    }\n    static closeLoop() {\n        if (this.frame) {\n            cancelAnimationFrame(this.frame);\n            this.frame = null;\n        }\n    }\n}\n","export class ImageLoader {\n    Textures;\n    GL;\n    constructor(Textures) {\n        this.Textures = Textures;\n        this.GL = this.Textures.GL;\n    }\n    load(src, crossOrigin) {\n        const image = new Image();\n        return new Promise((resolve, reject) => {\n            image.onload = () => {\n                this.textureIze(image);\n                resolve(image);\n            };\n            image.onerror = () => {\n                this.Textures.setTransparent();\n                reject();\n            };\n            image.crossOrigin = this.isDataUri(src) ? null : crossOrigin;\n            image.src = src;\n        });\n    }\n    textureIze(image) {\n        const wrapping = this.isPowerOfTwo(image.width) && this.isPowerOfTwo(image.height)\n            ? this.GL.REPEAT\n            : this.GL.CLAMP_TO_EDGE;\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.Textures.backgroundTexture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, wrapping);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, wrapping);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, image);\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n    isPowerOfTwo(x) {\n        return (x & (x - 1)) == 0;\n    }\n}\n","export class Options {\n    resolution;\n    dropRadius;\n    perturbance;\n    crossOrigin;\n    interactive;\n    imageUrl;\n    onInitialized;\n    constructor(options) {\n        const configuration = this.configure(options);\n        this.imageUrl = configuration.imageUrl;\n        this.dropRadius = configuration.dropRadius;\n        this.resolution = configuration.resolution;\n        this.interactive = configuration.interactive;\n        this.perturbance = configuration.perturbance;\n        this.crossOrigin = configuration.crossOrigin;\n        this.onInitialized = configuration.onInitialized;\n    }\n    static defaults = {\n        imageUrl: null,\n        resolution: 256,\n        dropRadius: 20,\n        perturbance: 0.03,\n        interactive: true,\n        crossOrigin: \"\",\n    };\n    configure(options) {\n        return Object.assign({}, Options.defaults, options);\n    }\n    extractUrl(value) {\n        const urlMatch = /url\\([\"']?([^\"']*)[\"']?\\)/.exec(value);\n        if (urlMatch == null) {\n            return null;\n        }\n        return urlMatch[1];\n    }\n    isDataUri(url) {\n        return url.match(/^data:/);\n    }\n}\n","export class Shaders {\n    dropProgram;\n    updateProgram;\n    renderProgram;\n    GL;\n    textureDelta;\n    constructor(GL, resolution) {\n        this.GL = GL;\n        this.textureDelta = new Float32Array([1 / resolution, 1 / resolution]);\n        this.dropProgram = this.compileDrop();\n        this.updateProgram = this.compileUpdate();\n        this.GL.uniform2fv(this.updateProgram.locations.delta, this.textureDelta);\n        this.renderProgram = this.compileRender();\n        this.GL.uniform2fv(this.renderProgram.locations.delta, this.textureDelta);\n    }\n    drop(position, radius, strength) {\n        if (this.dropProgram) {\n            this.GL.useProgram(this.dropProgram.id);\n            this.GL.uniform2fv(this.dropProgram.locations.center, position);\n            this.GL.uniform1f(this.dropProgram.locations.radius, radius);\n            this.GL.uniform1f(this.dropProgram.locations.strength, strength);\n        }\n    }\n    render(perturbance) {\n        this.GL.uniform1f(this.renderProgram.locations.perturbance, perturbance);\n        this.GL.uniform2fv(this.renderProgram.locations.topLeft, \n        // @ts-ignore\n        this.renderProgram.uniforms.topLeft);\n        this.GL.uniform2fv(this.renderProgram.locations.bottomRight, \n        // @ts-ignore\n        this.renderProgram.uniforms.bottomRight);\n        this.GL.uniform2fv(this.renderProgram.locations.containerRatio, \n        // @ts-ignore\n        this.renderProgram.uniforms.containerRatio);\n        this.GL.uniform1i(this.renderProgram.locations.samplerBackground, 0);\n        this.GL.uniform1i(this.renderProgram.locations.samplerRipples, 1);\n    }\n    compileDrop() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.DROP_PROGRAM);\n    }\n    compileUpdate() {\n        return this.createProgram(Shaders.VERTEX_SHADER, Shaders.UPDATE_PROGRAM);\n    }\n    compileRender() {\n        return this.createProgram(Shaders.RENDER_BACKGROUND_PROGRAM, Shaders.RENDER_RIPPLE_PROGRAM);\n    }\n    createProgram(vertexSource, fragmentSource) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const program = { id: this.GL.createProgram() };\n        this.GL.attachShader(program.id, this.compileSource(this.GL.VERTEX_SHADER, vertexSource));\n        this.GL.attachShader(program.id, this.compileSource(this.GL.FRAGMENT_SHADER, fragmentSource));\n        this.GL.linkProgram(program.id);\n        if (!this.GL.getProgramParameter(program.id, this.GL.LINK_STATUS)) {\n            throw new Error(\"link error: \" + this.GL.getProgramInfoLog(program.id));\n        }\n        program.uniforms = {};\n        program.locations = {};\n        this.GL.useProgram(program.id);\n        this.GL.enableVertexAttribArray(0);\n        let match, name;\n        const regex = /uniform (\\w+) (\\w+)/g;\n        const shaderCode = vertexSource + fragmentSource;\n        while ((match = regex.exec(shaderCode)) != null) {\n            name = match[2];\n            program.locations[name] = this.GL.getUniformLocation(program.id, name);\n        }\n        return program;\n    }\n    compileSource(type, source) {\n        if (!this.GL) {\n            throw new Error(\"Cannot initialize shaders without a rendering context\");\n        }\n        const shader = this.GL.createShader(type);\n        this.GL.shaderSource(shader, source);\n        this.GL.compileShader(shader);\n        if (!this.GL.getShaderParameter(shader, this.GL.COMPILE_STATUS)) {\n            throw new Error(\"compile error: \" + this.GL.getShaderInfoLog(shader));\n        }\n        return shader;\n    }\n    static VERTEX_SHADER = [\n        \"attribute vec2 vertex;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"coord = vertex * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static DROP_PROGRAM = [\n        \"precision highp float;\",\n        \"const float PI = 3.141592653589793;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 center;\",\n        \"uniform float radius;\",\n        \"uniform float strength;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"float drop = max(0.0, 1.0 - length(center * 0.5 + 0.5 - coord) / radius);\",\n        \"drop = 0.5 - cos(drop * PI) * 0.5;\",\n        \"info.r += drop * strength;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static UPDATE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D texture;\",\n        \"uniform vec2 delta;\",\n        \"varying vec2 coord;\",\n        \"void main() {\",\n        \"vec4 info = texture2D(texture, coord);\",\n        \"vec2 dx = vec2(delta.x, 0.0);\",\n        \"vec2 dy = vec2(0.0, delta.y);\",\n        \"float average = (\",\n        \"texture2D(texture, coord - dx).r +\",\n        \"texture2D(texture, coord - dy).r +\",\n        \"texture2D(texture, coord + dx).r +\",\n        \"texture2D(texture, coord + dy).r\",\n        \") * 0.25;\",\n        \"info.g += (average - info.r) * 2.0;\",\n        \"info.g *= 0.995;\",\n        \"info.r += info.g;\",\n        \"gl_FragColor = info;\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_BACKGROUND_PROGRAM = [\n        \"precision highp float;\",\n        \"attribute vec2 vertex;\",\n        \"uniform vec2 topLeft;\",\n        \"uniform vec2 bottomRight;\",\n        \"uniform vec2 containerRatio;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"backgroundCoord = mix(topLeft, bottomRight, vertex * 0.5 + 0.5);\",\n        \"backgroundCoord.y = 1.0 - backgroundCoord.y;\",\n        \"ripplesCoord = vec2(vertex.x, -vertex.y) * containerRatio * 0.5 + 0.5;\",\n        \"gl_Position = vec4(vertex.x, -vertex.y, 0.0, 1.0);\",\n        \"}\",\n    ].join(\"\\n\");\n    static RENDER_RIPPLE_PROGRAM = [\n        \"precision highp float;\",\n        \"uniform sampler2D samplerBackground;\",\n        \"uniform sampler2D samplerRipples;\",\n        \"uniform vec2 delta;\",\n        \"uniform float perturbance;\",\n        \"varying vec2 ripplesCoord;\",\n        \"varying vec2 backgroundCoord;\",\n        \"void main() {\",\n        \"float height = texture2D(samplerRipples, ripplesCoord).r;\",\n        \"float heightX = texture2D(samplerRipples, vec2(ripplesCoord.x + delta.x, ripplesCoord.y)).r;\",\n        \"float heightY = texture2D(samplerRipples, vec2(ripplesCoord.x, ripplesCoord.y + delta.y)).r;\",\n        \"vec3 dx = vec3(delta.x, heightX - height, 0.0);\",\n        \"vec3 dy = vec3(0.0, heightY - height, delta.y);\",\n        \"vec2 offset = -normalize(cross(dy, dx)).xz;\",\n        \"float specular = pow(max(0.0, dot(offset, normalize(vec2(-0.6, 1.0)))), 4.0);\",\n        \"gl_FragColor = texture2D(samplerBackground, backgroundCoord + offset * perturbance) + specular;\",\n        \"}\",\n    ].join(\"\\n\");\n}\n","export class StyleCache extends Map {\n    constructor() {\n        super([\n            [\"zIndex\", \"\"],\n            [\"position\", \"\"],\n            [\"backgroundWidth\", 0],\n            [\"backgroundHeight\", 0],\n            [\"originalInlineCSS\", \"\"],\n            [\"originalCSSBackgroundImage\", \"\"],\n        ]);\n    }\n    initialize(target) {\n        const { position, zIndex, backgroundImage } = window.getComputedStyle(target);\n        this.set(\"zIndex\", zIndex);\n        this.set(\"position\", position);\n        this.set(\"originalCSSBackgroundImage\", backgroundImage);\n        this.set(\"originalInlineCSS\", target.style.backgroundImage);\n    }\n    get(key) {\n        return super.get(key);\n    }\n    evict(key) {\n        return super.set(key, \"\");\n    }\n}\n","import { BrowserSupport } from \"./BrowserSupport.js\";\nexport class Textures {\n    quad;\n    bufferReadIndex = 1;\n    bufferWriteIndex = 0;\n    GL;\n    textures = [];\n    backgroundTexture;\n    frameBuffers = [];\n    static browserSupport = new BrowserSupport();\n    transparentPixels = this.createImageData(32, 32);\n    constructor(context) {\n        this.GL = context;\n        this.quad = this.GL.createBuffer();\n        this.backgroundTexture = this.createBackground();\n    }\n    drawQuad() {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        this.GL.vertexAttribPointer(0, 2, this.GL.FLOAT, false, 0, 0);\n        this.GL.drawArrays(this.GL.TRIANGLE_FAN, 0, 4);\n    }\n    get firstTexture() {\n        return this.textures[0];\n    }\n    get readTexture() {\n        return this.textures[this.bufferReadIndex];\n    }\n    get writeTexture() {\n        return this.textures[this.bufferWriteIndex];\n    }\n    get readFrame() {\n        return this.frameBuffers[this.bufferReadIndex];\n    }\n    get writeFrame() {\n        return this.frameBuffers[this.bufferWriteIndex];\n    }\n    getBrowserExtensions() {\n        Textures.browserSupport.extensions.forEach(name => {\n            this.GL.getExtension(name);\n        });\n    }\n    initialize(resolution) {\n        this.GL.bindBuffer(this.GL.ARRAY_BUFFER, this.quad);\n        const { linearSupport, type, arrayType } = Textures.browserSupport;\n        const textureData = arrayType\n            ? new arrayType(resolution * resolution * 4)\n            : null;\n        for (let i = 0; i < 2; i++) {\n            const texture = this.GL.createTexture();\n            const frameBuffer = this.GL.createFramebuffer();\n            this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n            this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, linearSupport ? this.GL.LINEAR : this.GL.NEAREST);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n            this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, resolution, resolution, 0, this.GL.RGBA, type, textureData);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            this.textures.push(texture);\n            this.frameBuffers.push(frameBuffer);\n        }\n    }\n    setTransparent() {\n        this.GL.bindTexture(this.GL.TEXTURE_2D, this.backgroundTexture);\n        this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, this.GL.RGBA, this.GL.UNSIGNED_BYTE, this.transparentPixels);\n    }\n    swapBufferIndices() {\n        this.bufferWriteIndex = 1 - this.bufferWriteIndex;\n        this.bufferReadIndex = 1 - this.bufferReadIndex;\n    }\n    createBackground() {\n        const texture = this.GL.createTexture();\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.pixelStorei(this.GL.UNPACK_FLIP_Y_WEBGL, 1);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.LINEAR);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.LINEAR);\n        return texture;\n    }\n    createImageData(width, height) {\n        try {\n            return new ImageData(width, height);\n        }\n        catch (e) {\n            // Fallback for IE\n            const canvas = document.createElement(\"canvas\");\n            return canvas.getContext(\"2d\")?.createImageData(width, height);\n        }\n    }\n}\n","export class BrowserSupport {\n    type;\n    extensions;\n    linearSupport;\n    GL;\n    arrayType;\n    constructor() {\n        this.detect();\n    }\n    detect() {\n        const extensions = this.getExtensions();\n        const texture = this.frameAndBuffer();\n        const configurations = this.getAll(extensions);\n        const { length } = configurations;\n        for (let i = 0; i < length; i++) {\n            this.GL.texImage2D(this.GL.TEXTURE_2D, 0, this.GL.RGBA, 32, 32, 0, this.GL.RGBA, configurations[i].type, null);\n            this.GL.framebufferTexture2D(this.GL.FRAMEBUFFER, this.GL.COLOR_ATTACHMENT0, this.GL.TEXTURE_2D, texture, 0);\n            if (this.GL.checkFramebufferStatus(this.GL.FRAMEBUFFER) ===\n                this.GL.FRAMEBUFFER_COMPLETE) {\n                const config = configurations[i];\n                this.type = config.type;\n                this.arrayType = config.arrayType;\n                this.extensions = config.extensions;\n                this.linearSupport = config.linearSupport;\n                return;\n            }\n        }\n        throw new Error(\"No compatible browser configurations\");\n    }\n    getAll(extensions) {\n        const configs = [];\n        configs.push(this.createConfig(\"float\", this.GL.FLOAT, Float32Array, extensions));\n        if (extensions.OES_texture_half_float) {\n            configs.push(this.createConfig(\"half_float\", extensions.OES_texture_half_float.HALF_FLOAT_OES, null, extensions));\n        }\n        return configs;\n    }\n    createConfig(type, glType, arrayType, extensions) {\n        const name = \"OES_texture_\" + type, nameLinear = name + \"_linear\", linearSupport = nameLinear in extensions, configExtensions = [name];\n        if (linearSupport) {\n            configExtensions.push(nameLinear);\n        }\n        return {\n            type: glType,\n            arrayType: arrayType,\n            linearSupport: linearSupport,\n            extensions: configExtensions,\n        };\n    }\n    frameAndBuffer() {\n        const texture = this.GL.createTexture();\n        const frameBuffer = this.GL.createFramebuffer();\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, frameBuffer);\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MIN_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_MAG_FILTER, this.GL.NEAREST);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_S, this.GL.CLAMP_TO_EDGE);\n        this.GL.texParameteri(this.GL.TEXTURE_2D, this.GL.TEXTURE_WRAP_T, this.GL.CLAMP_TO_EDGE);\n        return texture;\n    }\n    getExtensions() {\n        const canvas = document.createElement(\"canvas\");\n        this.GL = (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n        if (!this.GL) {\n            throw new Error(\"No WebGL support\");\n        }\n        const extensions = {};\n        const keys = [\n            \"OES_texture_float\",\n            \"OES_texture_half_float\",\n            \"OES_texture_float_linear\",\n            \"OES_texture_half_float_linear\",\n        ];\n        keys.forEach(name => {\n            const extension = this.GL.getExtension(name);\n            if (extension) {\n                extensions[name] = extension;\n            }\n        });\n        if (!extensions.OES_texture_float) {\n            throw new Error(\"No texture float support\");\n        }\n        return extensions;\n    }\n}\n","import { ImageLoader } from \"./ImageLoader.js\";\nimport { Options } from \"./Options.js\";\nimport { Shaders } from \"./Shaders.js\";\nimport { StyleCache } from \"./StyleCache.js\";\nimport { Textures } from \"./Textures.js\";\nexport class WebGL extends Options {\n    Shaders;\n    Textures;\n    quad;\n    target;\n    canvas;\n    GL;\n    StyleCache = new StyleCache();\n    imageSource = null;\n    constructor(target, options) {\n        super(options);\n        this.target = target;\n        this.canvas = document.createElement(\"canvas\");\n        this.positionCanvas();\n        this.GL = this.createGL(this.canvas);\n        this.Shaders = new Shaders(this.GL, this.resolution);\n        this.Textures = new Textures(this.GL);\n    }\n    initializeWebGL() {\n        this.Textures.initialize(this.resolution);\n        this.GL.bufferData(this.GL.ARRAY_BUFFER, new Float32Array([-1, -1, +1, -1, +1, +1, -1, +1]), this.GL.STATIC_DRAW);\n        this.Textures.setTransparent();\n        void this.loadImage().then(() => {\n            this.onInitialized?.();\n        });\n        this.GL.clearColor(0, 0, 0, 0);\n        this.GL.blendFunc(this.GL.SRC_ALPHA, this.GL.ONE_MINUS_SRC_ALPHA);\n    }\n    hideCSSBackground() {\n        const inlineCSS = this.target.style.backgroundImage;\n        if (inlineCSS === \"none\") {\n            return;\n        }\n        this.StyleCache.set(\"originalInlineCSS\", inlineCSS);\n        this.StyleCache.set(\"originalCSSBackgroundImage\", window.getComputedStyle(this.target).backgroundImage);\n        this.target.style.backgroundImage = \"none\";\n    }\n    render() {\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, null);\n        this.GL.viewport(0, 0, this.canvas.width, this.canvas.height);\n        this.GL.enable(this.GL.BLEND);\n        this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);\n        this.GL.useProgram(this.Shaders.renderProgram.id);\n        this.bindTexture(this.Textures.backgroundTexture, 0);\n        this.bindTexture(this.Textures.firstTexture, 1);\n        this.Shaders.render(this.perturbance);\n        this.Textures.drawQuad();\n        this.GL.disable(this.GL.BLEND);\n    }\n    update() {\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.GL.useProgram(this.Shaders.updateProgram.id);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    isPercentage(str) {\n        return str[str.length - 1] == \"%\";\n    }\n    bindTexture(texture, unit = 0) {\n        this.GL.activeTexture(this.GL.TEXTURE0 + (unit || 0));\n        this.GL.bindTexture(this.GL.TEXTURE_2D, texture);\n    }\n    positionCanvas() {\n        this.canvas.width = this.target.offsetWidth;\n        this.canvas.height = this.target.offsetHeight;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0\";\n        this.canvas.style.right = \"0\";\n        this.canvas.style.bottom = \"0\";\n        this.canvas.style.left = \"0\";\n        this.canvas.style.zIndex = \"-1\";\n        this.target.appendChild(this.canvas);\n    }\n    createGL(canvas) {\n        return (canvas.getContext(\"webgl\") ||\n            canvas.getContext(\"experimental-webgl\"));\n    }\n    async loadImage() {\n        const { backgroundImage } = window.getComputedStyle(this.target);\n        const newImageSource = this.imageUrl ||\n            this.extractUrl(this.StyleCache.get(\"originalCSSBackgroundImage\")) ||\n            this.extractUrl(backgroundImage);\n        if (newImageSource == this.imageSource) {\n            return;\n        }\n        this.imageSource = newImageSource;\n        if (!this.imageSource) {\n            this.Textures.setTransparent();\n            return;\n        }\n        try {\n            const loader = new ImageLoader(this.Textures);\n            const image = await loader.load(this.imageSource, this.crossOrigin);\n            this.StyleCache.set(\"backgroundWidth\", image.width);\n            this.StyleCache.set(\"backgroundHeight\", image.height);\n            this.hideCSSBackground();\n        }\n        catch (error) {\n            // silence\n        }\n    }\n}\n","import { Animations } from \"./Animation.js\";\nimport { WebGL } from \"./WebGL.js\";\nexport class Ripples extends WebGL {\n    ID;\n    visible = false;\n    running = false;\n    destroyed = false;\n    initialized = false;\n    constructor(target, options) {\n        super(target, options);\n        this.onClick = this.onClick.bind(this);\n        this.onTouch = this.onTouch.bind(this);\n        this.updateSize = this.updateSize.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.cacheTargetPositions();\n        this.setupWebGL();\n    }\n    drop(x, y, radius, strength) {\n        const { offsetHeight, offsetWidth } = this.target;\n        const longestSide = Math.max(offsetHeight, offsetWidth);\n        radius = radius / longestSide;\n        const dropPosition = new Float32Array([\n            (2 * x - offsetWidth) / longestSide,\n            (offsetHeight - 2 * y) / longestSide,\n        ]);\n        this.GL.viewport(0, 0, this.resolution, this.resolution);\n        this.GL.bindFramebuffer(this.GL.FRAMEBUFFER, this.Textures.writeFrame);\n        this.bindTexture(this.Textures.readTexture);\n        this.Shaders.drop(dropPosition, radius, strength);\n        this.Textures.drawQuad();\n        this.Textures.swapBufferIndices();\n    }\n    updateSize() {\n        const { offsetHeight, offsetWidth } = this.target;\n        if (offsetWidth !== this.canvas.width ||\n            offsetHeight !== this.canvas.height) {\n            this.canvas.width = offsetWidth;\n            this.canvas.height = offsetHeight;\n            void this.reloadImage();\n        }\n    }\n    show() {\n        this.visible = true;\n        this.canvas.style.display = \"block\";\n        this.hideCSSBackground();\n    }\n    hide() {\n        this.visible = false;\n        this.canvas.style.display = \"none\";\n        this.restoreCSSBackground();\n    }\n    pause() {\n        this.running = false;\n    }\n    play() {\n        this.running = true;\n    }\n    destroy() {\n        this.target.style.zIndex = this.StyleCache.get(\"zIndex\");\n        this.target.style.position = this.StyleCache.get(\"position\");\n        // @ts-ignore\n        this.GL = null;\n        window.removeEventListener(\"resize\", this.updateSize);\n        this.target.removeEventListener(\"mousedown\", this.onClick);\n        this.target.removeEventListener(\"touchmove\", this.onTouch);\n        this.target.removeEventListener(\"touchstart\", this.onTouch);\n        this.target.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.target.removeChild(this.canvas);\n        this.restoreCSSBackground();\n        if (this.ID) {\n            Animations.delete(this.ID);\n        }\n        this.destroyed = true;\n    }\n    reloadImage() {\n        this.restoreCSSBackground();\n        this.StyleCache.evict(\"originalCSSBackgroundImage\");\n        return this.loadImage();\n    }\n    cacheTargetPositions() {\n        this.StyleCache.initialize(this.target);\n        this.target.style.zIndex = \"0\";\n        this.target.style.position = \"relative\";\n    }\n    setupWebGL() {\n        this.Textures.getBrowserExtensions();\n        window.addEventListener(\"resize\", this.updateSize);\n        this.initializeWebGL();\n        this.visible = true;\n        this.running = true;\n        this.initialized = true;\n        this.setupPointerEvents();\n        this.ID = Animations.register(() => {\n            if (!this.destroyed) {\n                this.step();\n            }\n        });\n    }\n    setupPointerEvents() {\n        this.target.addEventListener(\"mousedown\", this.onClick);\n        this.target.addEventListener(\"mousemove\", this.onMouseMove);\n        this.target.addEventListener(\"touchmove\", this.onTouch, { passive: true });\n        this.target.addEventListener(\"touchstart\", this.onTouch, { passive: true });\n    }\n    onClick(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius * 1.5, 0.14);\n    }\n    onTouch(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        const touches = e.changedTouches;\n        for (let i = 0; i < touches.length; i++) {\n            this.dropAtPointer(touches[i], this.dropRadius, 0.01);\n        }\n    }\n    onMouseMove(e) {\n        if (!this.pointerEventsEnabled) {\n            return;\n        }\n        this.dropAtPointer(e, this.dropRadius, 0.01);\n    }\n    get pointerEventsEnabled() {\n        return this.visible && this.running && this.interactive;\n    }\n    step() {\n        if (!this.visible) {\n            return;\n        }\n        this.computeTextureBoundaries();\n        if (this.running) {\n            this.update();\n        }\n        this.render();\n    }\n    computeBackgroundSize(backgroundSize, container) {\n        const BW = this.StyleCache.get(\"backgroundWidth\");\n        const BH = this.StyleCache.get(\"backgroundHeight\");\n        if (backgroundSize == \"cover\") {\n            const scale = Math.max(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        if (backgroundSize == \"contain\") {\n            const scale = Math.min(container.width / BW, container.height / BH);\n            return [BW * scale, BH * scale];\n        }\n        const BP = backgroundSize.split(\" \");\n        let backgroundWidth = BP[0] || \"\";\n        let backgroundHeight = BP[1] || backgroundWidth;\n        if (this.isPercentage(backgroundWidth)) {\n            backgroundWidth = (container.width * parseFloat(backgroundWidth)) / 100;\n        }\n        else if (backgroundWidth != \"auto\") {\n            backgroundWidth = parseFloat(backgroundWidth);\n        }\n        if (this.isPercentage(backgroundHeight)) {\n            backgroundHeight =\n                (container.height * parseFloat(backgroundHeight)) / 100;\n        }\n        else if (backgroundHeight != \"auto\") {\n            backgroundHeight = parseFloat(backgroundHeight);\n        }\n        if (backgroundWidth == \"auto\" && backgroundHeight == \"auto\") {\n            backgroundWidth = BW;\n            backgroundHeight = BH;\n        }\n        else {\n            if (backgroundWidth == \"auto\") {\n                backgroundWidth = BW * (backgroundHeight / BH);\n            }\n            if (backgroundHeight == \"auto\") {\n                backgroundHeight = BH * (backgroundWidth / BW);\n            }\n        }\n        return [backgroundWidth, backgroundHeight];\n    }\n    computeTextureBoundaries() {\n        const { backgroundSize, backgroundAttachment, backgroundPosition: BP, } = window.getComputedStyle(this.target);\n        const backgroundPosition = this.translateBackgroundPosition(BP);\n        let container;\n        if (backgroundAttachment == \"fixed\") {\n            container = {\n                left: window.scrollX,\n                top: window.scrollY,\n                width: window.innerWidth,\n                height: window.innerHeight,\n            };\n        }\n        else {\n            const { offsetTop, offsetLeft, offsetHeight, offsetWidth } = this.target;\n            container = {\n                top: offsetTop,\n                left: offsetLeft,\n                width: offsetWidth,\n                height: offsetHeight,\n            };\n        }\n        const [width, height] = this.computeBackgroundSize(backgroundSize, container);\n        let [x, y] = backgroundPosition;\n        if (this.isPercentage(x)) {\n            x = container.left + ((container.width - width) * parseFloat(x)) / 100;\n        }\n        else {\n            x = container.left + parseFloat(x);\n        }\n        if (this.isPercentage(y)) {\n            y = container.top + ((container.height - height) * parseFloat(y)) / 100;\n        }\n        else {\n            y = container.top + parseFloat(y);\n        }\n        const { offsetLeft, offsetTop, offsetHeight, offsetWidth } = this.target;\n        const floats = new Float32Array([\n            (offsetLeft - x) / width,\n            (offsetTop - y) / height,\n        ]);\n        this.Shaders.renderProgram.uniforms.topLeft = floats;\n        this.Shaders.renderProgram.uniforms.bottomRight = new Float32Array([\n            floats[0] + offsetWidth / width,\n            floats[1] + offsetHeight / height,\n        ]);\n        const maxSide = Math.max(this.canvas.width, this.canvas.height);\n        this.Shaders.renderProgram.uniforms.containerRatio = new Float32Array([\n            this.canvas.width / maxSide,\n            this.canvas.height / maxSide,\n        ]);\n    }\n    translateBackgroundPosition(value) {\n        const parts = value.split(\" \");\n        if (parts.length === 1) {\n            switch (value) {\n                case \"center\":\n                    return [\"50%\", \"50%\"];\n                case \"top\":\n                    return [\"50%\", \"0\"];\n                case \"bottom\":\n                    return [\"50%\", \"100%\"];\n                case \"left\":\n                    return [\"0\", \"50%\"];\n                case \"right\":\n                    return [\"100%\", \"50%\"];\n                default:\n                    return [value, \"50%\"];\n            }\n        }\n        return parts.map(part => {\n            switch (value) {\n                case \"center\":\n                    return \"50%\";\n                case \"top\":\n                case \"left\":\n                    return \"0\";\n                case \"right\":\n                case \"bottom\":\n                    return \"100%\";\n                default:\n                    return part;\n            }\n        });\n    }\n    restoreCSSBackground() {\n        this.target.style.backgroundImage =\n            this.StyleCache.get(\"originalInlineCSS\") || \"\";\n    }\n    dropAtPointer(pointer, radius, strength) {\n        const { borderTopWidth, borderLeftWidth } = window.getComputedStyle(this.target);\n        const borderTop = parseInt(borderTopWidth || \"0\");\n        const borderLeft = parseInt(borderLeftWidth || \"0\");\n        const { offsetTop, offsetLeft } = this.target;\n        this.drop(pointer.pageX - offsetLeft - borderLeft, pointer.pageY - offsetTop - borderTop, radius, strength);\n    }\n}\n","import type { ReactNode } from \"react\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport { useClassNames } from \"@figliolia/classnames\";\nimport { Ripples } from \"@figliolia/ripples\";\nimport { useRouter } from \"State/Routing\";\nimport { selectDimensions, useScreen } from \"State/Screen\";\nimport \"./styles.scss\";\n\nexport const Page = memo(function Page({ name, children }: Props) {\n  const container = useRef<HTMLDivElement>(null);\n  const [width, height] = useScreen(selectDimensions);\n  const active = useRouter(state => state.screenActive);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n    const ripples = new Ripples(container.current, {\n      resolution: 512,\n      dropRadius: 10,\n      perturbance: 0.02,\n    });\n    return () => {\n      if (ripples) {\n        ripples.destroy();\n      }\n    };\n  });\n\n  const classes = useClassNames(\"page\", name, { active });\n\n  return (\n    <main\n      id=\"page\"\n      ref={container}\n      style={{ height, width }}\n      className={classes}>\n      <div className=\"content\" style={{ height, width }}>\n        {children}\n      </div>\n    </main>\n  );\n});\n\ninterface Props {\n  name: string;\n  children: ReactNode;\n}\n","import type { MouseEvent, TouchEvent } from \"react\";\nimport React, { Component } from \"react\";\nimport type { Coordinate, Props } from \"./types\";\nimport \"./styles.scss\";\n\nexport class Button3D extends Component<Props, State> {\n  private top = 0;\n  private left = 0;\n  private width = 0;\n  private height = 0;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      rotX: 0,\n      rotY: 0,\n      scale: 1,\n      bTransDur: 0.5,\n      boxShadow: \"none\",\n    };\n    this.touchMoveButton = this.touchMoveButton.bind(this);\n    this.mouseMoveButton = this.mouseMoveButton.bind(this);\n    this.touchEnterButton = this.touchEnterButton.bind(this);\n    this.mouseEnterButton = this.mouseEnterButton.bind(this);\n    this.mouseLeaveButton = this.mouseLeaveButton.bind(this);\n  }\n\n  override shouldComponentUpdate(\n    _: Props,\n    { rotX, rotY, bTransDur, scale, boxShadow }: State,\n  ) {\n    const curState = this.state;\n    if (rotX !== curState.rotX) return true;\n    else if (rotY !== curState.rotY) return true;\n    else if (scale !== curState.scale) return true;\n    else if (bTransDur !== curState.bTransDur) return true;\n    else if (boxShadow !== curState.boxShadow) return true;\n    return false;\n  }\n\n  private cacheTargetData(eventTarget: EventTarget) {\n    const target = eventTarget as HTMLButtonElement;\n    const { top, left, height, width } = target.getBoundingClientRect();\n    this.top = top;\n    this.height = height;\n    const offset = width * 0.2;\n    this.left = left - offset / 2;\n    this.width = width + width * 0.2;\n  }\n\n  private getRotations(x: number, y: number): [x: number, y: number] {\n    const mouseY = y - this.top;\n    const mouseX = x - this.left;\n    const offsetX = 0.5 - mouseX / this.width;\n    const offsetY = 0.5 - mouseY / this.height;\n    return [offsetY * 50, offsetX * 20];\n  }\n\n  private setFrame([x, y]: Coordinate, duration: number) {\n    this.setState({\n      rotX: x,\n      rotY: y,\n      bTransDur: `${duration}s`,\n      scale: 1.1,\n      boxShadow: `0 ${x}px ${\n        this.height / 5\n      }px rgba(0,0,0,0.5), ${x}px ${y}px ${this.width / 5}px rgba(0,0,0,0.45)`,\n    });\n  }\n\n  private mouseEnterButton({\n    clientX,\n    clientY,\n    currentTarget,\n  }: MouseEvent<HTMLButtonElement>) {\n    this.cacheTargetData(currentTarget);\n    this.setFrame(this.getRotations(clientX, clientY), 0.5);\n  }\n\n  private touchEnterButton({\n    currentTarget,\n    touches,\n  }: TouchEvent<HTMLButtonElement>) {\n    this.cacheTargetData(currentTarget);\n    this.setFrame(\n      this.getRotations(touches[0].clientX, touches[0].clientY),\n      0.5,\n    );\n  }\n\n  private mouseMoveButton({ clientX, clientY }: MouseEvent<HTMLButtonElement>) {\n    this.setFrame(this.getRotations(clientX, clientY), 0);\n  }\n\n  private touchMoveButton({ touches }: TouchEvent<HTMLButtonElement>) {\n    this.setFrame(this.getRotations(touches[0].clientX, touches[0].clientY), 0);\n  }\n\n  private mouseLeaveButton() {\n    this.setState({\n      rotX: 0,\n      rotY: 0,\n      scale: 1,\n      bTransDur: \"0.5s\",\n      boxShadow: \"none\",\n    });\n  }\n\n  override render() {\n    const { text, onClick } = this.props;\n    const { rotX, rotY, bTransDur, scale, boxShadow } = this.state;\n    return (\n      <button\n        onClick={onClick}\n        className=\"outline-button\"\n        onMouseEnter={this.mouseEnterButton}\n        onMouseMove={this.mouseMoveButton}\n        onMouseLeave={this.mouseLeaveButton}\n        onTouchStart={this.touchEnterButton}\n        onTouchEnd={this.mouseLeaveButton}\n        onTouchMove={this.touchMoveButton}\n        style={{\n          transform: `rotateX(${rotX}deg) rotateY(${rotY}deg) skew(-10deg) scale(${scale})`,\n          transitionDuration: `${bTransDur}`,\n          boxShadow,\n        }}>\n        <div>{text}</div>\n      </button>\n    );\n  }\n}\n\ninterface State {\n  rotX: number;\n  rotY: number;\n  bTransDur: number | string;\n  scale: number;\n  boxShadow: string;\n}\n\nexport * from \"./types\";\n"],"names":["Animations","register","callback","ID","this","callstack","Promise","resolve","then","nextFrame","remove","frame","animate","requestAnimationFrame","length","closeLoop","execute","cancelAnimationFrame","__publicField","Subscriptable","ImageLoader","constructor","Textures","GL","load","src","crossOrigin","image","Image","reject","onload","textureIze","onerror","setTransparent","isDataUri","wrapping","isPowerOfTwo","width","height","REPEAT","CLAMP_TO_EDGE","bindTexture","TEXTURE_2D","backgroundTexture","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","url","match","x","_Options","options","configuration","configure","imageUrl","dropRadius","resolution","interactive","perturbance","onInitialized","Object","assign","defaults","extractUrl","value","urlMatch","exec","Options","_Shaders","textureDelta","Float32Array","dropProgram","compileDrop","updateProgram","compileUpdate","uniform2fv","locations","delta","renderProgram","compileRender","drop","position","radius","strength","useProgram","id","center","uniform1f","render","topLeft","uniforms","bottomRight","containerRatio","uniform1i","samplerBackground","samplerRipples","createProgram","VERTEX_SHADER","DROP_PROGRAM","UPDATE_PROGRAM","RENDER_BACKGROUND_PROGRAM","RENDER_RIPPLE_PROGRAM","vertexSource","fragmentSource","Error","program","attachShader","compileSource","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","name","enableVertexAttribArray","regex","shaderCode","getUniformLocation","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","join","Shaders","StyleCache","Map","super","initialize","target","zIndex","backgroundImage","window","getComputedStyle","set","style","get","key","evict","_Textures","context","createImageData","quad","createBuffer","createBackground","drawQuad","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","TRIANGLE_FAN","firstTexture","textures","readTexture","bufferReadIndex","writeTexture","bufferWriteIndex","readFrame","frameBuffers","writeFrame","getBrowserExtensions","browserSupport","extensions","forEach","getExtension","linearSupport","arrayType","textureData","i","texture","createTexture","frameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","push","transparentPixels","swapBufferIndices","pixelStorei","UNPACK_FLIP_Y_WEBGL","ImageData","e","_a","document","createElement","getContext","detect","getExtensions","frameAndBuffer","configurations","getAll","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","config","configs","createConfig","OES_texture_half_float","HALF_FLOAT_OES","glType","nameLinear","configExtensions","canvas","extension","OES_texture_float","WebGL","positionCanvas","createGL","initializeWebGL","bufferData","STATIC_DRAW","loadImage","call","clearColor","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","hideCSSBackground","inlineCSS","viewport","enable","BLEND","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","disable","update","isPercentage","str","unit","activeTexture","TEXTURE0","offsetWidth","offsetHeight","top","right","bottom","left","appendChild","newImageSource","imageSource","loader","error","Ripples","onClick","bind","onTouch","updateSize","onMouseMove","cacheTargetPositions","setupWebGL","y","longestSide","Math","max","dropPosition","reloadImage","show","visible","display","hide","restoreCSSBackground","pause","running","play","destroy","removeEventListener","removeChild","delete","destroyed","addEventListener","initialized","setupPointerEvents","step","passive","pointerEventsEnabled","dropAtPointer","touches","changedTouches","computeTextureBoundaries","computeBackgroundSize","backgroundSize","container","BW","BH","scale","min","BP","split","backgroundWidth","backgroundHeight","parseFloat","backgroundAttachment","backgroundPosition","translateBackgroundPosition","scrollX","scrollY","innerWidth","innerHeight","offsetTop","offsetLeft","floats","maxSide","parts","map","part","pointer","borderTopWidth","borderLeftWidth","borderTop","parseInt","borderLeft","pageX","pageY","Page","memo","children","useRef","useScreen","selectDimensions","active","useRouter","state","screenActive","useEffect","current","ripples","classes","useClassNames","jsxRuntimeExports","jsx","ref","className","Button3D","Component","props","rotX","rotY","bTransDur","boxShadow","touchMoveButton","mouseMoveButton","touchEnterButton","mouseEnterButton","mouseLeaveButton","shouldComponentUpdate","_","curState","cacheTargetData","eventTarget","getBoundingClientRect","offset","getRotations","mouseY","offsetX","setFrame","duration","setState","clientX","clientY","currentTarget","text","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onTouchMove","transform","transitionDuration"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}